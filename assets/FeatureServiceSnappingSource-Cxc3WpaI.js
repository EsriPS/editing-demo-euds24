const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/WhereClause-dg9O4EEg.js","assets/TimeOnly-vNYE6bX9.js","assets/index-C1aGfQcb.js","assets/index-qkyhuh7d.css","assets/UnknownTimeZone-DhxWDwo9.js"])))=>i.map(i=>d[i]);
import{F as o,G as a,K as I,L as k,bP as Q,b6 as R,bU as x,gX as X,j1 as B,j2 as Y,j3 as ee,br as te,j4 as ie,bQ as re,j5 as A,cr as oe,gv as se,M as _,c5 as q,P as b,c9 as ne,dT as ae,fb as le,fh as de,gj as pe,cw as L,e4 as ue,cI as he,cS as ce,gu as ye,aF as U,fC as g,c8 as me,fi as D,gw as J,dC as ge,aE as fe}from"./index-C1aGfQcb.js";import{t as we}from"./memoize-DsJmrG76.js";import{h as K}from"./UpdatingHandles-DOPUoIlu.js";import{y as _e}from"./elevationInfoUtils-DQT3uSQq.js";import{t as N}from"./TileKey-DZd6gJy7.js";import{o as ve}from"./vec32-CmwgPQMd.js";import{W as Se,t as be,g as Ie}from"./boundedPlane-C18Ysvcq.js";import{v as He}from"./Editor-BZKF0HZM.js";import{o as Oe,i as ke}from"./queryEngineUtils-wzzn9YcW.js";import{h as $e}from"./WorkerHandle-C-9ArUR4.js";import{e as Te}from"./projectVectorToVector-Dtcb6Asj.js";import{z as Fe,p as Pe}from"./TileInfo-C4AYiz3R.js";import{E as Me}from"./debugFlags-CfZYxH5Q.js";import"./ElevationInfo-D7CBP7sd.js";import"./lengthUtils-CFwdZ3dz.js";import"./sphere-DuEd_sPX.js";import"./vec42-BHDxGccW.js";import"./vec4f64-o2zAXfmz.js";import"./mat3-Dg2BrR6m.js";import"./mat3f64-q3fE-ZOt.js";import"./plane-CM4t6fNH.js";import"./mat4f64-Dk4dwAN8.js";import"./quatf64-aQ5IuZRd.js";import"./vec2f64-CCfZVA9N.js";import"./lineSegment-C6H8qMyL.js";import"./vec2-D9okOEat.js";import"./projectBuffer-CZ7yaGuo.js";import"./Spinner-CEWOvPN4.js";import"./AttachmentInfo-Cg9fIPGU.js";import"./legacyIcon-CEIp6Pa9.js";import"./projection-BOBOhWzm.js";import"./FeatureLayerBase-BNIuOgAL.js";import"./commonProperties-Drl05DKJ.js";import"./HeightModelInfo-kVs8dE0B.js";import"./arcgisLayerUrl-BkZy4Mr3.js";import"./featureLayerUtils-Dy99w2fj.js";import"./Query-LPs1Zyw4.js";import"./FullTextSearch-Cza0yp3f.js";import"./TimeExtent-DGiXUfis.js";import"./timeUtils-X0MXjtQ8.js";import"./jsonUtils-CWFaUb2E.js";import"./UniqueValueRenderer-CAZbf8NT.js";import"./RendererLegendOptions-CULirduz.js";import"./diffUtils-DMLidw0V.js";import"./colorRamps-D4VCsfmX.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./visualVariableUtils-dx28E4EQ.js";import"./jsonUtils-BWWcP_yB.js";import"./defaults-Dbnhuv3C.js";import"./defaultsJSON-GKolV7NZ.js";import"./styleUtils-CEgUrR2a.js";import"./LRUCache-DbPTy7LA.js";import"./Version-DD-eRUXC.js";import"./FieldsIndex-BrdRr9E_.js";import"./UnknownTimeZone-DhxWDwo9.js";import"./OverrideHelper-D-UVQ00R.js";import"./colorUtils-BWiljOUv.js";import"./utils-D7agaEG-.js";import"./enums-CmIX1y88.js";import"./quantizationUtils-DbJV_fl5.js";import"./heatmapUtils-D0BPLm9w.js";import"./LayerFloorInfo-DzoJncEV.js";import"./Relationship-CBhq9gYu.js";import"./serviceCapabilitiesUtils-B23--4px.js";import"./arcade-DfpF5wFh.js";import"./TimeOnly-vNYE6bX9.js";import"./ImmutableArray-BPVd6ESQ.js";import"./FeatureLayer-DGRhhm0K.js";import"./MultiOriginJSONSupport-Qqzd52Lf.js";import"./Layer-CneDw8eF.js";import"./workers-CeelWDzo.js";import"./editsZScale-8GE3gysf.js";import"./queryZScale-D-ZT69l7.js";import"./FeatureSet-CeKoTEEO.js";import"./APIKeyMixin-BrvyKlIW.js";import"./ArcGISService-C1oUW8BT.js";import"./BlendLayer-CG9LFMxd.js";import"./jsonUtils-n3e_wlfQ.js";import"./parser-C4Qiz3JH.js";import"./utils-sqJe3zMg.js";import"./CustomParametersMixin-BhjpsNjD.js";import"./EditBusLayer-DCXZWvgn.js";import"./FeatureEffectLayer-gWJrS8gr.js";import"./FeatureEffect-B5YAe6Lk.js";import"./FeatureReductionLayer-DuxcLofN.js";import"./FeatureReductionSelection-tRCh97wj.js";import"./labelingInfo-BV0df7F6.js";import"./labelUtils-C_ZaLudT.js";import"./MD5-C9MwAd2G.js";import"./OperationalLayer-nNeN4Mrb.js";import"./OrderedLayer-B8Gw_A9P.js";import"./OrderByInfo-k2G4k_zV.js";import"./PortalLayer-Bqf_dhsv.js";import"./portalItemUtils-Cy9KvMYK.js";import"./RefreshableLayer-CwxQNwd3.js";import"./ScaleRangeLayer-66YiyNPI.js";import"./TemporalLayer-CR5q7V2k.js";import"./TimeInfo-CY1-cj-U.js";import"./FeatureTemplate-DJBXu3Te.js";import"./FeatureType-JHO2oVJp.js";import"./fieldProperties-CoDAhoou.js";import"./versionUtils-DBm9Te4x.js";import"./styleUtils-CFywnZa6.js";import"./popupUtils-BA1X4qoc.js";import"./AlphaCutoff-UcccL64p.js";import"./interfaces-CL2NbQte.js";import"./symbolUtils-BmmDXP-E.js";import"./utils-C2gvZghy.js";import"./mat2df32-BR-p9z6z.js";import"./webStyleSymbolUtils-kO7zmqzd.js";import"./GraphicsLayer-7fnK8PA0.js";import"./GraphicsCollection-BlUFPpxh.js";import"./screenUtils-CLE_gLy7.js";import"./signal-CRiDvIIF.js";import"./utils-CS8i_70G.js";import"./drapedUtils-BnpEPkkO.js";import"./infoFor3D-C0hFfS1m.js";import"./ViewingMode-HRfKv6NR.js";import"./utils-BQBvadb7.js";import"./widget-3rB5q3_K.js";import"./uploadAssetErrors-Cy9k5t87.js";import"./VertexSnappingCandidate-CbF2FeQ4.js";import"./PointSnappingHint-DLpaNTCp.js";import"./projectPointToVector-ByIVLKML.js";const Ce=[[0,179,255],[117,62,128],[0,104,255],[215,189,166],[32,0,193],[98,162,206],[102,112,129],[52,125,0],[142,118,246],[138,83,0],[92,122,255],[122,55,83],[0,142,255],[81,40,179],[0,200,244],[13,24,127],[0,170,147],[19,58,241],[22,44,35]];let O=class extends k{constructor(e){super(e),this.updating=!1,this.enablePolygons=!0,this.enableLabels=!0,this._polygons=new Map,this._labels=new Map,this._enabled=!0}initialize(){this._symbols=Ce.map(e=>new Q({color:[e[0],e[1],e[2],.6],outline:{color:"black",width:1}})),this.update()}destroy(){this._enabled=!1,this.clear()}get enabled(){return this._enabled}set enabled(e){this._enabled!==e&&(this._enabled=e,this.update())}update(){if(!this._enabled)return void this.clear();const e=n=>{if(n.label!=null)return n.label;let l=n.lij.toString();return n.loadPriority!=null&&(l+=` (${n.loadPriority})`),l},t=this.getTiles(),i=new Array,s=new Set((this._labels.size,this._labels.keys()));t.forEach((n,l)=>{const p=n.lij.toString();s.delete(p);const h=n.lij[0],c=n.geometry;if(this.enablePolygons&&!this._polygons.has(p)){const m=new R({geometry:c,symbol:this._symbols[h%this._symbols.length]});this._polygons.set(p,m),i.push(m)}if(this.enableLabels){const m=e(n),$=l/(t.length-1),H=A(0,200,$),T=A(20,6,$)/.75,F=n.loadPriority!=null&&n.loadPriority>=t.length,P=new x([H,F?0:H,F?0:H]),M=this.view.type==="3d"?()=>new X({verticalOffset:new B({screenLength:40/.75}),callout:new Y({color:new x("white"),border:new ee({color:new x("black")})}),symbolLayers:new te([new ie({text:m,halo:{color:"white",size:1/.75},material:{color:P},size:T})])}):()=>new re({text:m,haloColor:"white",haloSize:1/.75,color:P,size:T}),S=this._labels.get(p);if(S){const d=M();S.symbol!=null&&JSON.stringify(d)===JSON.stringify(S.symbol)||(S.symbol=d)}else{const d=new R({geometry:c.extent.center,symbol:M()});this._labels.set(p,d),i.push(d)}}});const r=new Array;s.forEach(n=>{const l=this._polygons.get(n);l!=null&&(r.push(l),this._polygons.delete(n));const p=this._labels.get(n);p!=null&&(r.push(p),this._labels.delete(n))}),this.view.graphics.removeMany(r),this.view.graphics.addMany(i)}clear(){this.view.graphics.removeMany(Array.from(this._polygons.values())),this.view.graphics.removeMany(Array.from(this._labels.values())),this._polygons.clear(),this._labels.clear()}};o([a({constructOnly:!0})],O.prototype,"view",void 0),o([a({readOnly:!0})],O.prototype,"updating",void 0),o([a()],O.prototype,"enabled",null),O=o([I("esri.views.support.TileTreeDebugger")],O);function E(e,t){return be(t.extent,W),Ie(W,ve(Ee,e.x,e.y,0))}const W=Se(),Ee=oe();let f=class extends k{get tiles(){const t=this.tilesCoveringView,i=this.pointOfInterest!=null?this.pointOfInterest:this.view.center;return t.sort((s,r)=>E(i,s)-E(i,r)),t}_scaleEnabled(){return se(this.view.scale,this.layer.minScale||0,this.layer.maxScale||0)}get tilesCoveringView(){if(!this.view.ready||!this.view.featuresTilingScheme||!this.view.state||this.tileInfo==null)return[];if(!this._scaleEnabled)return[];const{spans:t,lodInfo:i}=this.view.featuresTilingScheme.getTileCoverage(this.view.state,0),{level:s}=i,r=[];for(const{row:n,colFrom:l,colTo:p}of t)for(let h=l;h<=p;h++){const c=i.normalizeCol(h),m=new N(null,s,n,c);this.tileInfo.updateTileInfo(m),r.push(m)}return r}get tileInfo(){var t;return((t=this.view.featuresTilingScheme)==null?void 0:t.tileInfo)??null}get tileSize(){return this.tileInfo!=null?this.tileInfo.size[0]:256}constructor(t){super(t),this.pointOfInterest=null}initialize(){this.addHandles(_(()=>{var t,i;return(i=(t=this.view)==null?void 0:t.state)==null?void 0:i.viewpoint},()=>this.notifyChange("tilesCoveringView"),q))}};o([a({readOnly:!0})],f.prototype,"tiles",null),o([a({readOnly:!0})],f.prototype,"_scaleEnabled",null),o([a({readOnly:!0})],f.prototype,"tilesCoveringView",null),o([a({readOnly:!0})],f.prototype,"tileInfo",null),o([a({readOnly:!0})],f.prototype,"tileSize",null),o([a({constructOnly:!0})],f.prototype,"view",void 0),o([a({constructOnly:!0})],f.prototype,"layer",void 0),o([a()],f.prototype,"pointOfInterest",void 0),f=o([I("esri.views.2d.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTiles2D")],f);let w=class extends k{get tiles(){const t=this.tilesCoveringView,i=this._effectivePointOfInterest;if(i!=null){const s=t.map(r=>E(i,r));for(let r=1;r<s.length;r++)if(s[r-1]>s[r])return t.sort((n,l)=>E(i,n)-E(i,l)),t.slice()}return t}get tilesCoveringView(){var t,i;return(((i=(t=this.view.featureTiles)==null?void 0:t.tiles)==null?void 0:i.toArray())??[]).map(ze)}get tileInfo(){var t,i;return((i=(t=this.view.featureTiles)==null?void 0:t.tilingScheme)==null?void 0:i.toTileInfo())??null}get tileSize(){var t;return((t=this.view.featureTiles)==null?void 0:t.tileSize)??256}get _effectivePointOfInterest(){var i;const t=this.pointOfInterest;return t??((i=this.view.pointsOfInterest)==null?void 0:i.focus.location)}constructor(t){super(t),this.pointOfInterest=null}initialize(){this.addHandles(_(()=>this.view.featureTiles,t=>{this.removeHandles(G),t&&this.addHandles(t.addClient(),G)},b))}};function ze({lij:[e,t,i],extent:s}){return new N(`${e}/${t}/${i}`,e,t,i,s)}o([a({readOnly:!0})],w.prototype,"tiles",null),o([a({readOnly:!0})],w.prototype,"tilesCoveringView",null),o([a({readOnly:!0})],w.prototype,"tileInfo",null),o([a({readOnly:!0})],w.prototype,"tileSize",null),o([a({constructOnly:!0})],w.prototype,"view",void 0),o([a()],w.prototype,"pointOfInterest",void 0),o([a()],w.prototype,"_effectivePointOfInterest",null),w=o([I("esri.views.3d.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTiles3D")],w);const G="feature-tiles";let z=class extends O{constructor(e){super(e)}initialize(){const e=setInterval(()=>this._fetchDebugInfo(),2e3);this.addHandles(ne(()=>clearInterval(e)))}getTiles(){if(!this._debugInfo)return[];const e=new Map,t=new Map;this._debugInfo.storedTiles.forEach(r=>{e.set(r.data.id,r.featureCount)}),this._debugInfo.pendingTiles.forEach(r=>{e.set(r.data.id,r.featureCount),t.set(r.data.id,r.state)});const i=r=>{const n=t.get(r),l=e.get(r)??"?";return n?`${n}:${l}
${r}`:`store:${l}
${r}`},s=new Map;return this._debugInfo.storedTiles.forEach(r=>{s.set(r.data.id,r.data)}),this._debugInfo.pendingTiles.forEach(r=>{s.set(r.data.id,r.data)}),Array.from(s.values()).map(r=>({lij:[r.level,r.row,r.col],geometry:ae.fromExtent(le(r.extent,this.view.spatialReference)),label:i(r.id)}))}_fetchDebugInfo(){this.handle.getDebugInfo(null).then(e=>{this._debugInfo=e,this.update()})}};o([a({constructOnly:!0})],z.prototype,"handle",void 0),z=o([I("esri.views.interactive.snapping.featureSources.WorkerTileTreeDebugger")],z);let y=class extends k{get updating(){return this._updatingHandles.updating||this._workerHandleUpdating}constructor(e){super(e),this._updatingHandles=new K,this._suspendController=null,this.schedule=null,this.hasZ=!1,this.elevationAlignPointsInFeatures=async t=>{const i=[];for(const{points:s}of t.pointsInFeatures)for(const{z:r}of s)i.push(r);return{elevations:i,drapedObjectIds:new Set,failedObjectIds:new Set}},this.queryForSymbologySnapping=async()=>({candidates:[],sourceCandidateIndices:[]}),this.availability=0,this._workerHandleUpdating=!0,this.updateOutFields=de(async(t,i)=>{await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("updateOutFields",[...t],i)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},i))})}destroy(){this._suspendController=pe(this._suspendController),this._workerHandle.destroy(),this._updatingHandles.destroy()}initialize(){this._workerHandle=new Ne(this.schedule,{alignElevation:async(e,{signal:t})=>({result:await this.elevationAlignPointsInFeatures(e.query,t)}),getSymbologyCandidates:async(e,{signal:t})=>({result:await this.queryForSymbologySnapping(e,t)})}),this.addHandles([this._workerHandle.on("notify-updating",({updating:e})=>this._workerHandleUpdating=e),this._workerHandle.on("notify-availability",({availability:e})=>this._set("availability",e))])}async setup(e,t){var r;const i=xe(e.layer);if(i==null)return;const s={configuration:Z(e.configuration),serviceInfo:i,spatialReference:e.spatialReference.toJSON(),hasZ:this.hasZ,elevationInfo:(r=e.layer.elevationInfo)==null?void 0:r.toJSON()};await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("setup",s,t)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async configure(e,t){const i=Z(e);await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("configure",i,t)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async refresh(e){await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("refresh",{},e)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},e))}async fetchCandidates(e,t){const{point:i,filter:s,coordinateHelper:r}=e,n={...e,point:Te(i[0],i[1],i[2],r.spatialReference.toJSON()),filter:s==null?void 0:s.toJSON()};return this._workerHandle.invoke(n,t)}async updateTiles(e,t){const i={tiles:e.tiles,tileInfo:e.tileInfo!=null?e.tileInfo.toJSON():null,tileSize:e.tileSize};await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("updateTiles",i,t)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async handleEdits({historicMoment:e,addedFeatures:t,deletedFeatures:i,updatedFeatures:s},r){const n={historicMoment:e,addedFeatures:(t==null?void 0:t.map(({objectId:l})=>l).filter(L))??[],deletedFeatures:(i==null?void 0:i.map(({objectId:l,globalId:p})=>({objectId:l,globalId:p})))??[],updatedFeatures:(s==null?void 0:s.map(({objectId:l})=>l).filter(L))??[]};await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("handleEdits",n,r)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},r))}async setHistoricMoment(e,t){await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("setHistoricMoment",{moment:e},t))}getDebugInfo(e){return this._workerHandle.invokeMethod("getDebugInfo",{},e)}async notifyElevationSourceChange(){await this._workerHandle.invokeMethod("notifyElevationSourceChange",{})}async notifySymbologyChange(){await this._workerHandle.invokeMethod("notifySymbologyChange",{})}async setSymbologySnappingSupported(e){await this._workerHandle.invokeMethod("setSymbologySnappingSupported",e)}async setSuspended(e){var t;(t=this._suspendController)==null||t.abort(),this._suspendController=new AbortController,await this._workerHandle.invokeMethod("setSuspended",e,this._suspendController.signal)}};function Z(e){return{filter:e.filter!=null?e.filter.toJSON():null,customParameters:e.customParameters,viewType:e.viewType}}function xe(e){var t,i;return e.geometryType==="multipatch"||e.geometryType==="mesh"?null:{url:((t=e.parsedUrl)==null?void 0:t.path)??"",fieldsIndex:e.fieldsIndex.toJSON(),geometryType:ue.toJSON(e.geometryType),capabilities:e.capabilities,objectIdField:e.objectIdField,globalIdField:e.globalIdField,spatialReference:e.spatialReference.toJSON(),timeInfo:(i=e.timeInfo)==null?void 0:i.toJSON()}}o([a({constructOnly:!0})],y.prototype,"schedule",void 0),o([a({constructOnly:!0})],y.prototype,"hasZ",void 0),o([a({constructOnly:!0})],y.prototype,"elevationAlignPointsInFeatures",void 0),o([a({constructOnly:!0})],y.prototype,"queryForSymbologySnapping",void 0),o([a({readOnly:!0})],y.prototype,"updating",null),o([a({readOnly:!0})],y.prototype,"availability",void 0),o([a()],y.prototype,"_workerHandleUpdating",void 0),y=o([I("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceSnappingSourceWorkerHandle")],y);class Ne extends $e{constructor(t,i){super("FeatureServiceSnappingSourceWorker","fetchCandidates",{},t,{strategy:"dedicated",client:i})}}let v=class extends k{get tiles(){return[new N("0/0/0",0,0,0,he(-1e8,-1e8,1e8,1e8))]}get tileInfo(){return new Fe({origin:new ce({x:-1e8,y:1e8,spatialReference:this.layer.spatialReference}),size:[512,512],lods:[new Pe({level:0,scale:1,resolution:390625})],spatialReference:this.layer.spatialReference})}get tileSize(){return this.tileInfo.size[0]}constructor(e){super(e),this.pointOfInterest=null}};o([a({readOnly:!0})],v.prototype,"tiles",null),o([a({readOnly:!0})],v.prototype,"tileInfo",null),o([a({readOnly:!0})],v.prototype,"tileSize",null),o([a({constructOnly:!0})],v.prototype,"layer",void 0),o([a()],v.prototype,"pointOfInterest",void 0),v=o([I("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTilesSimple")],v);let u=class extends k{get _updateTilesParameters(){return{tiles:this._tilesOfInterest.tiles,tileInfo:this._tilesOfInterest.tileInfo,tileSize:this._tilesOfInterest.tileSize}}get _layerView(){var e;return(e=this.view)==null?void 0:e.allLayerViews.find(t=>t.layer===this._layer)}get _isSuspended(){var e;return ye(this._layer)&&!this.layerSource.sublayerSources.some(t=>t.enabled&&t.layer.visible)?!0:!!this.view&&(((e=this._layerView)==null?void 0:e.suspended)!==!1||!this.layerSource.enabled)}get updating(){var e;return((e=this._workerHandle)==null?void 0:e.updating)||this._updatingHandles.updating}get _outFields(){var m,$,H,T,F,P,M,S;const{view:e,_layerView:t,layerSource:i}=this,{layer:s}=i,{fieldsIndex:r,timeInfo:n,floorInfo:l,subtypeField:p}=s,h=t&&"filter"in t?t.filter:null,c=h!=null&&h.where&&h.where!=="1=1"?this._getOrLoadWhereFields(h.where,r):[];if(h!=null&&h.timeExtent&&n){const{startField:d,endField:C}=n,j=((m=r.get(d))==null?void 0:m.name)??d,V=(($=r.get(C))==null?void 0:$.name)??C;j&&c.push(j),V&&c.push(V)}if(e!=null&&e.map&&He(e.map)&&((H=e.map.utilityNetworks)!=null&&H.find(d=>d.isUtilityLayer(s)))){const d=(T=s.fieldsIndex.get("assetGroup"))==null?void 0:T.name,C=(F=s.fieldsIndex.get("assetType"))==null?void 0:F.name;d&&C&&(c.push(d),c.push(C))}if(s&&(l!=null&&l.floorField)&&((P=e==null?void 0:e.floors)!=null&&P.length)){const d=((M=r.get(l.floorField))==null?void 0:M.name)??l.floorField;d&&c.push(d)}if(p){const d=((S=r.get(p))==null?void 0:S.name)??p;d&&c.push(d)}return new Set(c)}get configuration(){const{view:e}=this,{apiKey:t,customParameters:i}=this._layer,s=e!=null?e.type:"2d";return{filter:this._layer.createQuery(),customParameters:t?{...i,token:t}:i,viewType:s}}get availability(){var e;return((e=this._workerHandle)==null?void 0:e.availability)??0}get _layer(){return this.layerSource.layer}constructor(e){super(e),this._updatingHandles=new K,this._workerHandle=null,this._debug=null,this._memoizedMakeGetGroundElevation=we(ke)}initialize(){let e;const t=this.view;if(t==null||t.destroyed)this._tilesOfInterest=new v({layer:this._layer}),e=this._workerHandle=new y;else switch(t.type){case"2d":this._tilesOfInterest=new f({view:t,layer:this._layer}),e=this._workerHandle=new y;break;case"3d":{const{resourceController:i}=t,s=this._layer;this._tilesOfInterest=new w({view:t}),e=this._workerHandle=new y({schedule:r=>i.immediate.schedule(r),hasZ:this._layer.hasZ&&(this._layer.returnZ??!0),elevationAlignPointsInFeatures:async(r,n)=>{const l=await t.whenLayerView(s);return U(n),l.elevationAlignPointsInFeatures(r,n)},queryForSymbologySnapping:async(r,n)=>{const l=await t.whenLayerView(s);return U(n),l.queryForSymbologySnapping(r,n)}}),this.addHandles([t.elevationProvider.on("elevation-change",({context:r})=>{const{elevationInfo:n}=s;_e(r,n)&&g(e.notifyElevationSourceChange())}),_(()=>s.elevationInfo,()=>g(e.notifyElevationSourceChange()),b),_(()=>{var r,n;return(n=(r=this._layerView)==null?void 0:r.layer)==null?void 0:n.renderer},()=>g(e.notifySymbologyChange()),b),_(()=>{var r;return((r=this._layerView)==null?void 0:r.symbologySnappingSupported)??!1},r=>g(e.setSymbologySnappingSupported(r)),b),me(()=>{var r;return(r=this._layerView)==null?void 0:r.layer},["edits","apply-edits","graphic-update"],()=>e.notifySymbologyChange())]);break}}this.addHandles([D(e)]),g(e.setup({layer:this._layer,spatialReference:this.spatialReference,configuration:this.configuration},null)),this._updatingHandles.add(()=>this._updateTilesParameters,()=>g(e.updateTiles(this._updateTilesParameters,null)),b),this.addHandles([_(()=>this.configuration,i=>g(e.configure(i,null)),q),_(()=>this._layer.historicMoment,i=>g(e.setHistoricMoment(i)),J),_(()=>this._outFields,i=>g(e.updateOutFields(i)),b),_(()=>this._isSuspended,i=>g(e.setSuspended(i)),J)]),t!=null&&this.addHandles(_(()=>Me.FEATURE_SERVICE_SNAPPING_SOURCE_TILE_TREE_SHOW_TILES,i=>{i&&!this._debug?(this._debug=new z({view:t,handle:e}),this.addHandles(D(this._debug),"debug")):!i&&this._debug&&this.removeHandles("debug")},b)),this.addHandles([this.layerSource.layer.on("edits",i=>g(e.handleEdits(i,null))),this.layerSource.layer.on("apply-edits",i=>this._updatingHandles.addPromise(i.result))])}destroy(){this._updatingHandles.destroy()}refresh(){var e;(e=this._workerHandle)==null||e.refresh(null)}async fetchCandidates(e,t){const{coordinateHelper:i,point:s}=e;this._tilesOfInterest.pointOfInterest=i.arrayToPoint(s);const r=this._memoizedMakeGetGroundElevation(this.view,i.spatialReference);return(await this._workerHandle.fetchCandidates({...e},t)).candidates.map(n=>Oe(n,r))}getDebugInfo(e){return this._workerHandle.getDebugInfo(e)}_getOrLoadWhereFields(e,t){const{_whereModule:i}=this;if(!this._loadWhereModuleTask&&!i){const s=ge(async()=>{const r=await fe(()=>import("./WhereClause-dg9O4EEg.js").then(n=>n.W),__vite__mapDeps([0,1,2,3,4]));return this._whereModule=r.WhereClause,this._whereModule});return this._loadWhereModuleTask=s,this._updatingHandles.addPromise(s.promise),[]}if(!i)return[];try{return i.create(e,{fieldsIndex:t}).fieldNames}catch{return[]}}};o([a({constructOnly:!0})],u.prototype,"spatialReference",void 0),o([a({constructOnly:!0})],u.prototype,"layerSource",void 0),o([a({constructOnly:!0})],u.prototype,"view",void 0),o([a()],u.prototype,"_tilesOfInterest",void 0),o([a({readOnly:!0})],u.prototype,"_updateTilesParameters",null),o([a()],u.prototype,"_layerView",null),o([a()],u.prototype,"_isSuspended",null),o([a({readOnly:!0})],u.prototype,"updating",null),o([a()],u.prototype,"_outFields",null),o([a({readOnly:!0})],u.prototype,"configuration",null),o([a({readOnly:!0})],u.prototype,"availability",null),o([a()],u.prototype,"_loadWhereModuleTask",void 0),o([a()],u.prototype,"_whereModule",void 0),u=o([I("esri.views.interactive.snapping.featureSources.FeatureServiceSnappingSource")],u);export{u as FeatureServiceSnappingSource};

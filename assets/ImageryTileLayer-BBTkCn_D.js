const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/index-C1aGfQcb.js","assets/index-qkyhuh7d.css","assets/imageryUtils-CR0ILpHv.js","assets/utils-BI31Ke1l.js","assets/saveAPIKeyUtils-BWiJCGqJ.js","assets/multiOriginJSONSupportUtils-C0wm8_Yw.js","assets/jsonContext-DJAfzMqt.js","assets/portalItemUtils-Cy9KvMYK.js","assets/projection-BOBOhWzm.js","assets/projectBuffer-CZ7yaGuo.js","assets/saveUtils-DXB-y_0Z.js"])))=>i.map(i=>d[i]);
import{F as b,G as S,K as Q,ay as It,aA as ne,dd as Je,cS as A,cu as L,aO as P,aR as lt,b8 as H,cd as bt,aE as Ae,cx as Ve,dT as Rt,f8 as vt,T as St,W as Tt,gp as _t,df as Ft,bU as kt,k0 as Mt,ev as ct,k1 as Ct,cw as Pe,b3 as Ot,cg as Pt,R as $t,aT as Nt,b0 as Dt,fh as Et,aH as Bt,b2 as ue,M as Jt,bc as At}from"./index-C1aGfQcb.js";import{S as Lt}from"./MultiOriginJSONSupport-Qqzd52Lf.js";import{f as Ht}from"./Layer-CneDw8eF.js";import{l as zt}from"./ArcGISService-C1oUW8BT.js";import{l as Wt}from"./BlendLayer-CG9LFMxd.js";import{e as Gt}from"./CustomParametersMixin-BhjpsNjD.js";import{a as jt,c as Ut,N as $e,l as qt,d as Vt,b as Yt,g as Xt,e as Ye,W as Xe,z as Kt,L as Qt,U as Zt,E as ei,q as Ke,t as ti,f as ii,h as si,o as ri}from"./RasterPresetRendererMixin-Baw42nFF.js";import{y as ut}from"./arcgisLayerUrl-BkZy4Mr3.js";import{p as ht,y as ni}from"./commonProperties-Drl05DKJ.js";import{h as ft,w as mt,a as ai,i as oi,p as Le,d as Qe,o as li,f as Ze,g as ci}from"./multidimensionalUtils-UxTdO3A1.js";import{z as te,p as ui}from"./TileInfo-C4AYiz3R.js";import{j as hi,n as Re,m as He,_ as fi,a as ve,h as mi,g as ze,P as pi,r as di,b as et,F as yi,U as gi,N as xi,c as de,B as wi,L as Ii,D as bi,R as Ri}from"./RasterSymbolizer-BiNjl-w3.js";import{i as tt,m as it,x as st,h as vi,s as Si}from"./RawBlockCache-BQBJNs05.js";import{l as Ti,u as _i}from"./pixelRangeUtils-DR2RxTkt.js";import{U as Te,D as pt,R as Fi,u as ki,l as Mi,g as V,f as Ci,s as Oi,E as Pi,W as $i,T as Ni}from"./dataUtils-BOvMQ41s.js";import{V as ye,v as Ne,I as rt,l as nt,a as Di,e as _e,K as Ie,i as Ei,t as Bi,C as Ji,D as De}from"./rasterProjectionHelper-BlM04fcc.js";import{_ as Ai}from"./QueueProcessor-8zZK2k9z.js";import{d as We}from"./FeatureSet-CeKoTEEO.js";import{T as dt,y as Ge,c as Li,w as Hi}from"./GCSShiftTransform-BvICErzV.js";import{b as zi}from"./OperationalLayer-nNeN4Mrb.js";import{j as Wi}from"./PortalLayer-Bqf_dhsv.js";import{f as Gi}from"./RefreshableLayer-CwxQNwd3.js";import{t as ji}from"./ScaleRangeLayer-66YiyNPI.js";import{l as Ui}from"./TemporalLayer-CR5q7V2k.js";import{T as qi}from"./TilemapCache-C4A9NFHl.js";import{p as Vi}from"./popupUtils-BA1X4qoc.js";import{A as ge}from"./interfaces-CL2NbQte.js";import"./TimeExtent-DGiXUfis.js";import"./timeUtils-X0MXjtQ8.js";import"./jsonUtils-n3e_wlfQ.js";import"./parser-C4Qiz3JH.js";import"./utils-sqJe3zMg.js";import"./workers-CeelWDzo.js";import"./UniqueValueRenderer-CAZbf8NT.js";import"./RendererLegendOptions-CULirduz.js";import"./diffUtils-DMLidw0V.js";import"./colorRamps-D4VCsfmX.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./visualVariableUtils-dx28E4EQ.js";import"./lengthUtils-CFwdZ3dz.js";import"./jsonUtils-BWWcP_yB.js";import"./defaults-Dbnhuv3C.js";import"./defaultsJSON-GKolV7NZ.js";import"./styleUtils-CEgUrR2a.js";import"./ClassBreaksDefinition-CpzZK_QT.js";import"./utils-DGPHbhMN.js";import"./normalizeUtils-Bg1OALXh.js";import"./normalizeUtilsCommon-UUlRRPVA.js";import"./utils-ByvCMLXh.js";import"./utils-C2gvZghy.js";import"./utils-D7agaEG-.js";import"./enums-CmIX1y88.js";import"./LRUCache-DbPTy7LA.js";import"./ElevationInfo-D7CBP7sd.js";import"./TileKey-DZd6gJy7.js";import"./colorUtils-BWiljOUv.js";import"./vec42-BHDxGccW.js";import"./vec4f64-o2zAXfmz.js";import"./projection-BOBOhWzm.js";import"./projectBuffer-CZ7yaGuo.js";import"./signal-CRiDvIIF.js";import"./portalItemUtils-Cy9KvMYK.js";import"./TimeInfo-CY1-cj-U.js";const at=8,Yi=256;let Xi=0,J=class extends It{constructor(){super(...arguments),this._tileFetchQueue=new Ai({concurrency:32,process:(t,e)=>this._fetchRawTile(t.pyramidLevel,t.row,t.col,{...t.options,signal:e})}),this.datasetName=null,this.datasetFormat=null,this.hasUniqueSourceStorageInfo=!0,this.rasterInfo=null,this.ioConfig={sampling:"closest"}}normalizeCtorArgs(t){return t!=null&&t.ioConfig&&(t={...t,ioConfig:{resolution:null,bandIds:null,sampling:"closest",tileInfo:te.create(),...t.ioConfig}}),t}get _isGlobalWrappableSource(){const{rasterInfo:t}=this,e=ye(t.spatialReference);return e!=null&&t.extent.width>=e/2}get _hasNoneOrGCSShiftTransform(){const{transform:t}=this.rasterInfo;return t==null||t.type==="gcs-shift"}set rasterJobHandler(t){var e,r;this._set("rasterJobHandler",t),this.datasetFormat==="Function"&&((r=(e=this.primaryRasters)==null?void 0:e.rasters)==null||r.forEach(i=>i.rasterJobHandler=t))}get rasterId(){return this.url||"rasterId-"+Xi++}set url(t){this._set("url",ut(t,ne.getLogger(this)))}async open(t){return this._openPromise??(this._openPromise=Ne().then(()=>this._open(t))),this._openPromise}async fetchTile(t,e,r,i={}){const s=i.tileInfo||this.rasterInfo.storageInfo.tileInfo,a=this.getTileExtentFromTileInfo(t,e,r,s);return i={noClip:!0,...i},this.fetchPixels(a,s.size[0],s.size[1],i)}async identify(t,e={}){var F;t=Je(A,t).clone().normalize();const{multidimensionalDefinition:r,timeExtent:i}=e,{rasterInfo:s}=this,{hasMultidimensionalTranspose:a,multidimensionalInfo:n}=s;let{transposedVariableName:o}=e;const l=n!=null&&a&&(i!=null||ft(r));l&&!o&&(o=r!=null&&r.length>0?r[0].variableName??void 0:n.variables[0].name,e={...e,transposedVariableName:o}),e=this._getRequestOptionsWithSliceId(e);const{spatialReference:c,extent:u}=s,{datumTransformation:h}=e;let f=rt(t,c,h);if(!u.intersects(f))return{location:f,value:null};if(s.transform!=null){const C=s.transform.inverseTransform(f);if(!s.nativeExtent.intersects(C))return{location:C,value:null};f=C}let p=0;const g=o!=null&&n!=null&&s.hasMultidimensionalTranspose;if(this.datasetFormat==="Function"){const C=this.primaryRasters.rasters[0];if(g)return C.identify(f,e);const{pixelSize:E}=s,O=3,$=E.x*O/2,N=E.y*O/2,D=new L({xmin:f.x-$,xmax:f.x+$,ymin:f.y-N,ymax:f.y+N,spatialReference:c}),Z={interpolation:"nearest",multidimensionalDefinition:r,sliceId:e.sliceId},{pixelBlock:W}=await C.fetchPixels(D,O,O,Z),{pixelBlock:G}=await this.fetchPixels(D,O,O,Z);if(W==null)return{location:f,value:null};const U=Math.floor(O*O*.5),oe=!W.mask||W.mask[U]?W.pixels.map(j=>j[U]):null;let Y;return G!=null&&(Y=!G.mask||G.mask[U]?G.pixels.map(j=>j[U]):void 0),{location:f,value:oe,processedValue:Y,pyramidLevel:0}}if(!g){if(e.srcResolution)p=nt(e.srcResolution,s,this.ioConfig.sampling).pyramidLevel;else if(p=await this.computeBestPyramidLevelForLocation(t,e),p==null)return{location:f,value:null}}const y=this.identifyPixelLocation(f,p,null,g);if(y===null)return{location:f,value:null};const{row:m,col:d,rowOffset:x,colOffset:w,blockWidth:I}=y,T=o??e.sliceId,R=tt(this.rasterId,T),_=`${p}/${m}/${d}`;let M=it(R,null,_);M==null&&(M=this.fetchRawTile(p,m,d,e),st(R,null,_,M));const v=await M;if(!((F=v==null?void 0:v.pixels)!=null&&F.length))return{location:f,value:null};const k=x*I+w;return this._processIdentifyResult(v,{srcLocation:f,position:k,pyramidLevel:p,useTransposedTile:!!g,requestSomeSlices:l,identifyOptions:e})}async fetchPixels(t,e,r,i={}){t=Di(t),i=this._getRequestOptionsWithSliceId(i);const{_hasNoneOrGCSShiftTransform:s}=this;if(i.requestRawData&&s)return this._fetchPixels(t,e,r,i);const a=ye(t.spatialReference),n=_e(t);if(a==null||n===0||n===1&&this._isGlobalWrappableSource&&s)return this._fetchPixels(t,e,r,i);if(n>=3)return{extent:t,pixelBlock:null};const o=[],{xmin:l,xmax:c}=t,u=Math.round(a/(c-l)*e),h=u-Math.round((a/2-l)/(c-l)*e);let f=0;const p=[];for(let d=0;d<=n;d++){const x=new L({xmin:d===0?l:-a/2,xmax:d===n?c-a*d:a/2,ymin:t.ymin,ymax:t.ymax,spatialReference:t.spatialReference}),w=d===0?u-h:d===n?e-f:u;f+=w,p.push(w);const I=i.disableWrapAround&&d>0?null:this._fetchPixels(x,w,r,i);o.push(I)}const g=(await Promise.all(o)).map(d=>d==null?void 0:d.pixelBlock);let y=null;const m={width:e,height:r};return this.rasterJobHandler?y=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:g,srcMosaicSize:m,destDimension:null,coefs:null,sampleSpacing:null,interpolation:"nearest",alignmentInfo:null,blockWidths:p},i)).pixelBlock:y=Te(g,m,{blockWidths:p}),{extent:t,srcExtent:Ie(t,this.rasterInfo.spatialReference,i.datumTransformation),pixelBlock:y}}async fetchRawPixels(t,e,r,i={}){e={x:Math.floor(e.x),y:Math.floor(e.y)};const s=await this._fetchRawTiles(t,e,r,i),{nativeExtent:a,nativePixelSize:n,storageInfo:o}=this.rasterInfo,l=2**t,c=n.x*l,u=n.y*l,h=new L({xmin:a.xmin+c*e.x,xmax:a.xmin+c*(e.x+r.width-1),ymin:a.ymax-u*(e.y+r.height-1),ymax:a.ymax-u*e.y,spatialReference:a.spatialReference});if(!s)return{extent:h,srcExtent:h,pixelBlock:null};const{pixelBlocks:f,mosaicSize:p}=s;if(f.length===1&&f[0]!=null&&f[0].width===r.width&&f[0].height===r.height)return{extent:h,srcExtent:h,pixelBlock:s.pixelBlocks[0]};const g=t>0?o.pyramidBlockWidth:o.blockWidth,y=t>0?o.pyramidBlockHeight:o.blockHeight,m={x:e.x%g,y:e.y%y};let d;return this.rasterJobHandler?d=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:f,srcMosaicSize:p,destDimension:r,clipOffset:m,clipSize:r,coefs:null,sampleSpacing:null,interpolation:i.interpolation,alignmentInfo:null,blockWidths:null},i)).pixelBlock:d=Te(f,p,{clipOffset:m,clipSize:r}),{extent:h,srcExtent:h,pixelBlock:d}}fetchRawTile(t,e,r,i){throw new P("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(t){return Ie(this.rasterInfo.extent,t)}decodePixelBlock(t,e){return!this.rasterJobHandler||e.useCanvas?hi(t,e):this.rasterJobHandler.decode({data:t,options:e})}async request(t,e,r=0){const{customFetchParameters:i}=this.ioConfig,{range:s,query:a,headers:n}=e;r=r??e.retryCount??this.ioConfig.retryCount;const o=s?{Range:`bytes=${s.from}-${s.to}`}:null;try{return await lt(t,{...e,query:{...a,...i},headers:{...n,...o}})}catch(l){if(r>0)return r--,this.request(t,e,r);throw l}}getSliceIndex(t){const{multidimensionalInfo:e}=this.rasterInfo;return e==null||t==null||t.length===0?null:mt(t,e)}getTileExtentFromTileInfo(t,e,r,i){const s=i.lodAt(t);return this.getTileExtent({x:s.resolution,y:s.resolution},e,r,i.origin,i.spatialReference,i.size)}updateTileInfo(){const{storageInfo:t,spatialReference:e,extent:r,pixelSize:i}=this.rasterInfo,{pyramidResolutions:s}=t;if(!t.tileInfo){const a=[],n=t.maximumPyramidLevel||0;let o=(i.x+i.y)/2,l=1/.0254*96*o;for(let u=0;u<=n&&(a.unshift(new ui({level:n-u,resolution:o,scale:l})),u!==n);u++)if(s){const h=(s[u].x+s[u].y)/2;l*=h/o,o=h}else o*=2,l*=2;const c=new A({x:r.xmin,y:r.ymax,spatialReference:e});t.tileInfo=new te({origin:c,size:[t.blockWidth,t.blockHeight],spatialReference:e,lods:a}),t.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(t,e=512,r=512,i){const{width:s,height:a,nativeExtent:n,pixelSize:o,spatialReference:l}=t,c=new A({x:n.xmin,y:n.ymax,spatialReference:l});i==null&&(i=Math.max(0,Math.round(Math.log(Math.max(s,a))/Math.LN2-8)));const u=this.computeBlockBoundary(n,512,512,{x:n.xmin,y:n.ymax},[o],i);t.storageInfo=new Re({blockWidth:e,blockHeight:r,pyramidBlockWidth:e,pyramidBlockHeight:r,origin:c,firstPyramidLevel:1,maximumPyramidLevel:i,blockBoundary:u})}async computeBestPyramidLevelForLocation(t,e={}){return 0}computeBlockBoundary(t,e,r,i,s,a=0,n=2){if(s.length===1&&a>0){s=[...s];let{x:u,y:h}=s[0];for(let f=0;f<a;f++)u*=n,h*=n,s.push({x:u,y:h})}const o=[],{x:l,y:c}=i;for(let u=0;u<s.length;u++){const{x:h,y:f}=s[u];o.push({minCol:Math.floor((t.xmin-l+.1*h)/e/h),maxCol:Math.floor((t.xmax-l-.1*h)/e/h),minRow:Math.floor((c-t.ymax+.1*f)/r/f),maxRow:Math.floor((c-t.ymin-.1*f)/r/f)})}return o}getPyramidPixelSize(t){const{nativePixelSize:e}=this.rasterInfo,{pyramidResolutions:r,pyramidScalingFactor:i}=this.rasterInfo.storageInfo;if(t===0)return e;if(r!=null&&r.length)return r[t-1];const s=i**t;return{x:e.x*s,y:e.y*s}}identifyPixelLocation(t,e,r,i){const{spatialReference:s,nativeExtent:a,storageInfo:n}=this.rasterInfo,{maximumPyramidLevel:o,origin:l,transposeInfo:c}=n,u=i&&c!=null?c.tileSize[0]:n.blockWidth,h=i&&c!=null?c.tileSize[1]:n.blockHeight,f=rt(t,s,r);if(!a.intersects(f)||e<0||e>o)return null;const p=this.getPyramidPixelSize(e),{x:g,y}=p,m=(l.y-f.y)/y/h,d=(f.x-l.x)/g/u,x=Math.min(h-1,Math.floor((m-Math.floor(m))*h)),w=Math.min(u-1,Math.floor((d-Math.floor(d))*u));return{pyramidLevel:e,row:Math.floor(m),col:Math.floor(d),rowOffset:x,colOffset:w,blockWidth:u,srcLocation:f}}getTileExtent(t,e,r,i,s,a){const[n,o]=a,l=i.x+r*n*t.x,c=l+n*t.x,u=i.y-e*o*t.y,h=u-o*t.y;return new L({xmin:l,xmax:c,ymin:h,ymax:u,spatialReference:s})}getBlockWidthHeight(t){return{blockWidth:t>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:t>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(t,e,r){const i=this.rasterInfo.storageInfo.blockBoundary[t];return!i||i.maxRow<e||i.maxCol<r||i.minRow>e||i.minCol>r}updateImageSpaceRasterInfo(t){const{pixelSize:e}=t,{width:r,height:i}=t,s=H.WebMercator;t.spatialReference=s,t.extent=t.nativeExtent=new L({xmin:-.5,ymax:.5,xmax:r-.5,ymin:.5-i,spatialReference:s}),t.isPseudoSpatialReference=!0,t.transform=null,t.pixelSize=new A({x:1,y:1,spatialReference:s});const{extent:a,storageInfo:n}=t;if(n){n.origin=new A({x:a.xmin,y:a.ymax,spatialReference:s});const{pyramidResolutions:o,tileInfo:l}=n;if(o&&o.forEach(c=>{c.x/=e.x,c.y/=e.y}),l){l.origin=n.origin;const c=(t.nativePixelSize.x+t.nativePixelSize.y)/2;l.lods.forEach((u,h)=>{u.resolution=c*2**h,u.scale=96*u.resolution/.0254})}}}async _fetchPixels(t,e,r,i={}){let s=_e(t);if(s>=2)return{extent:t,pixelBlock:null};const a=this._getSourceDataInfo(t,e,r,i),{pyramidLevel:n,srcResolution:o,srcExtent:l,srcWidth:c,srcHeight:u,ul:h}=a;if(c===0||u===0)return{extent:t,srcExtent:l,pixelBlock:null};const{rasterInfo:f}=this,p=f.transform,g=(p==null?void 0:p.type)==="gcs-shift",y=ye(t.spatialReference)!=null;!g&&y||(s=_e(a.srcExtent,g));const m=await this._fetchRawTiles(n,h,{width:c,height:u,wrapCount:s},i);if(!m)return{extent:t,srcExtent:l,pixelBlock:null};const d=f.storageInfo,x=n>0?d.pyramidBlockWidth:d.blockWidth,w=n>0?d.pyramidBlockHeight:d.blockHeight;let{x:I,y:T}=f.pixelSize;if(n>0){const{pyramidResolutions:j,pyramidScalingFactor:wt}=d;if(j!=null&&j[n-1])({x:I,y:T}=j[n-1]);else{const qe=wt**n;I*=qe,T*=qe}}const R=f.spatialReference,_=new A({x:I,y:T,spatialReference:R}),M=x===c&&w===u&&h.x%x==0&&h.y%w==0,v=new A({x:(t.xmax-t.xmin)/e,y:(t.ymax-t.ymin)/r,spatialReference:t.spatialReference}),k=!t.spatialReference.equals(R),F=R.isGeographic?1e-9:1e-4,{datumTransformation:C}=i;if(!k&&M&&m.pixelBlocks.length===1&&x===e&&w===r&&Ki(o,v,F))return{extent:t,srcExtent:l,srcTilePixelSize:_,pixelBlock:m.pixelBlocks[0]};const E=y&&ye(l.spatialReference)!=null&&this._hasNoneOrGCSShiftTransform,O=i.requestProjectedLocalDirections&&this.rasterInfo.dataType.startsWith("vector");O&&!this.rasterJobHandler&&await Ne();const $=this.rasterJobHandler?await this.rasterJobHandler.getProjectionOffsetGrid({projectedExtent:t,srcBufferExtent:m.extent,pixelSize:v.toJSON(),datumTransformation:C,rasterTransform:p,hasWrapAround:s>0||E,isAdaptive:this.ioConfig.optimizeProjectionAccuracy!==!1,includeGCSGrid:O},i):Ei({projectedExtent:t,srcBufferExtent:m.extent,pixelSize:v,datumTransformation:C,rasterTransform:p,hasWrapAround:s>0||E,isAdaptive:!1,includeGCSGrid:O});let N;const D=!i.requestRawData,Z={rows:$.spacing[0],cols:$.spacing[1]},W=this._hasNoneOrGCSShiftTransform?this._getRasterTileAlignmentInfo(n,m.extent.xmin):void 0,{pixelBlocks:G,mosaicSize:U,isPartiallyFilled:oe}=m;let Y=null;if(this.rasterJobHandler)({pixelBlock:N,localNorthDirections:Y}=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:G,srcMosaicSize:U,destDimension:D?{width:e,height:r}:null,coefs:D?$.coefficients:null,sampleSpacing:D?Z:null,projectDirections:O,gcsGrid:O?$.gcsGrid:null,isUV:this.rasterInfo.dataType==="vector-uv",interpolation:i.interpolation,alignmentInfo:W,blockWidths:null},i));else{const j=Te(G,U,{alignmentInfo:W});N=D?pt(j,{width:e,height:r},$.coefficients,Z,i.interpolation):j,O&&$.gcsGrid&&(Y=Fi({width:e,height:r},$.gcsGrid),N=ki(N,this.rasterInfo.dataType,Y))}return i.requestRawData||O?{extent:t,srcExtent:l,srcTilePixelSize:_,pixelBlock:N,transformGrid:$,localNorthDirections:Y,isPartiallyFilled:oe}:{extent:t,srcExtent:l,srcTilePixelSize:_,pixelBlock:N}}async _fetchRawTiles(t,e,r,i){const{origin:s,blockBoundary:a}=this.rasterInfo.storageInfo,{blockWidth:n,blockHeight:o}=this.getBlockWidthHeight(t);let{x:l,y:c}=e,{width:u,height:h,wrapCount:f}=r;const p=this._getRasterTileAlignmentInfo(t,0);i.buffer&&(l-=i.buffer.cols,c-=i.buffer.rows,u+=2*i.buffer.cols,h+=2*i.buffer.rows);let g=0,y=0,m=0;f&&p!=null&&({worldColumnCountFromOrigin:y,originColumnOffset:m,rightPadding:g}=p,y*p.blockWidth-g>=l+u&&(g=0));const d=Math.floor(l/n),x=Math.floor(c/o),w=Math.floor((l+u+g-1)/n),I=Math.floor((c+h+g-1)/o),T=a[t];if(!T)return null;const{minRow:R,minCol:_,maxCol:M,maxRow:v}=T;if(f===0&&(I<R||w<_||x>v||d>M))return null;const k=new Array;let F=!1;const C=this.ioConfig.allowPartialFill==null?i.allowPartialFill:this.ioConfig.allowPartialFill;for(let W=x;W<=I;W++)for(let G=d;G<=w;G++){let U=G;if(!i.disableWrapAround&&f&&p!=null&&y<=G&&(U=G-y-m),W>=R&&U>=_&&v>=W&&M>=U){const oe=this._tileFetchQueue.push({pyramidLevel:t,row:W,col:U,options:i},{signal:i.signal});C?k.push(new Promise(Y=>{oe.then(j=>Y(j)).catch(()=>{F=!0,Y(null)})})):k.push(oe)}else k.push(Promise.resolve(null))}if(k.length===0)return null;const E=await Promise.all(k),O={height:(I-x+1)*o,width:(w-d+1)*n},{spatialReference:$}=this.rasterInfo,N=this.getPyramidPixelSize(t),{x:D,y:Z}=N;return{extent:new L({xmin:s.x+d*n*D,xmax:s.x+(w+1)*n*D,ymin:s.y-(I+1)*o*Z,ymax:s.y-x*o*Z,spatialReference:$}),pixelBlocks:E,mosaicSize:O,isPartiallyFilled:F}}_fetchRawTile(t,e,r,i){const s=this.rasterInfo.storageInfo.blockBoundary[t];if(!s)return Promise.resolve(null);const{minRow:a,minCol:n,maxCol:o,maxRow:l}=s;if(e<a||r<n||e>l||r>o)return Promise.resolve(null);const c=tt(this.rasterId,i.sliceId),u=`${t}/${e}/${r}`;let h=it(c,i.registryId,u);if(h==null){const f=new AbortController;h=this.fetchRawTile(t,e,r,{...i,signal:f.signal}),st(c,i.registryId,u,h,f),h.catch(()=>vi(c,i.registryId,u))}return i.signal&&bt(i,()=>{Si(c,i.registryId,u)}),h}_computeMagDirValues(t){var l;const{bandCount:e,dataType:r}=this.rasterInfo;if(!(e===2&&r==="vector-magdir"||r==="vector-uv")||(t==null?void 0:t.length)!==2||!((l=t[0])!=null&&l.length))return null;const i=t[0].length;if(r==="vector-magdir"){const c=t[1].map(u=>(u+360)%360);return[t[0],c]}const[s,a]=t,n=[],o=[];for(let c=0;c<i;c++){const[u,h]=Mi([s[c],a[c]]);n.push(u),o.push(h)}return[n,o]}_getRasterTileAlignmentInfo(t,e){return this._rasterTileAlignmentInfo==null&&(this._rasterTileAlignmentInfo=Bi(this.rasterInfo)),this._rasterTileAlignmentInfo.pyramidsInfo==null?null:{startX:e,halfWorldWidth:this._rasterTileAlignmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlignmentInfo.hasGCSSShiftTransform,...this._rasterTileAlignmentInfo.pyramidsInfo[t]}}_getSourceDataInfo(t,e,r,i={}){const s={datumTransformation:i.datumTransformation,pyramidLevel:0,pyramidResolution:null,srcExtent:null,srcHeight:0,srcResolution:null,srcWidth:0,ul:{x:0,y:0}};i.srcResolution&&(s.srcResolution=i.srcResolution,this._updateSourceDataInfo(t,s));const a=this.rasterInfo.storageInfo.maximumPyramidLevel||0,{srcWidth:n,srcHeight:o,pyramidLevel:l}=s,c=n/e,u=o/r,h=l<a&&c*u>=16,f=l===a&&this._requireTooManySrcTiles(n,o,e,r);if(h||f||n===0||o===0){const p=new A({x:(t.xmax-t.xmin)/e,y:(t.ymax-t.ymin)/r,spatialReference:t.spatialReference});let g=Ji(p,this.rasterInfo.spatialReference,t,s.datumTransformation);const y=!g||i.srcResolution&&g.x+g.y<i.srcResolution.x+i.srcResolution.y;if(h&&i.srcResolution&&y){const m=Math.round(Math.log(Math.max(c,u))/Math.LN2)-1;if(a-l+3>=m){const d=2**m;g={x:i.srcResolution.x*d,y:i.srcResolution.y*d}}}g&&(s.srcResolution=g,this._updateSourceDataInfo(t,s))}return this._requireTooManySrcTiles(s.srcWidth,s.srcHeight,e,r)&&(s.srcWidth=0,s.srcHeight=0),s}_requireTooManySrcTiles(t,e,r,i){const{tileInfo:s}=this.rasterInfo.storageInfo,a=Math.ceil(t/s.size[0])*Math.ceil(e/s.size[1]),n=t/r,o=e/i,l=Math.max(1,(r+i)/1024);return a>=Yi*l||n>at||o>at}_updateSourceDataInfo(t,e){e.srcWidth=0,e.srcHeight=0;const{rasterInfo:r}=this,i=r.spatialReference,{srcResolution:s,datumTransformation:a}=e,{pyramidLevel:n,pyramidResolution:o,excessiveReading:l}=nt(s,r,this.ioConfig.sampling);if(l)return;let c=e.srcExtent||Ie(t,i,a);if(c==null)return;const u=r.transform;u&&(c=u.inverseTransform(c)),e.srcExtent=c;const{x:h,y:f}=r.storageInfo.origin,p=Math.floor((c.xmin-h)/o.x+.1),g=Math.floor((f-c.ymax)/o.y+.1),y=Math.floor((c.xmax-h)/o.x-.1),m=Math.floor((f-c.ymin)/o.y-.1),d=c.width<.1*o.x?0:y-p+1,x=c.height<.1*o.y?0:m-g+1;e.pyramidLevel=n,e.pyramidResolution=o,e.srcWidth=d,e.srcHeight=x,e.ul={x:p,y:g}}_getRequestOptionsWithSliceId(t){return this.rasterInfo.multidimensionalInfo!=null&&t.sliceId==null&&(t={...t,sliceId:this.getSliceIndex(t.multidimensionalDefinition)}),t}_processIdentifyResult(t,e){const{srcLocation:r,position:i,pyramidLevel:s,useTransposedTile:a}=e,n=t.pixels[0].length/t.width/t.height;if(!(!t.mask||t.mask[i]))return{location:r,value:null};const{multidimensionalInfo:o}=this.rasterInfo;if(o==null||!a){const m=t.pixels.map(w=>w[i]),d={location:r,value:m,pyramidLevel:s},x=this._computeMagDirValues(m.map(w=>[w]));return x!=null&&x.length&&(d.magdirValue=x.map(w=>w[0])),d}let l=t.pixels.map(m=>m.slice(i*n,i*n+n)),c=this._computeMagDirValues(l);const{requestSomeSlices:u,identifyOptions:h}=e;let f=ai(o,h.transposedVariableName);if(u){const m=oi(f,h.multidimensionalDefinition,h.timeExtent);l=l.map(d=>m.map(x=>d[x])),c=c==null?void 0:c.map(d=>m.map(x=>d[x])),f=m.map(d=>f[d])}const p=t.noDataValues||this.rasterInfo.noDataValue,g={pixels:l,pixelType:t.pixelType};let y;return p!=null&&(Ti(g,p),y=g.mask),{location:r,value:null,dataSeries:f.map((m,d)=>{const x={value:(y==null?void 0:y[d])===0?null:l.map(w=>w[d]),multidimensionalDefinition:m.multidimensionalDefinition.map(w=>new Le({...w,isSlice:!0}))};return c!=null&&c.length&&(x.magdirValue=[c[0][d],c[1][d]]),x}),pyramidLevel:s}}};function Ki(t,e,r){return Math.abs(t.x-e.x)<r&&Math.abs(t.y-e.y)<r}b([S()],J.prototype,"_rasterTileAlignmentInfo",void 0),b([S()],J.prototype,"_tileFetchQueue",void 0),b([S({readOnly:!0})],J.prototype,"_isGlobalWrappableSource",null),b([S({readOnly:!0})],J.prototype,"_hasNoneOrGCSShiftTransform",null),b([S()],J.prototype,"_openPromise",void 0),b([S()],J.prototype,"rasterJobHandler",null),b([S({readOnly:!0})],J.prototype,"rasterId",null),b([S(ht)],J.prototype,"url",null),b([S({type:String,json:{write:!0}})],J.prototype,"datasetName",void 0),b([S({type:String,json:{write:!0}})],J.prototype,"datasetFormat",void 0),b([S()],J.prototype,"hasUniqueSourceStorageInfo",void 0),b([S()],J.prototype,"rasterInfo",void 0),b([S()],J.prototype,"ioConfig",void 0),b([S()],J.prototype,"sourceJSON",void 0),J=b([Q("esri.layers.support.rasterDatasets.BaseRaster")],J);const ae=J;function Qi(t,e){if(t.spatialReference.equals(e))return t;const r=Ve(t.spatialReference),i=Ve(e);if(r===i)return t;const s=r/i;return{x:t.x*s,y:t.y*s}}async function Ee(t,e,r){if(r.type==="extent")return es(t,e,r);const{width:i,height:s}=t,a=new Uint8Array(i*s),{contains:n,intersects:o}=await Ae(async()=>{const{contains:l,intersects:c}=await import("./index-C1aGfQcb.js").then(u=>u.nQ);return{contains:l,intersects:c}},__vite__mapDeps([0,1]));return o(e,r)?r.type==="polyline"?ts(t,e,r):n(r,e)?t:Zi(t,e,r):new V({pixelType:t.pixelType,width:i,height:s,mask:a,maskIsAlpha:!1,pixels:[...t.pixels]})}function Zi(t,e,r){if(!t)return t;const{width:i,height:s}=t,a=e.width/i,n=e.height/s,{xmin:o,ymax:l}=e;let c;if(r.type==="extent"){const m=(r.xmin-o)/a,d=(r.xmax-o)/a,x=(l-r.ymax)/n,w=(l-r.ymin)/n;c=[[[m,x],[m,w],[d,w],[d,x],[m,x]]]}else c=r.rings.map(m=>m.map(([d,x])=>[(d-o)/a,(l-x)/n]));const u=document.createElement("canvas");u.width=i,u.height=s;const h=u.getContext("2d");h.fillStyle="#f00",h.beginPath(),c.forEach(m=>{h.moveTo(m[0][0],m[0][1]);for(let d=0;d<m.length;d++)h.lineTo(m[d][0],m[d][1]);h.closePath()}),h.fill();const f=h.getImageData(0,0,i,s).data,p=t.mask,g=i*s,y=new Uint8Array(g);for(let m=0;m<g;m++)p&&!p[m]||(y[m]=f[4*m+3]>127?255:0);return new V({pixelType:t.pixelType,width:i,height:s,mask:y,maskIsAlpha:!1,pixels:[...t.pixels]})}function es(t,e,r){const{width:i,height:s}=t,a=new Uint8Array(i*s),n=e.width/i,o=e.height/s;if(r.width/n<.5||r.height/o<.5)return new V({pixelType:t.pixelType,width:i,height:s,mask:a,pixels:[...t.pixels]});const{xmin:l,xmax:c,ymin:u,ymax:h}=e,{xmin:f,xmax:p,ymin:g,ymax:y}=r,m=Math.max(l,f),d=Math.min(c,p),x=Math.max(u,g),w=Math.min(h,y),I=.5*n,T=.5*o;if(d-m<I||w-x<T||d<l+I||m>c-I||x>h-T||w<u+T)return new V({pixelType:t.pixelType,width:i,height:s,mask:a,pixels:[...t.pixels]});const R=Math.max(0,(m-l)/n),_=Math.min(i,Math.max(0,(d-l)/n)),M=Math.max(0,(h-w)/o),v=Math.min(s,Math.max(0,(h-x)/o)),k=Math.round(R),F=Math.round(_)-1,C=Math.round(M),E=Math.round(v)-1;if(k===F&&R%1>.5&&_%1<.5||C===E&&M%1>.5&&v%1<.5)return new V({pixelType:t.pixelType,width:i,height:s,mask:a,pixels:[...t.pixels]});if(k===0&&C===0&&F===i&&E===s)return t;const O=t.mask;for(let $=C;$<=E;$++)for(let N=k;N<=F;N++){const D=$*i+N;a[D]=O?O[D]:255}return new V({pixelType:t.pixelType,width:i,height:s,mask:a,pixels:[...t.pixels]})}function ts(t,e,r){const{width:i,height:s}=t,a=new Uint8Array(i*s),n=e.width/i,o=e.height/s,{xmin:l,ymax:c}=e,{paths:u}=r,h=t.mask;for(let f=0;f<u.length;f++){const p=u[f];for(let g=0;g<p.length-1;g++){const[y,m]=p[g],[d,x]=p[g+1];let w=Math.floor((c-m)/o),I=Math.floor((c-x)/o);if(I<w){const R=w;w=I,I=R}w=Math.max(0,w),I=Math.min(s-1,I);const T=(d-y)/(x-m);for(let R=w;R<=I;R++){const _=R===w?Math.max(m,x):(s+1-R)*o,M=R===I?Math.min(m,x):_-o;let v=Math.floor(x===m?(y-l)/n:(T*(_-m)+y-l)/n),k=Math.floor(x===m?(d-l)/n:(T*(M-m)+y-l)/n);if(k<v){const C=v;v=k,k=C}const F=R*i;v=Math.max(0,v),k=Math.min(i-1,k);for(let C=F+v;C<=F+k;C++)a[C]=h?h[C]:255}}}return new V({pixelType:t.pixelType,width:i,height:s,mask:a,pixels:[...t.pixels]})}function is(t,e,r,i=!0){const{spatialReference:s}=t,{x:a,y:n}=Qi(r,s);let o,l,c;const u=e.type==="extent"?e:e.extent;let{xmin:h,xmax:f,ymax:p,ymin:g}=u;const{xmin:y,ymax:m}=t.extent;return i?(h=y+(h>y?a*Math.round((h-y)/a):0),p=m-(p<m?n*Math.round((m-p)/n):0),f=y+(f>y?a*Math.round((f-y)/a):0),g=m-(g<m?n*Math.round((m-g)/n):0),o=new L({xmin:h,ymax:p,xmax:f,ymin:g,spatialReference:s}),l=Math.round(o.width/a),c=Math.round(o.height/n)):(l=Math.floor((f-h)/a+.8),c=Math.floor((p-g)/n+.8),h=y+(h>y?a*Math.floor((h-y)/a+.1):0),p=m-(p<m?n*Math.floor((m-p)/n+.1):0),f=h+l*a,g=p-c*n,o=new L({xmin:h,ymax:p,xmax:f,ymin:g,spatialReference:s})),{extent:o,width:l,height:c}}const ss=40;let ie=class extends ae{constructor(){super(...arguments),this.datasetFormat="Function",this.tileType="Raster",this.rasterFunction=null,this._clippingGeometry=new Map}async fetchPixels(e,r,i,s={}){var I,T;const{rasters:a,rasterIds:n}=this.primaryRasters;let o=!1;const{interpolation:l}=s,c=(I=this.rasterFunction.flatWebGLFunctionChain)==null?void 0:I.hasFocalFunction;!s.requestRawData&&c&&(o=a.length===1&&!s.skipRasterFunction,s={...s,interpolation:"bilinear",requestRawData:o});const u=a.map(R=>R.fetchPixels(e,r,i,s)),h=await Promise.all(u),f=h.map(R=>R.pixelBlock),p=o||s.requestRawData?h.map(R=>R.srcTilePixelSize):null;if(s.skipRasterFunction||f.every(R=>R==null))return h[0];const g=((T=h.find(R=>R.pixelBlock!=null))==null?void 0:T.extent)??e;let y=this.rasterJobHandler?await this.rasterJobHandler.process({extent:g,primaryPixelBlocks:f,primaryPixelSizes:p,primaryRasterIds:n}):this.rasterFunction.process({extent:g,primaryPixelBlocks:f,primaryPixelSizes:p,primaryRasterIds:n});const{transformGrid:m}=h[0];if(!o||y==null||m==null){const R=s.noClip?null:this.getClippingGeometry(g.spatialReference);return s.noClip||s.requestRawData||y==null||!R||(y=await Ee(y,g,R)),{...h[0],pixelBlock:y}}const d={rows:m.spacing[0],cols:m.spacing[1]};let x;this.rasterJobHandler?x=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:[y],srcMosaicSize:{width:y.width,height:y.height},destDimension:{width:r,height:i},coefs:m.coefficients,sampleSpacing:d,projectDirections:!1,gcsGrid:null,isUV:!1,interpolation:l,alignmentInfo:void 0,blockWidths:null},s)).pixelBlock:x=pt(y,{width:r,height:i},m.coefficients,d,l);const w=s.noClip?null:this.getClippingGeometry(e.spatialReference);return s.noClip||s.requestRawData||x==null||w==null||(x=await Ee(x,e,w)),{extent:e,srcExtent:h[0].srcExtent,pixelBlock:x}}getClippingGeometry(e){const r=this._clippingGeometry.get("0");if(!e||!r)return r;const i=ns(e);let s=this._clippingGeometry.get(i);return s!=null||(s=e.equals(r.spatialReference)?r:De(r,e),this._clippingGeometry.set(i,s)),s}async _open(e){var u,h,f,p;const{rasterFunction:r}=this;(h=(u=this.primaryRasters)==null?void 0:u.rasters)!=null&&h.length?r.sourceRasters=this.primaryRasters.rasters:(this.primaryRasters=r.getPrimaryRasters(),this.rasterJobHandler&&((f=this.primaryRasters.rasters)==null||f.forEach(g=>g.rasterJobHandler=this.rasterJobHandler)));const{rasters:i,rasterIds:s}=this.primaryRasters,a=i.map(g=>g.rasterInfo?void 0:g.open(e));await Promise.all(a);const n=i.map(({rasterInfo:g})=>g),o=r.bind({rasterInfos:n,rasterIds:s});if(r.rawSourceRasterInfos=n,!o.success||n.length===0)throw new P("raster-function:open",`cannot bind the function: ${o.error??""}`);const l=r.functionName==="Table"?r:(p=r.functionArguments)==null?void 0:p.raster;(l==null?void 0:l.functionName)==="Table"&&(r.rasterInfo.attributeTable=We.fromJSON(l.functionArguments.attributeTableAsRecordSet)),await this.syncJobHandler();const c=n[0];this.hasUniqueSourceStorageInfo=n.length===1||n.slice(1).every(g=>rs(g,c)),this.set("sourceJSON",i[0].sourceJSON),this.set("rasterInfo",r.rasterInfo),await this._updateClipGeometry()}async syncJobHandler(){var e;return(e=this.rasterJobHandler)==null?void 0:e.updateRasterFunction(this.rasterFunction)}async _updateClipGeometry(){const e=this.rasterFunction.getClippingGeometries()[0];let r=e==null?void 0:e.clippingGeometry;if(r&&e.clippingType==="inside"){const{extent:i}=this.rasterInfo,{difference:s,densify:a}=await Ae(async()=>{const{difference:o,densify:l}=await import("./index-C1aGfQcb.js").then(c=>c.nQ);return{difference:o,densify:l}},__vite__mapDeps([0,1]));let n=a(Rt.fromExtent(i),2*(i.width+i.height)/ss);n=De(n,r.spatialReference),r=s(n,r)}this._clippingGeometry.clear(),r&&this._clippingGeometry.set("0",r)}};b([S({type:String,json:{write:!0}})],ie.prototype,"datasetFormat",void 0),b([S()],ie.prototype,"tileType",void 0),b([S()],ie.prototype,"rasterFunction",void 0),b([S()],ie.prototype,"primaryRasters",void 0),ie=b([Q("esri.layers.support.rasterDatasets.FunctionRaster")],ie);const yt=ie;function rs(t,e){const{storageInfo:r,pixelSize:i,spatialReference:s,extent:a}=t,{storageInfo:n,pixelSize:o,spatialReference:l,extent:c}=e;return i.x===o.x&&i.y===o.y&&s.equals(l)&&a.equals(c)&&r.blockHeight===n.blockHeight&&r.blockWidth===n.blockWidth&&r.maximumPyramidLevel===n.maximumPyramidLevel}function ns(t){return String(t.wkid??t.wkt??t.wkt2)}const as=t=>{let e=class extends t{constructor(...i){var s,a;super(...i),this._isConstructedFromFunctionRaster=!1,this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.interpolation=null,this.multidimensionalSubset=null,this.raster=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.symbolizer=null,this._isConstructedFromFunctionRaster=((a=(s=i[0])==null?void 0:s.raster)==null?void 0:a.datasetFormat)==="Function"}get fullExtent(){var i;return(i=this.serviceRasterInfo)==null?void 0:i.extent}set multidimensionalDefinition(i){this._set("multidimensionalDefinition",i),this.updateRenderer()}set rasterFunction(i){var s;((s=i==null?void 0:i.functionName)==null?void 0:s.toLowerCase())==="none"&&(i=void 0),this._set("rasterFunction",i),this.updateRasterFunction()}get rasterInfo(){return _t(ne.getLogger(this),"rasterInfo",{replacement:"serviceRasterInfo",version:"4.29",warnOnce:!0}),this._get("serviceRasterInfo")}set url(i){this._set("url",ut(i,ne.getLogger(this)))}get renderer(){if(this.type!=="imagery-tile")return this.internalRenderer;const{activePresetRendererName:i,presetRenderers:s}=this;if(i){const a=s==null?void 0:s.find(({name:n})=>n===i);return a==null?void 0:a.renderer.clone()}return this.internalRenderer}set renderer(i){this.type==="imagery-tile"&&(this.activePresetRendererName=null),this.internalRenderer=i}set internalRenderer(i){i==null&&this.rasterFunction==null?this._configDefaultRenderer("override"):(this._set("internalRenderer",i),this.updateRenderer())}readRenderer(i,s,a){var o,l;const n=(l=(o=s==null?void 0:s.layerDefinition)==null?void 0:o.drawingInfo)==null?void 0:l.renderer;return Yt(n,a)||void 0}async convertVectorFieldData(i,s){const{serviceRasterInfo:a}=this;if(i==null||!a)return null;const n=this._rasterJobHandler.instance,o=a.dataType;return n?n.convertVectorFieldData({pixelBlock:i,dataType:o},s):Ci(i,o)}async computeStatisticsHistograms(i,s){await this.load(s),i=Je(Xt,i).clone();const{serviceRasterInfo:a}=this;if(a==null)throw new P("imagery-tile-mixin:compute-statistics-histograms","serviceRasterInfo must be specified");const{geometry:n}=i;if(n==null)throw new P("imagery-tile-mixin:compute-statistics-histograms","geometry must be specified");let o=n;const{spatialReference:l}=a;n.spatialReference.equals(l)||(await Ne(),o=n.type==="extent"?Ie(n,l):De(n,l));const c=i.pixelSize??new A({x:a.pixelSize.x,y:a.pixelSize.y,spatialReference:l}),{extent:u,width:h,height:f}=is(a,o,c),p=await this.fetchPixels(u,h,f,{...s,interpolation:"nearest"});if(p.pixelBlock==null)throw new P("imagery-tile-mixin:compute-statistics-histograms","failed to fetch pixels");const g=await Ee(p.pixelBlock,u,o),y=this._rasterJobHandler.instance;return y?y.computeStatisticsHistograms({pixelBlock:g},s):He(g)}async createFlowMesh(i,s){const a=this._rasterJobHandler.instance;return a?a.createFlowMesh(i,s):Oi(i.meshType,i.simulationSettings,i.flowData,s.signal!=null?s.signal:new AbortController().signal)}normalizeRasterFetchOptions(i){var o,l;const{multidimensionalInfo:s}=this.serviceRasterInfo??{};if(s==null)return i;let a=i.multidimensionalDefinition||this.multidimensionalDefinition;a!=null&&a.length||(a=Qe(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset}));const n=i.timeExtent||this.timeExtent;if(a!=null&&n!=null&&(n.start!=null||n.end!=null)){a=a.map(d=>d.clone());const c=(l=(o=s.variables.find(({name:d})=>d===a[0].variableName))==null?void 0:o.dimensions)==null?void 0:l.find(({name:d})=>d==="StdTime"),u=a.find(({dimensionName:d})=>d==="StdTime");if(!c||!u)return{...i,multidimensionalDefinition:null};const{start:h,end:f}=n,p=h==null?null:h.getTime(),g=f==null?null:f.getTime(),y=p??g,m=g??p;if(c.values!=null){const d=c.values.filter(x=>{if(Array.isArray(x)){if(y===m)return x[0]<=y&&x[1]>=y;const w=x[0]<=y&&x[1]>y||x[0]<m&&x[1]>=m,I=x[0]>=y&&x[1]<=m||x[0]<y&&x[1]>m;return w||I}return y===m?x===y:x>=y&&x<=m});if(d.length){const x=d.sort((w,I)=>{const T=Array.isArray(w)?w[0]:w,R=Array.isArray(w)?w[1]:w,_=Array.isArray(I)?I[0]:I,M=Array.isArray(I)?I[1]:I;return y===m?T-_:Math.abs(R-m)-Math.abs(M-m)})[0];u.values=[x]}else a=null}else if(c.hasRegularIntervals&&c.extent){const[d,x]=c.extent;y>x||m<d?a=null:u.values=y===m?[y]:[Math.max(d,y),Math.min(x,m)]}}return a!=null&&li(a,this.multidimensionalSubset)?{...i,multidimensionalDefinition:null}:{...i,multidimensionalDefinition:a}}async updateRasterFunction(){var u,h,f;if(!this.loaded||this.type!=="imagery-tile"||!this.rasterFunction&&!this._cachedRasterFunctionJson||JSON.stringify(this.rasterFunction)===JSON.stringify(this._cachedRasterFunctionJson))return;if(this._isConstructedFromFunctionRaster&&this.raster.datasetFormat==="Function"){const p=this.raster.rasterFunction.toJSON();return!this.rasterFunction&&p&&this._set("rasterFunction",$e.fromJSON(p)),void(this._cachedRasterFunctionJson=(u=this.rasterFunction)==null?void 0:u.toJSON())}let i,s=this.raster,a=!1;s.datasetFormat==="Function"?(i=s.primaryRasters.rasters,s=i[0],a=!0):i=[s];const{rasterFunction:n}=this;if(n){const p={raster:s};i.length>1&&i.forEach(m=>p[m.url]=m);const g=dt(((h=n.functionDefinition)==null?void 0:h.toJSON())??n.toJSON(),p),y=new yt({rasterFunction:g});y.rasterJobHandler=this._rasterJobHandler.instance,await y.open(),this._cachedRasterFunctionJson=(f=this.rasterFunction)==null?void 0:f.toJSON(),this.raster=y}else this.raster=s,this._cachedRasterFunctionJson=null,await s.open();if(this._cachedRendererJson=null,!a&&!n)return;const{bandIds:o}=this,{bandCount:l}=this.raster.rasterInfo,c=o!=null&&o.length?o.some(p=>p>=l):l>=3;o&&(c||this.renderer&&this.renderer.type!=="raster-stretch")&&this._set("bandIds",null),this._configDefaultRenderer("auto")}async updateRenderer(){const{loaded:i,symbolizer:s}=this;if(!i||!s||!this.renderer)return;const{rasterInfo:a}=this.raster,n=Ze(a,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset}),o=n==null?void 0:n.name,l=Ye({...this.renderer.toJSON(),variableName:o});if(JSON.stringify(this._cachedRendererJson)===JSON.stringify(l))return;const c=this._rasterJobHandler.instance;c&&(s.rasterInfo=Xe(a,o),s.rendererJSON=l,s.bind(),await c.updateSymbolizer(s),this._cachedRendererJson=l)}async applyRenderer(i,s){const a=i==null?void 0:i.pixelBlock;if(!(a!=null&&a.pixels&&a.pixels.length>0))return null;let n;await this.updateRenderer();const o=this._rasterJobHandler.instance,l=this.bandIds??[];return n=o?await o.symbolize({...i,simpleStretchParams:s,bandIds:l}):this.symbolizer.symbolize({...i,simpleStretchParams:s,bandIds:l}),n}getTileUrl(i,s,a){return this.raster.datasetFormat==="RasterTileServer"?`${this.url}/tile/${i}/${s}/${a}`:""}getCompatibleTileInfo(i,s,a=!1){if(!this.loaded||s==null)return null;if(a&&i.equals(this.spatialReference))return this.tileInfo;const n=Ft(i);return te.create({size:256,spatialReference:i,origin:n?{x:n.origin[0],y:n.origin[1]}:{x:s.xmin,y:s.ymax}})}getCompatibleFullExtent(i){var s;return this.loaded?((s=this._compatibleFullExtent)!=null&&s.spatialReference.equals(i)||(this._compatibleFullExtent=this.raster.computeExtent(i)),this._compatibleFullExtent):null}async fetchTile(i,s,a,n={}){var l;if(r(this),n.requestAsImageElement){const c=this.getTileUrl(i,s,a);return lt(c,{responseType:"image",query:{...this.refreshParameters,...this.raster.ioConfig.customFetchParameters},signal:n.signal}).then(u=>u.data)}const{serviceRasterInfo:o}=this;if(o.multidimensionalInfo!=null&&(n=this.normalizeRasterFetchOptions(n)).multidimensionalDefinition==null){const c=n.tileInfo||o.storageInfo.tileInfo;return{extent:this.raster.getTileExtentFromTileInfo(i,s,a,c),pixelBlock:null}}return await this._initJobHandler(),await this.updateRasterFunction(),((l=this.renderer)==null?void 0:l.type)==="raster-shaded-relief"&&(n={...n,buffer:{cols:1,rows:1}}),this.raster.fetchTile(i,s,a,n)}async fetchPixels(i,s,a,n={}){return this.serviceRasterInfo.multidimensionalInfo!=null&&(n=this.normalizeRasterFetchOptions(n)).multidimensionalDefinition==null?{extent:i,pixelBlock:null}:(await this._initJobHandler(),await this.updateRasterFunction(),s=Math.round(s),a=Math.round(a),this.raster.fetchPixels(i,s,a,n))}async identify(i,s={}){var l;await this.load();const{raster:a,serviceRasterInfo:n}=this;if((n==null?void 0:n.multidimensionalInfo)!=null&&!(n.hasMultidimensionalTranspose&&(ft(s.multidimensionalDefinition)||s.transposedVariableName||s.timeExtent))&&(s=this.normalizeRasterFetchOptions(s)).multidimensionalDefinition==null)return{location:i,value:null};const o=(l=this.multidimensionalSubset)==null?void 0:l.areaOfInterest;if(o&&!o.contains(i))throw new P("imagery-tile-mixin:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");return a.identify(i,s)}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}hasStandardTime(){var n,o,l;const i=(n=this.serviceRasterInfo)==null?void 0:n.multidimensionalInfo;if(i==null||((o=this.serviceRasterInfo)==null?void 0:o.dataType)!=="standard-time")return!1;const s=this.multidimensionalDefinition,a=(l=s==null?void 0:s[0])==null?void 0:l.variableName;return i.variables.some(c=>c.name===a&&(!(s!=null&&s[0].dimensionName)||c.dimensions.some(u=>u.name==="StdTime")))}getStandardTimeValue(i){return new Date(24*(i-25569)*3600*1e3).toString()}getMultidimensionalSubsetVariables(i){var a;const s=i??((a=this.serviceRasterInfo)==null?void 0:a.multidimensionalInfo);return ci(this.multidimensionalSubset,s)}_configDefaultSettings(){this._configDefaultInterpolation(),this.multidimensionalDefinition||(this.multidimensionalDefinition=Qe(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset})),this.rasterFunction&&this.raster.datasetFormat==="Function"&&(this._cachedRasterFunctionJson=this.rasterFunction.toJSON()),this._configDefaultRenderer()}_initJobHandler(){if(this._rasterJobHandler.connectionPromise!=null)return this._rasterJobHandler.connectionPromise;const i=new ti;return this._rasterJobHandler.connectionPromise=i.initialize().then(async()=>{r(this),this._rasterJobHandler.instance=i,this.raster.rasterJobHandler=i,this.raster.datasetFormat==="Function"&&this.raster.syncJobHandler(),this.rasterFunction&&await this.updateRasterFunction().catch(()=>{}),this.renderer&&this.updateRenderer()}).catch(()=>{}),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null,this.raster&&(this.raster.rasterJobHandler=null)}_configDefaultInterpolation(){var i;if(this.interpolation==null){r(this);const{raster:s}=this,a=Kt(s.rasterInfo,s.tileType,(i=this.sourceJSON)==null?void 0:i.defaultResamplingMethod);this._set("interpolation",a)}}_configDefaultRenderer(i="no"){var h,f,p;r(this);const{rasterInfo:s}=this.raster,a=Ze(s,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset}),n=a==null?void 0:a.name,o=Qt({variableName:n,rasterFunctionName:(h=this.rasterFunction)==null?void 0:h.functionName,presetRenderers:this.presetRenderers});if(!this.bandIds&&s.bandCount>1&&(this.bandIds=(o==null?void 0:o.bandIds)??Zt(s)),!this.renderer||i==="override"){const g=ei(this.raster),y=(o==null?void 0:o.renderer)??Ke(s,{bandIds:this.bandIds,variableName:n,rasterFunctionColorRamp:g}),m=s.statistics,d=m&&m.length>0?m[0]:null,x=(d==null?void 0:d.max)??0,w=(d==null?void 0:d.min)??0;this.raster.datasetFormat==="WCSServer"&&y.type==="raster-stretch"&&(x>1e24||w<-1e24)&&(y.dynamicRangeAdjustment=!0,y.customStatistics=null,y.stretchType==="none"&&(y.stretchType="min-max")),this.renderer=y}const l=Ye({...this.renderer.toJSON(),variableName:n}),c=Xe(s,n);this.symbolizer?(this.symbolizer.rendererJSON=l,this.symbolizer.rasterInfo=c):this.symbolizer=new fi({rendererJSON:l,rasterInfo:c});const u=this.symbolizer.bind();if(u.success){if(i==="auto"){const{colormap:g}=this.raster.rasterInfo,y=this.renderer;if(g!=null&&y.type==="raster-colormap"){const m=Ke(this.raster.rasterInfo);JSON.stringify(m)!==JSON.stringify(y)&&this._configDefaultRenderer("override")}else if(y.type==="raster-stretch"){const m=(f=this.bandIds)==null?void 0:f.length,d=(p=y.customStatistics)==null?void 0:p.length;!y.dynamicRangeAdjustment&&d&&m&&d!==m&&this._configDefaultRenderer("override")}}}else ne.getLogger(this).warn("imagery-tile-mixin",u.error||"The given renderer is not supported by the layer."),i==="auto"&&this._configDefaultRenderer("override")}};function r(i){if(!i.raster||!i.serviceRasterInfo)throw new P("imagery-tile","no raster")}return b([S({clonable:!1})],e.prototype,"_cachedRendererJson",void 0),b([S({clonable:!1})],e.prototype,"_cachedRasterFunctionJson",void 0),b([S({clonable:!1})],e.prototype,"_compatibleFullExtent",void 0),b([S({clonable:!1})],e.prototype,"_isConstructedFromFunctionRaster",void 0),b([S({clonable:!1})],e.prototype,"_rasterJobHandler",void 0),b([S({type:[vt],json:{write:{overridePolicy(){var i;return{enabled:!this.loaded||this.raster.tileType==="Raster"||((i=this.bandIds)==null?void 0:i.join(","))!=="0,1,2"}}}}})],e.prototype,"bandIds",void 0),b([S({json:{origins:{service:{read:{source:"copyrightText"}}}}})],e.prototype,"copyright",void 0),b([S({json:{read:!1}})],e.prototype,"fullExtent",null),b([S({json:{write:{overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"||this.interpolation!=="bilinear"}}}}}),St(jt)],e.prototype,"interpolation",void 0),b([S()],e.prototype,"ioConfig",void 0),b([S({type:[Le],json:{write:!0}})],e.prototype,"multidimensionalDefinition",null),b([S({type:Ut,json:{write:!0}})],e.prototype,"multidimensionalSubset",void 0),b([S()],e.prototype,"raster",void 0),b([S({type:$e,json:{name:"renderingRule",write:!0}})],e.prototype,"rasterFunction",null),b([S({readOnly:!0})],e.prototype,"rasterInfo",null),b([S()],e.prototype,"serviceRasterInfo",void 0),b([S()],e.prototype,"sourceJSON",void 0),b([S({readOnly:!0,type:H,json:{read:!1}})],e.prototype,"spatialReference",void 0),b([S({type:te})],e.prototype,"tileInfo",void 0),b([S(ht)],e.prototype,"url",null),b([S()],e.prototype,"renderer",null),b([S({types:qt,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(){var s;const i=((s=this.renderer)==null?void 0:s.type)==="raster-stretch"&&this.renderer.stretchType==="none"&&!this.renderer.useGamma;return{enabled:!this.loaded||this.raster.tileType==="Raster"||!i}}},origins:{"web-scene":{types:Vt,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:i=>({enabled:i&&i.type!=="vector-field"&&i.type!=="flow"})}}}}})],e.prototype,"internalRenderer",null),b([Tt("internalRenderer")],e.prototype,"readRenderer",null),b([S({clonable:!1})],e.prototype,"symbolizer",void 0),e=b([Q("esri.layers.mixins.ImageryTileMixin")],e),e};function gt(t){return["x","e","east","long","longitude"].includes(t.toLowerCase())}function xt(t){return["y","n","west","lat","latitude"].includes(t.toLowerCase())}function os(t){const{axes:e}=t.domain,r=Object.keys(e),i=[],s=[];let a=-1,n=-1,o=[];for(let x=0;x<r.length;x++){const w=r[x];gt(w)?a=x:xt(w)&&(n=x);const I=e[w],T=[];if("values"in I){I.values.forEach(_=>T.push(typeof _=="string"?new Date(_).getTime():_));const R=T[1]-T[0];i.push([T[0]-.5*R,T[T.length-1]+.5*R]),s.push(R)}else{const{start:R,stop:_,num:M}=I,v=(_-R)/(M-1);i.push([R-.5*v,_+.5*v]),s.push(v);for(let k=0;k<M;k++)T.push(R+v*k)}o.push({name:w,values:T,extent:[T[0],T[T.length-1]]})}a>-1&&n===-1?n=a===0?1:0:n>-1&&a===-1?a=n===0?1:0:n===-1&&a===-1&&(a=0,n=1),o=o.filter((x,w)=>!(w===a||w===n));const{referencing:l}=t.domain,c=l.find(x=>x.coordinates.includes(r[a])).system.id,u=c==null?void 0:c.slice(c.lastIndexOf("/")+1),h=u==null||u==="CRS84"?4326:Number(u),f=new H({wkid:h}),[p,g]=i[a],[y,m]=i[n],d=new L({xmin:p,xmax:g,ymin:y,ymax:m,spatialReference:f});return{width:Math.round(d.width/s[a]),height:Math.round(d.height/s[n]),extent:d,dimensions:o}}function Fe(t){const e=Mt();return e?t[e]??Object.values(t)[0]:Object.values(t)[0]}function ke(){return Math.round(255*Math.random())}function ls(t){var i,s;const e={},{parameters:r}=t;if(!r)return e;for(const[a,n]of Object.entries(r)){const{type:o,description:l,unit:c,categoryEncoding:u,observedProperty:h}=n;if(o==="Parameter"&&(e[a]={},l&&(e[a].description=Fe(l)),c&&(e[a].unit=c.label?Fe(c.label):null,e[a].symbol=(i=c.symbol)==null?void 0:i.value),u)){const f=Object.entries(u).map((y,m)=>({OID:m,Value:Number(y[1]),ClassName:y[0].slice(y[0].lastIndexOf("/")+1),Count:1}));let p=!1;(s=h==null?void 0:h.categories)!=null&&s.length&&(h.categories.forEach(y=>{if(!y.id)return;const m=y.id.slice(y.id.lastIndexOf("/")+1),d=f.find(w=>w.ClassName===m);if(!d)return;const x=y.label?Fe(y.label):null;if(d.Label=x,y.preferredColor){const w=kt.fromHex(y.preferredColor);w&&(p=!0,d.Red=w.r,d.Green=w.g,d.Blue=w.b)}}),p&&f.forEach(y=>{y.Red==null&&(y.Red=ke(),y.Green=ke(),y.Blue=ke())}));const g={objectIdFieldName:"",fields:[{name:"OID",type:"esriFieldTypeOID",alias:"OID",domain:null},{name:"Value",type:"esriFieldTypeInteger",alias:"Value",domain:null},{name:"Count",type:"esriFieldTypeDouble",alias:"Count",domain:null},{name:"ClassName",type:"esriFieldTypeString",alias:"ClassName",domain:null,length:50},{name:"Label",type:"esriFieldTypeString",alias:"Label",domain:null,length:50}],features:f.map(y=>({attributes:y}))};p&&g.fields.push({name:"Red",type:"esriFieldTypeInteger",alias:"Red",domain:null},{name:"Green",type:"esriFieldTypeInteger",alias:"Green",domain:null},{name:"Blue",type:"esriFieldTypeInteger",alias:"Blue",domain:null}),e[a].attributeTable=g}}return e}function cs(t){let e=Number.MAX_VALUE,r=-Number.MAX_VALUE;for(let i=0;i<t.length;i++){const s=t[i];s!=null&&(s<e&&(e=s),s>r&&(r=s))}return _i(e,r)}function us(t,e,r){const i=t.map((l,c)=>({name:l,count:e[c]})).sort((l,c)=>l.name>c.name?-1:1),s=(a=1,l=>a*=l.count);var a;const n=[...i.slice(1),{name:"",count:1}].reverse().map(s).reverse();let o=0;for(let l=t.length-1;l>=0;l--)o+=n[i.findIndex(({name:c})=>c===t[l])]*(r%e[l]),r=Math.floor(r/e[l]);return o}function hs(t){var f;const{width:e,height:r,extent:i,dimensions:s}=os(t),{ranges:a}=t,n=Object.keys(a).sort((p,g)=>p<g?-1:1),o=[];for(let p=0;p<n.length;p++){const g=n[p];s!=null&&s.length&&o.push({name:g,dimensions:s})}const l=ls(t);o.forEach(p=>l[p.name]&&Object.assign(p,l[p.name]));const c=o.length?{variables:o}:void 0,u=[];for(let p=0;p<n.length;p++){const g=n[p],{values:y,dataType:m,axisNames:d,shape:x}=a[g],w=x.length>2?p*x.slice(0,-2).reduce((v,k)=>v*k):0,I=d.slice(0,-2),T=x.slice(0,-2),R=m==="float"?"f32":cs(y),_=e*r,M=y.length/_;for(let v=0;v<M;v++){const k=V.createEmptyBand(R,_),F=new Uint8Array(_).fill(255);let C=!1;const E=v*_;for(let O=0;O<_;O++){const $=y[E+O];$==null?(F[O]=0,C=!0):k[O]=$}if(p===0||s!=null&&s.length){const O=new V({width:e,height:r,mask:C?F:null,pixels:[k],pixelType:R});O.updateStatistics(),(s==null?void 0:s.length)?u[us(I,T,v)+w]=O:u.push(O)}else{const O=u[v];O.pixels.push(k),C?O.mask&&(O.mask=V.combineBandMasks([O.mask,F])):O.mask=C?F:null}}}const h=(f=Object.values(l).find(p=>p.attributeTable))==null?void 0:f.attributeTable;return{extent:i,pixelBlocks:u,multidimensionalInfo:c,attributeTable:h,bandNames:c?void 0:n}}let le=class extends ae{constructor(){super(...arguments),this.datasetFormat="MEMORY",this.source=null}get url(){return""}fetchRawTile(t,e,r,i={}){if(!this._pixelBlockTiles){const{rasterInfo:a}=this,[n,o]=a.storageInfo.tileInfo.size,{sliceId:l}=i,{pixelBlocks:c}=this.source,u={pixelBlock:l==null?c[0]:c[l],useBilinear:a.dataType!=="thematic",tileSize:{width:n,height:o},level:t,row:e,col:r},h=this.rasterJobHandler?this.rasterJobHandler.clipTile(u,i):Pi(u);return Promise.resolve(h)}const s=this._pixelBlockTiles.get(`${t}/${e}/${r}`);return Promise.resolve(s)}async _open(t){const e=this.source,{pixelBlocks:r,attributeTable:i,statistics:s,histograms:a,name:n,nativeExtent:o,transform:l}=e,c=r[0],{width:u,height:h,pixelType:f}=c,p=e.extent??new L({xmin:-.5,ymin:.5,xmax:u-.5,ymax:h-.5,spatialReference:new H({wkid:3857})}),g=e.isPseudoSpatialReference??!e.extent,y={x:p.width/u,y:p.height/h},m={...e.keyProperties};i&&(m.DataType="Thematic");const d=new ve({width:u,height:h,pixelType:f,extent:p,nativeExtent:o,attributeTable:i,transform:l,pixelSize:y,spatialReference:p.spatialReference,bandCount:c.pixels.length,keyProperties:m,multidimensionalInfo:e.multidimensionalInfo,statistics:s,isPseudoSpatialReference:g,histograms:a});this.ioConfig.skipMapInfo&&this.updateImageSpaceRasterInfo(d),this.createRemoteDatasetStorageInfo(d,512,512),this._set("rasterInfo",d),this.updateTileInfo(),d.multidimensionalInfo?await this._buildMDimStats(e.pixelBlocks,d.multidimensionalInfo):await this._buildInMemoryRaster(c,{width:512,height:512},t),d.multidimensionalInfo||(this.source=null),this.datasetName=n}async _buildInMemoryRaster(t,e,r){var h,f;const{rasterInfo:i}=this,s=i.storageInfo.maximumPyramidLevel??0,a=i.dataType!=="thematic",n=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:t,tileSize:e,maximumPyramidLevel:s,useBilinear:a},r):Promise.resolve($i(t,e,s,a)),o=i.statistics!=null,l=i.histograms!=null,c=this.ioConfig.skipStatistics||o?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:t},r):Promise.resolve(mi(t)),u=await ct([n,c]);if(!u[0].value&&u[1].value)throw new P("inmemory-raster:open","failed to build in memory raster");this._pixelBlockTiles=u[0].value,o||(i.statistics=(h=u[1].value)==null?void 0:h.statistics),l||(i.histograms=(f=u[1].value)==null?void 0:f.histograms)}async _buildMDimStats(t,e,r){for(let i=0;i<e.variables.length;i++){const s=e.variables[i];if(s.statistics)continue;const a=s.dimensions.map(c=>{var u,h;return new Le({variableName:s.name,dimensionName:c.name,values:[((u=c.values)==null?void 0:u[0])??((h=c.extent)==null?void 0:h[0])],isSlice:!0})}),n=mt(a,e),o=n==null?null:t[n];if(o==null)continue;const l=this.rasterJobHandler?await this.rasterJobHandler.computeStatisticsHistograms({pixelBlock:o},r):He(o);s.statistics=l.statistics,s.histograms||(s.histograms=l.histograms)}}};b([S({type:String,json:{write:!0}})],le.prototype,"datasetFormat",void 0),b([S()],le.prototype,"source",void 0),b([S()],le.prototype,"url",null),le=b([Q("esri.layers.support.rasterDatasets.InMemoryRaster")],le);const je=le;let fe=class extends ae{constructor(){super(...arguments),this.datasetFormat="CovJSON"}fetchRawTile(e,r,i,s={}){return this._inMemoryRaster.fetchRawTile(e,r,i,s)}async _open(e){const{extent:r,pixelBlocks:i,multidimensionalInfo:s,attributeTable:a,bandNames:n}=await this._fetchData(e),{statistics:o,histograms:l}=He(i[0]),c=n==null?void 0:n.map(p=>({BandName:p})),u={DataType:a?"Thematic":s?"Scientific":"Generic",BandProperties:c},h=new je({source:{extent:r,pixelBlocks:i,attributeTable:a?We.fromJSON(a):null,multidimensionalInfo:s,statistics:o,histograms:l,keyProperties:u,isPseudoSpatialReference:!1}});await h.open(),this._inMemoryRaster=h;const f=this.source?"":this.url.slice(this.url.lastIndexOf("/")+1);this._set("datasetName",f.slice(0,f.indexOf("."))),this._set("rasterInfo",h.rasterInfo)}async _fetchData(e){var a,n,o,l;const r=this.source??(await this.request(this.url,{signal:e==null?void 0:e.signal})).data,i="imagery-tile-layer:open-coverage-json";if(((a=r.type)==null?void 0:a.toLowerCase())!=="coverage"||((o=(n=r.domain)==null?void 0:n.domainType)==null?void 0:o.toLowerCase())!=="grid")throw new P(i,"Only coverage with Grid domain type is supported");if(!r.ranges)throw new P(i,"Missing ranges in the grid coverage data");if(!((l=r.domain.referencing)!=null&&l.length))throw new P(i,"Missing domain referencing in the grid coverage data");const s=Object.values(r.ranges);for(let c=0;c<s.length;c++){const{axisNames:u,shape:h,type:f,values:p}=s[c];if(!(f.toLowerCase()==="ndarray"&&(p!=null&&p.length)&&(u!=null&&u.length)&&(h!=null&&h.length)))throw new P(i,"Only ranges with valid NdArray, axisNames, shape, and inline values are supported");if(!(gt(u[u.length-1])&&xt(u[u.length-2])))throw new P(i,"Only row-major ordered pixel values are supported. X axis must be the last axis.")}return hs(r)}};b([S({type:String,json:{write:!0}})],fe.prototype,"datasetFormat",void 0),b([S({constructOnly:!0})],fe.prototype,"source",void 0),fe=b([Q("esri.layers.support.rasterDatasets.CovJSONRaster")],fe);const fs=fe;function he(t,e){if(!t||!e)return[];let r=e;e.includes("/")?(r=e.slice(0,e.indexOf("/")),e=e.slice(e.indexOf("/")+1)):e="";const i=[];if(e){const a=he(t,r);for(let n=0;n<a.length;n++)he(a[n],e).forEach(o=>i.push(o));return i}const s=t.getElementsByTagNameNS("*",r);if(!s||s.length===0)return[];for(let a=0;a<s.length;a++)i.push(s[a]||s.item(a));return i}function q(t,e){if(!t||!e)return null;let r=e;e.includes("/")?(r=e.slice(0,e.indexOf("/")),e=e.slice(e.indexOf("/")+1)):e="";const i=he(t,r);return i.length>0?e?q(i[0],e):i[0]:null}function K(t,e=null){const r=e?q(t,e):t;let i;return r?(i=r.textContent||r.nodeValue,i?i.trim():null):null}function ms(t,e){const r=he(t,e),i=[];let s;for(let a=0;a<r.length;a++)s=r[a].textContent||r[a].nodeValue,s&&(s=s.trim(),s!==""&&i.push(s));return i}function xe(t,e){return ms(t,e).map(r=>Number(r))}function re(t,e){const r=K(t,e);return Number(r)}function Me(t,e){var s;const r=(s=t==null?void 0:t.nodeName)==null?void 0:s.toLowerCase(),i=e.toLowerCase();return r.slice(r.lastIndexOf(":")+1)===i}function ot(t,e){if(!t||!e)return null;const r=[];for(let i=0;i<t.length;i++)r.push(t[i]),r.push(e[i]);return r}function ps(t){const e=q(t,"GeodataXform"),r=Se(re(e,"SpatialReference/WKID")||K(e,"SpatialReference/WKT"));if(e.getAttribute("xsi:type")!=="typens:PolynomialXform")return{spatialReference:r,transform:null};const i=re(e,"PolynomialOrder")??1,s=xe(e,"CoeffX/Double"),a=xe(e,"CoeffY/Double"),n=xe(e,"InverseCoeffX/Double"),o=xe(e,"InverseCoeffY/Double"),l=ot(s,a),c=ot(n,o);return{spatialReference:r,transform:l&&c&&l.length&&c.length?new Ge({spatialReference:r,polynomialOrder:i,forwardCoefficients:l,inverseCoefficients:c}):null}}function ds(t){var f;const e=re(t,"NoDataValue"),r=q(t,"Histograms/HistItem"),i=re(r,"HistMin"),s=re(r,"HistMax"),a=re(r,"BucketCount"),n=(f=K(r,"HistCounts"))==null?void 0:f.split("|").map(p=>Number(p));let o,l,c,u;he(t,"Metadata/MDI").forEach(p=>{const g=Number(p.textContent??p.nodeValue);switch(p.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":o=g;break;case"STATISTICS_MAXIMUM":l=g;break;case"STATISTICS_MEAN":c=g;break;case"STATISTICS_STDDEV":u=g}});const h=re(t,"Metadata/SourceBandIndex");return{noDataValue:e,histogram:n!=null&&n.length&&i!=null&&s!=null?{min:i,max:s,size:a||n.length,counts:n}:null,sourceBandIndex:h,statistics:o!=null&&l!=null?{min:o,max:l,avg:c,stddev:u}:null}}function Se(t){if(!t)return null;let e=Number(t);if(!isNaN(e)&&e!==0)return new H({wkid:e});if(t=String(t).trim(),Ct(t))return new H({wkt2:t});const r=t.toUpperCase();if(r.startsWith("COMPD_CS")){if(!r.includes("VERTCS")||!r.includes("GEOGCS")&&!r.startsWith("PROJCS"))return null;const i=r.indexOf("VERTCS"),s=r.indexOf("PROJCS"),a=s>-1?s:r.indexOf("GEOGCS");if(a===-1)return null;const n=t.slice(a,t.lastIndexOf("]",i)+1).trim(),o=t.slice(i,t.lastIndexOf("]")).trim();e=Ce(n);const l=new H(e?{wkid:e}:{wkt:n}),c=Ce(o);return c&&(l.vcsWkid=c),l}return r.startsWith("GEOGCS")||r.startsWith("PROJCS")?(e=Ce(t),new H(e!==0?{wkid:e}:{wkt:t})):null}function Ce(t){var s;const e=t.replaceAll("]","[").replaceAll('"',"").split("[").map(a=>a.trim()).filter(a=>a!==""),r=e[e.length-1].split(","),i=(s=r[0])==null?void 0:s.toLowerCase();if((i==="epsg"||i==="esri")&&t.endsWith('"]]')){const a=Number(r[1]);if(!isNaN(a)&&a!==0)return a}return 0}function Ue(t){var i;if(((i=t==null?void 0:t.documentElement.tagName)==null?void 0:i.toLowerCase())!=="pamdataset")return{};const e={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};t.documentElement.childNodes.forEach(s=>{if(s.nodeType===1){if(Me(s,"SRS")){if(!e.spatialReference){const a=K(s);e.spatialReference=Se(a)}}else if(Me(s,"Metadata"))if(s.getAttribute("domain")==="xml:ESRI"){const{spatialReference:a,transform:n}=ps(s);e.transform=n,e.spatialReference||(e.spatialReference=a)}else he(s,"MDI").forEach(a=>e.metadata[a.getAttribute("key")]=K(a));else if(Me(s,"PAMRasterBand")){const a=ds(s);a.sourceBandIndex!=null&&e.rasterBands[a.sourceBandIndex]==null?e.rasterBands[a.sourceBandIndex]=a:e.rasterBands.push(a)}}});const r=e.rasterBands;if(r.length){const s=!!r[0].statistics;e.statistics=s?r.map(n=>n.statistics).filter(Pe):null;const a=!!r[0].histogram;e.histograms=a?r.map(n=>n.histogram).filter(Pe):null}return e}let be=class extends ae{fetchRawTile(t,e,r,i={}){return this._inMemoryRaster.fetchRawTile(t,e,r,i)}async _open(t){const e=await this._fetchData(t);let{spatialReference:r,statistics:i,histograms:s,transform:a}=await this._fetchAuxiliaryData(t);const n=!r;n&&(r=new H({wkid:3857})),s!=null&&s.length&&i==null&&(i=ze(s));const{width:o,height:l}=e;let c=new L({xmin:-.5,ymin:.5-l,xmax:o-.5,ymax:.5,spatialReference:r});const u=a?a.forwardTransform(c):c;let h=!0;if(a){const p=a.forwardCoefficients;h=p&&p[1]===0&&p[2]===0,h&&(a=null,c=u)}const f=new je({source:{extent:u,nativeExtent:c,transform:a,pixelBlocks:[e],statistics:i,histograms:s,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:n},ioConfig:{sampling:"closest",skipStatistics:!0}});this.ioConfig.skipMapInfo&&(f.ioConfig.skipMapInfo=!0),await f.open(),f.source=null,this._set("rasterInfo",f.rasterInfo),this._inMemoryRaster=f}async _fetchData(t){const{data:e}=await this.request(this.url,{responseType:"array-buffer",signal:t==null?void 0:t.signal}),r=pi(e).toUpperCase();if(r!=="JPG"&&r!=="PNG"&&r!=="GIF"&&r!=="BMP")throw new P("image-aux-raster:open","the data is not a supported format");this._set("datasetFormat",r);const i=r.toLowerCase(),s=i==="gif"||i==="bmp"||!Ot("ios"),a=await this.decodePixelBlock(e,{format:i,useCanvas:s,hasNoZlibMask:!0});if(a==null)throw new P("image-aux-raster:open","the data cannot be decoded");return a}async _fetchAuxiliaryData(t){var u;const e=t==null?void 0:t.signal,{skipExtensions:r=[],skipMapInfo:i}=this.ioConfig,s=i||r.includes("aux.xml")?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:e}),a=this.datasetFormat,n=a==="JPG"?"jgw":a==="PNG"?"pgw":a==="BMP"?"bpw":null,o=n&&r.includes(n)?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+n,{responseType:"text",signal:e}),l=await ct([s,o]);if(e!=null&&e.aborted)throw Pt();const c=Ue((u=l[0].value)==null?void 0:u.data);if(!c.transform){const h=l[1].value?l[1].value.data.split(`
`).slice(0,6).map(f=>Number(f)):null;c.transform=(h==null?void 0:h.length)===6?new Ge({forwardCoefficients:[h[4],h[5],h[0],-h[1],h[2],-h[3]]}):null}return c}};b([S({type:String,json:{write:!0}})],be.prototype,"datasetFormat",void 0),be=b([Q("esri.layers.support.rasterDatasets.ImageAuxRaster")],be);const we=be;let me=class extends ae{constructor(){super(...arguments),this._levelOffset=0,this._tilemapCache=null,this._slices=null,this.datasetFormat="RasterTileServer",this.tileType=null}async fetchRawTile(t,e,r,i={}){const{storageInfo:s,extent:a}=this.rasterInfo,{transposeInfo:n}=s,o=n!=null&&!!i.transposedVariableName;if(this._slices&&!o&&i.sliceId==null)return null;const l=o?0:s.maximumPyramidLevel-t+this._levelOffset,c=`${this.url}/tile/${l}/${e}/${r}`,u=this._slices?o?{variable:i.transposedVariableName}:{sliceId:i.sliceId||0}:null,{data:h}=await this.request(c,{query:u,responseType:"array-buffer",signal:i.signal});if(!h)return null;const f=o?n.tileSize:s.tileInfo.size,p=await this.decodePixelBlock(h,{width:f[0],height:f[1],planes:null,pixelType:null,isPoint:this.tileType==="Elevation",returnInterleaved:o,noDataValue:this.rasterInfo.noDataValue});if(p==null)return null;const g=s.blockBoundary[t];if(s.compression!=="jpg"||r>g.minCol&&r<g.maxCol&&e>g.minRow&&e<g.maxRow)return p;const{origin:y,blockWidth:m,blockHeight:d}=s,{x,y:w}=this.getPyramidPixelSize(t),I=Math.round((a.xmin-y.x)/x)%m,T=Math.round((a.xmax-y.x)/x)%m||m,R=Math.round((y.y-a.ymax)/w)%d,_=Math.round((y.y-a.ymin)/w)%d||d,M=r===g.minCol?I:0,v=e===g.minRow?R:0,k=r===g.maxCol?T:m,F=e===g.maxRow?_:d;return Ni(p,{x:M,y:v},{width:k-M,height:F-v}),p}getSliceIndex(t){if(!this._slices||t==null||t.length===0)return null;const e=t;for(let r=0;r<this._slices.length;r++){const i=this._slices[r].multidimensionalDefinition;if(i.length===e.length&&!i.some(s=>{const a=e.find(n=>s.variableName===n.variableName&&n.dimensionName===s.dimensionName);return a?(Array.isArray(s.values[0])?`${s.values[0][0]}-${s.values[0][1]}`:s.values[0])!==(Array.isArray(a.values[0])?`${a.values[0][0]}-${a.values[0][1]}`:a.values[0]):!0}))return r}return null}async fetchVariableStatisticsHistograms(t,e){var a,n,o;const r=this.request(this.url+"/statistics",{query:{variable:t,f:"json"},signal:e}).then(l=>{var c;return(c=l.data)==null?void 0:c.statistics}),i=this.request(this.url+"/histograms",{query:{variable:t,f:"json"},signal:e}).then(l=>{var c;return(c=l.data)==null?void 0:c.histograms}),s=await Promise.all([r,i]);return s[0]&&s[0].forEach(l=>{l.avg=l.mean,l.stddev=l.standardDeviation}),(o=(n=(a=s[1])==null?void 0:a[0])==null?void 0:n.counts)!=null&&o.length||(s[1]=null),{statistics:s[0]||null,histograms:s[1]||null}}async computeBestPyramidLevelForLocation(t,e={}){if(!this._tilemapCache)return 0;let r=this.identifyPixelLocation(t,0,e.datumTransformation);if(r===null)return null;let i=0;const{maximumPyramidLevel:s}=this.rasterInfo.storageInfo;let a=s-i+this._levelOffset;const n=r.srcLocation;for(;a>=0;){try{if(await this._tilemapCache.fetchAvailability(a,r.row,r.col,e)==="available")break}catch{}if(a--,i++,r=this.identifyPixelLocation(n,i,e.datumTransformation),r===null)return null}return a===-1||r==null?null:i}async _open(t){var _,M;const e=t==null?void 0:t.signal,r=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:e});r.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const i=r.data;if(this.sourceJSON=i,!i)throw new P("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!i.tileInfo)throw new P("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo();const s=["jpg","jpeg","png","png8","png24","png32","mixed"];this.tileType=i.cacheType,this.tileType==null&&(s.includes(i.tileInfo.format.toLowerCase())?this.tileType="Map":i.tileInfo.format.toLowerCase()==="lerc"?this.tileType="Elevation":this.tileType="Raster"),this.datasetName=((_=i.name)==null?void 0:_.slice(i.name.indexOf("/")+1))??"";const a=await this._fetchRasterInfo({signal:e});if(a==null)throw new P("image-server-raster:open","cannot initialize image service");ii(a,i);const n=this.tileType==="Map"?ys(i.tileInfo,i):te.fromJSON(i.tileInfo);$t(n);const[o,l]=this._computeMinMaxLOD(a,n),{extent:c,pixelSize:u}=a,h=.5/a.width*u.x,f=Math.max(u.x,u.y),{lods:p}=n;(this.tileType!=="Map"&&i.maxScale!==0||Math.abs(u.x-u.y)>h||!p.some(v=>Math.abs(v.resolution-f)<h))&&(u.x=u.y=o.resolution,a.width=Math.ceil((c.xmax-c.xmin)/u.x-.1),a.height=Math.ceil((c.ymax-c.ymin)/u.y-.1));const g=o.level-l.level,[y,m]=n.size,d=[],x=[];p.forEach((v,k)=>{v.level>=l.level&&v.level<=o.level&&d.push({x:v.resolution,y:v.resolution}),k<p.length-1&&x.push(Math.round(10*v.resolution/p[k+1].resolution)/10)}),d.sort((v,k)=>v.x-k.x);const w=this.computeBlockBoundary(c,y,m,n.origin,d,g),I=d.length>1?d.slice(1):null;let T;i.transposeInfo&&(T={tileSize:[i.transposeInfo.rows,i.transposeInfo.cols],packetSize:((M=a.keyProperties)==null?void 0:M._yxs.PacketSize)??0});const R=x.length<=1||x.length>=3&&x.slice(0,-1).every(v=>v===x[0])?x[0]??2:Math.round(10/(l.resolution/o.resolution)**(-1/g))/10;if(a.storageInfo=new Re({blockWidth:n.size[0],blockHeight:n.size[1],pyramidBlockWidth:n.size[0],pyramidBlockHeight:n.size[1],pyramidResolutions:I,pyramidScalingFactor:R,compression:n.format,origin:n.origin,firstPyramidLevel:1,maximumPyramidLevel:g,tileInfo:n,transposeInfo:T,blockBoundary:w}),gs(a),this._set("rasterInfo",a),i.capabilities.toLowerCase().includes("tilemap")){const v={tileInfo:a.storageInfo.tileInfo,parsedUrl:Nt(this.url),url:this.url,tileServers:[]};this._tilemapCache=new qi({layer:v})}}async _fetchRasterInfo(t){const e=this.sourceJSON;if(this.tileType==="Map"){const n=e.fullExtent||e.extent,o=Math.ceil((n.xmax-n.xmin)/e.pixelSizeX-.1),l=Math.ceil((n.ymax-n.ymin)/e.pixelSizeY-.1),c=H.fromJSON(e.spatialReference||n.spatialReference),u=new A({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:c});return new ve({width:o,height:l,bandCount:3,extent:L.fromJSON(n),spatialReference:c,pixelSize:u,pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}})}const{signal:r}=t,i=si(this.url,this.sourceJSON,{signal:r,query:this.ioConfig.customFetchParameters}),s=e.hasMultidimensions?this.request(`${this.url}/slices`,{query:{f:"json"},signal:r}).then(n=>{var o;return(o=n.data)==null?void 0:o.slices}).catch(()=>null):null,a=await Promise.all([i,s]);return this._slices=a[1],a[0]}_fixScaleInServiceInfo(){const{sourceJSON:t}=this;t.minScale&&t.minScale<0&&(t.minScale=0),t.maxScale&&t.maxScale<0&&(t.maxScale=0)}_computeMinMaxLOD(t,e){const{pixelSize:r}=t,i=.5/t.width*r.x,{lods:s}=e,a=e.lodAt(Math.max.apply(null,s.map(f=>f.level))),n=e.lodAt(Math.min.apply(null,s.map(f=>f.level))),{tileType:o}=this;if(o==="Map")return this._levelOffset=s[0].level,[a,n];if(o==="Raster")return[s.find(f=>f.resolution===r.x)??a,n];const{minScale:l,maxScale:c}=this.sourceJSON;let u=a;c>0&&(u=s.find(f=>Math.abs(f.scale-c)<i),u||(u=s.filter(f=>f.scale>c).sort((f,p)=>f.scale>p.scale?1:-1)[0]??a));let h=n;return l>0&&(h=s.find(f=>Math.abs(f.scale-l)<i)??n,this._levelOffset=h.level-n.level),[u,h]}};function ys(t,e){if(!t)return null;const{minScale:r,maxScale:i,minLOD:s,maxLOD:a}=e;if(s!=null&&a!=null)return te.fromJSON({...t,lods:t.lods.filter(({level:n})=>n!=null&&n>=s&&n<=a)});if(r!==0&&i!==0){const n=c=>Math.round(1e4*c)/1e4,o=r?n(r):1/0,l=i?n(i):-1/0;return te.fromJSON({...t,lods:t.lods.filter(c=>{const u=n(c.scale);return u<=o&&u>=l})})}return te.fromJSON(t)}function gs(t){const{extent:e,spatialReference:r}=t;e.xmin>-1&&e.xmax>181&&(r!=null&&r.wkid)&&r.isGeographic&&(t.nativeExtent=t.extent,t.transform=new Li,t.extent=t.transform.forwardTransform(e))}b([S({type:String,json:{write:!0}})],me.prototype,"datasetFormat",void 0),b([S()],me.prototype,"tileType",void 0),me=b([Q("esri.layers.support.rasterDatasets.ImageServerRaster")],me);const xs=me,X=new Map;X.set("Int8","s8"),X.set("UInt8","u8"),X.set("Int16","s16"),X.set("UInt16","u16"),X.set("Int32","s32"),X.set("UInt32","u32"),X.set("Float32","f32"),X.set("Float64","f32"),X.set("Double64","f32");const ee=new Map;ee.set("none",{blobExtension:".til",isOneSegment:!0,decoderFormat:"bip"}),ee.set("lerc",{blobExtension:".lrc",isOneSegment:!1,decoderFormat:"lerc"}),ee.set("deflate",{blobExtension:".pzp",isOneSegment:!0,decoderFormat:"deflate"}),ee.set("jpeg",{blobExtension:".pjg",isOneSegment:!0,decoderFormat:"jpg"});let ce=class extends ae{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}async fetchRawTile(t,e,r,i={}){const{blockWidth:s,blockHeight:a,blockBoundary:n}=this.rasterInfo.storageInfo,o=n[t];if(!o||o.maxRow<e||o.maxCol<r||o.minRow>e||o.minCol>r)return null;const{bandCount:l,pixelType:c}=this.rasterInfo,{ranges:u,actualTileWidth:h,actualTileHeight:f}=this._getTileLocation(t,e,r);if(!u||u.length===0)return null;if(u[0].from===0&&u[0].to===0){const F=new Uint8Array(s*a);return new V({width:s,height:a,pixels:void 0,mask:F,validPixelCount:0})}const{bandIds:p}=this.ioConfig,g=this._getBandSegmentCount(),y=[];let m=0;for(m=0;m<g;m++)p&&!p.includes(m)||y.push(this.request(this._files.data,{range:{from:u[m].from,to:u[m].to},responseType:"array-buffer",signal:i.signal}));const d=await Promise.all(y),x=d.map(F=>F.data.byteLength).reduce((F,C)=>F+C),w=new Uint8Array(x),I=[];let T=0;for(m=0;m<g;m++)I.push(T),w.set(new Uint8Array(d[m].data),T),T+=d[m].data.byteLength;const R=ee.get(this.rasterInfo.storageInfo.compression).decoderFormat,_=await this.decodePixelBlock(w.buffer,{width:s,height:a,format:R,planes:(p==null?void 0:p.length)||l,offsets:I,pixelType:c});if(_==null)return null;let{noDataValue:M}=this.rasterInfo;if(M!=null&&R!=="lerc"&&!_.mask&&(M=M[0],M!=null)){const F=_.width*_.height,C=new Uint8Array(F);if(Math.abs(M)>1e24)for(m=0;m<F;m++)Math.abs((_.pixels[0][m]-M)/M)>1e-6&&(C[m]=1);else for(m=0;m<F;m++)_.pixels[0][m]!==M&&(C[m]=1);_.mask=C}let v=0,k=0;if(h!==s||f!==a){let F=_.mask;if(F)for(m=0;m<a;m++)if(k=m*s,m<f)for(v=h;v<s;v++)F[k+v]=0;else for(v=0;v<s;v++)F[k+v]=0;else for(F=new Uint8Array(s*a),_.mask=F,m=0;m<f;m++)for(k=m*s,v=0;v<h;v++)F[k+v]=1}return _}async _open(t){this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const e=t?t.signal:null,r=await this.request(this.url,{responseType:"xml",signal:e}),{rasterInfo:i,files:s}=this._parseHeader(r.data),{skipMapInfo:a,skipExtensions:n=[]}=this.ioConfig;if(!n.includes("aux.xml")&&!a){const d=await this._fetchAuxiliaryData(t);d!=null&&(i.statistics=d.statistics??i.statistics,i.histograms=d.histograms,d.histograms&&i.statistics==null&&(i.statistics=ze(d.histograms)))}a&&this.updateImageSpaceRasterInfo(i),this._set("rasterInfo",i),this._files=s;const o=await this.request(s.index,{responseType:"array-buffer",signal:e});this._storageIndex=ws(o.data);const{blockWidth:l,blockHeight:c}=this.rasterInfo.storageInfo,u=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:h,height:f}=this.rasterInfo,p=[],g=this._getBandSegmentCount();let y=0,m=-1;for(;y<this._storageIndex.length;){m++;const d=Math.ceil(h/l/u**m)-1,x=Math.ceil(f/c/u**m)-1;y+=(d+1)*(x+1)*g*4,p.push({maxRow:x,maxCol:d,minCol:0,minRow:0})}this.rasterInfo.storageInfo.blockBoundary=p,m>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=m),this.updateTileInfo()}_getBandSegmentCount(){return ee.get(this.rasterInfo.storageInfo.compression).isOneSegment?1:this.rasterInfo.bandCount}_getTileLocation(t,e,r){const{blockWidth:i,blockHeight:s,pyramidScalingFactor:a}=this.rasterInfo.storageInfo,{width:n,height:o}=this.rasterInfo,l=this._getBandSegmentCount();let c,u,h,f=0,p=0;for(h=0;h<t;h++)p=a**h,c=Math.ceil(n/i/p),u=Math.ceil(o/s/p),f+=c*u;p=a**t,c=Math.ceil(n/i/p),u=Math.ceil(o/s/p),f+=e*c+r,f*=4*l;const g=this._storageIndex.subarray(f,f+4*l);let y=0,m=0;const d=[];for(let x=0;x<l;x++)y=g[4*x]*2**32+g[4*x+1],m=y+g[4*x+2]*2**32+g[4*x+3],d.push({from:y,to:m});return{ranges:d,actualTileWidth:r<c-1?i:Math.ceil(n/p)-i*(c-1),actualTileHeight:e<u-1?s:Math.ceil(o/p)-s*(u-1)}}_parseHeader(t){const e=q(t,"MRF_META/Raster");if(!e)throw new P("mrf:open","not a valid MRF format");const r=q(e,"Size"),i=parseInt(r.getAttribute("x"),10),s=parseInt(r.getAttribute("y"),10),a=parseInt(r.getAttribute("c"),10),n=(K(e,"Compression")||"none").toLowerCase();if(!ee.has(n))throw new P("mrf:open","currently does not support compression "+n);const o=K(e,"DataType")||"UInt8",l=X.get(o);if(l==null)throw new P("mrf:open","currently does not support pixel type "+o);const c=q(e,"PageSize"),u=parseInt(c.getAttribute("x"),10),h=parseInt(c.getAttribute("y"),10),f=q(e,"DataValues");let p,g;if(f&&(g=f.getAttribute("NoData"),g!=null&&(p=g.trim().split(" ").map(F=>parseFloat(F)))),q(t,"MRF_META/CachedSource"))throw new P("mrf:open","currently does not support MRF referencing other data files");const y=q(t,"MRF_META/GeoTags"),m=q(y,"BoundingBox");let d,x=!1;if(m!=null){const F=parseFloat(m.getAttribute("minx")),C=parseFloat(m.getAttribute("miny")),E=parseFloat(m.getAttribute("maxx")),O=parseFloat(m.getAttribute("maxy")),$=K(y,"Projection")||"";let N=H.WGS84;if($!=="LOCAL_CS[]")if($.toLowerCase().startsWith("epsg:")){const D=Number($.slice(5));isNaN(D)||D===0||(N=new H({wkid:D}))}else N=Se($)??H.WGS84;else x=!0,N=new H({wkid:3857});d=new L(F,C,E,O),d.spatialReference=N}else x=!0,d=new L({xmin:-.5,ymin:.5-s,xmax:i-.5,ymax:.5,spatialReference:new H({wkid:3857})});const w=q(t,"MRF_META/Rsets"),I=parseInt((w==null?void 0:w.getAttribute("scale"))||"2",10),T=d.spatialReference,R=new Re({origin:new A({x:d.xmin,y:d.ymax,spatialReference:T}),blockWidth:u,blockHeight:h,pyramidBlockWidth:u,pyramidBlockHeight:h,compression:n,pyramidScalingFactor:I}),_=new A({x:d.width/i,y:d.height/s,spatialReference:T}),M=new ve({width:i,height:s,extent:d,isPseudoSpatialReference:x,spatialReference:T,bandCount:a,pixelType:l,pixelSize:_,noDataValue:p,storageInfo:R}),v=K(t,"datafile"),k=K(t,"IndexFile");return{rasterInfo:M,files:{mrf:this.url,index:k||this.url.replace(".mrf",".idx"),data:v||this.url.replace(".mrf",ee.get(n).blobExtension)}}}async _fetchAuxiliaryData(t){try{const{data:e}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:t==null?void 0:t.signal});return Ue(e)}catch{return null}}};function ws(t){if(t.byteLength%16>0)throw new Error("invalid array buffer must be multiples of 16");let e,r,i,s,a,n;if(di){for(r=new Uint8Array(t),s=new ArrayBuffer(t.byteLength),i=new Uint8Array(s),a=0;a<t.byteLength/4;a++)for(n=0;n<4;n++)i[4*a+n]=r[4*a+3-n];e=new Uint32Array(s)}else e=new Uint32Array(t);return e}b([S()],ce.prototype,"_files",void 0),b([S()],ce.prototype,"_storageIndex",void 0),b([S({type:String,json:{write:!0}})],ce.prototype,"datasetFormat",void 0),ce=b([Q("esri.layers.support.rasterDatasets.MRFRaster")],ce);const Is=ce;function bs(t){const e=t.fields,r=t.records,i=e.some(c=>c.name.toLowerCase()==="oid")?"OBJECTID":"OID",s=[{name:i,type:"esriFieldTypeOID",alias:"OID"}].concat(e.map(c=>({name:c.name,type:"esriFieldType"+c.typeName,alias:c.name}))),a=s.map(c=>c.name),n=[];let o=0,l=0;return r.forEach(c=>{const u={};for(u[i]=o++,l=1;l<a.length;l++)u[a[l]]=c[l-1];n.push({attributes:u})}),{displayFieldName:"",fields:s,features:n}}class Rs{static get supportedVersions(){return[5]}static parse(e){const r=new DataView(e),i=3&r.getUint8(0);if(i!==3)return{header:{version:i},recordSet:null};const s=r.getUint32(4,!0),a=r.getUint16(8,!0),n=r.getUint16(10,!0),o={version:i,recordCount:s,headerByteCount:a,recordByteCount:n};let l=32;const c=[],u=[];let h;if(i===3){for(;r.getUint8(l)!==13;)h=String.fromCharCode(r.getUint8(l+11)).trim(),c.push({name:et(new Uint8Array(e,l,11)),type:h,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(h)],length:r.getUint8(l+16)}),l+=32;if(l+=1,c.length>0)for(;u.length<s&&e.byteLength-l>n;){const f=[];r.getUint8(l)===32?(l+=1,c.forEach(p=>{if(p.type==="C")f.push(et(new Uint8Array(e,l,p.length)).trim());else if(p.type==="N")f.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(e,l,p.length)).trim(),10));else if(p.type==="F")f.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(e,l,p.length)).trim()));else if(p.type==="D"){const g=String.fromCharCode.apply(null,new Uint8Array(e,l,p.length)).trim();f.push(new Date(parseInt(g.slice(0,4),10),parseInt(g.slice(4,6),10)-1,parseInt(g.slice(6,8),10)))}l+=p.length}),u.push(f)):l+=n}}return{header:o,fields:c,records:u,recordSet:bs({fields:c,records:u})}}}const Be=(t,e)=>{var r;return(r=t.get(e))==null?void 0:r.values},pe=(t,e)=>{var r,i;return(i=(r=t.get(e))==null?void 0:r.values)==null?void 0:i[0]};let se=class extends ae{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}async fetchRawTile(t,e,r,i={}){var a;if(!((a=this._headerInfo)!=null&&a.isSupported)||this.isBlockOutside(t,e,r))return null;const s=await this._fetchRawTiffTile(t,e,r,!1,i);if(s!=null&&this._headerInfo.hasMaskBand){const n=await this._fetchRawTiffTile(t,e,r,!0,i);n!=null&&n.pixels[0]instanceof Uint8Array&&(s.mask=n.pixels[0])}return s}async _open(t){var y,m,d,x;const e=t?t.signal:null,{data:r}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:e});if(!r)throw new P("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1,this.url.lastIndexOf("."));const{littleEndian:i,firstIFDPos:s,isBigTiff:a}=yi(r),n=[];await this._readIFDs(n,r,i,s,0,a?8:4,e);const{imageInfo:o,rasterInfo:l}=vs(n),c=gi(n),u=xi(n);if(this._headerInfo={littleEndian:i,isBigTiff:a,ifds:n,pyramidIFDs:c,maskIFDs:u,...o},this._set("rasterInfo",l),!o.isSupported)throw new P("tiffraster:open","this tiff is not supported: "+o.message);if(!o.tileWidth)throw new P("tiffraster:open","none-tiled tiff is not optimized for access, convert to COG and retry.");l.isPseudoSpatialReference&&ne.getLogger(this).warn("The spatial reference for this tiff is unsupported. Only EPSG spatial reference codes and Esri WKTs are supported.");const h=(m=(y=n[0].get("PREDICTOR"))==null?void 0:y.values)==null?void 0:m[0];if(((x=(d=n[0].get("SAMPLEFORMAT"))==null?void 0:d.values)==null?void 0:x[0])===3&&h===2)throw new P("tiffraster:open","unsupported horizontal difference encoding. Predictor=3 is supported for floating point data");const{skipMapInfo:p,skipExtensions:g=[]}=this.ioConfig;if(!g.includes("aux.xml")&&!p){const w=await this._fetchAuxiliaryMetaData(t);w!=null&&Ss(w,l)}g.includes("vat.dbf")||l.bandCount!==1||l.pixelType!=="u8"||p||(l.attributeTable=await this._fetchAuxiliaryTable(t),l.attributeTable!=null&&(l.keyProperties.DataType="thematic")),p&&this.updateImageSpaceRasterInfo(l),this.updateTileInfo()}async _readIFDs(t,e,r,i,s,a=4,n){if(!i)return null;(i>=e.byteLength||i<0)&&(e=(await this.request(this.url,{range:{from:i+s,to:i+s+this._bufferSize},responseType:"array-buffer",signal:n})).data,s=i+s,i=0);const o=await this._readIFD(e,r,i,s,de.tiffTags,a,n);if(t.push(o.ifd),!o.nextIFD)return null;await this._readIFDs(t,e,r,o.nextIFD-s,s,a,n)}async _readIFD(t,e,r,i,s=de.tiffTags,a=4,n){var l,c;if(!t)return null;const o=wi(t,e,r,i,s,a);if(o.success){const u=[];if((l=o.ifd)==null||l.forEach(h=>{h.values||u.push(h)}),u.length>0){const h=u.map(p=>p.offlineOffsetSize).filter(Pe),f=Math.min.apply(null,h.map(p=>p[0]));if(Math.min.apply(null,h.map(p=>p[0]+p[1]))-f<=this._bufferSize){const{data:p}=await this.request(this.url,{range:{from:f,to:f+this._bufferSize},responseType:"array-buffer",signal:n});t=p,i=f,u.forEach(g=>Ii(t,e,g,i))}}if((c=o.ifd)!=null&&c.has("GEOKEYDIRECTORY")){const h=o.ifd.get("GEOKEYDIRECTORY"),f=h==null?void 0:h.values;if(f&&f.length>4){const p=f[0]+"."+f[1]+"."+f[2],g=await this._readIFD(t,e,h.valueOffset+6-i,i,de.geoKeys,2,n);h.data=g.ifd,h.data&&h.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[p]})}}return o}if(o.requiredBufferSize&&o.requiredBufferSize!==t.byteLength)return(t=(await this.request(this.url,{range:{from:i,to:i+o.requiredBufferSize+4},responseType:"array-buffer",signal:n})).data).byteLength<o.requiredBufferSize?null:this._readIFD(t,e,0,i,de.tiffTags,4,n)}async _fetchRawTiffTile(t,e,r,i,s={}){const a=this._getTileLocation(t,e,r,i);if(!a)return null;const{ranges:n,actualTileWidth:o,actualTileHeight:l,ifd:c}=a,u=n.map(R=>this.request(this.url,{range:R,responseType:"array-buffer",signal:s.signal})),h=await Promise.all(u),f=h.map(R=>R.data.byteLength).reduce((R,_)=>R+_),p=h.length===1?h[0].data:new ArrayBuffer(f),g=[0],y=[0];if(h.length>1){const R=new Uint8Array(p);for(let _=0,M=0;_<h.length;_++){const v=h[_].data;R.set(new Uint8Array(v),M),g[_]=M,M+=v.byteLength,y[_]=v.byteLength}}const{blockWidth:m,blockHeight:d}=this.getBlockWidthHeight(t),x=await this.decodePixelBlock(p,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:c,offsets:g,sizes:y},width:m,height:d,planes:null,pixelType:null});if(x==null)return null;let w,I,T;if(o!==m||l!==d){let R=x.mask;if(R)for(w=0;w<d;w++)if(T=w*m,w<l)for(I=o;I<m;I++)R[T+I]=0;else for(I=0;I<m;I++)R[T+I]=0;else for(R=new Uint8Array(m*d),x.mask=R,w=0;w<l;w++)for(T=w*m,I=0;I<o;I++)R[T+I]=1}return x}_getTileLocation(t,e,r,i=!1){const{firstPyramidLevel:s,blockBoundary:a}=this.rasterInfo.storageInfo,n=t===0?0:t-(s-1),{_headerInfo:o}=this;if(!o)return null;const l=i?o.maskIFDs[n]:n===0?o==null?void 0:o.ifds[0]:o==null?void 0:o.pyramidIFDs[n-1];if(!l)return null;const c=bi(l,o),u=Be(l,"TILEOFFSETS");if(u===void 0)return null;const h=Be(l,"TILEBYTECOUNTS"),{minRow:f,minCol:p,maxRow:g,maxCol:y}=a[n];if(e>g||r>y||e<f||r<p)return null;const m=pe(l,"IMAGEWIDTH"),d=pe(l,"IMAGELENGTH"),x=pe(l,"TILEWIDTH"),w=pe(l,"TILELENGTH"),I=[];if(c){const{bandCount:T}=this.rasterInfo;for(let R=0;R<T;R++){const _=R*(g+1)*(y+1)+e*(y+1)+r;I[R]={from:u[_],to:u[_]+h[_]-1}}}else{const T=e*(y+1)+r;I.push({from:u[T],to:u[T]+h[T]-1})}for(let T=0;T<I.length;T++)if(I[T].from==null||!I[T].to||I[T].to<0)return null;return{ranges:I,ifd:l,actualTileWidth:r===y&&m%x||x,actualTileHeight:e===g&&d%w||w}}async _fetchAuxiliaryMetaData(t){try{const{data:e}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:t==null?void 0:t.signal});return Ue(e)}catch{return null}}async _fetchAuxiliaryTable(t){try{const{data:e}=await this.request(this.url+".vat.dbf",{responseType:"array-buffer",signal:t==null?void 0:t.signal}),r=Rs.parse(e);return r!=null&&r.recordSet?We.fromJSON(r.recordSet):null}catch{return null}}};function vs(t){var E,O;const e=Ri(t),{width:r,height:i,tileWidth:s,tileHeight:a,planes:n,pixelType:o,compression:l,firstPyramidLevel:c,maximumPyramidLevel:u,pyramidBlockWidth:h,pyramidBlockHeight:f,pyramidResolutions:p,tileBoundary:g,affine:y,metadata:m}=e,d=((E=e.extent.spatialReference)==null?void 0:E.wkt)||((O=e.extent.spatialReference)==null?void 0:O.wkid);let x=Se(d),w=!!e.isPseudoGeographic;x==null&&(w=!0,x=new H({wkid:3857}));const I=new L({...e.extent,spatialReference:x}),T=new A(I?{x:I.xmin,y:I.ymax,spatialReference:x}:{x:0,y:0}),R=new Re({blockWidth:s,blockHeight:a,pyramidBlockWidth:h,pyramidBlockHeight:f,compression:l,origin:T,firstPyramidLevel:c,maximumPyramidLevel:u,pyramidResolutions:p,blockBoundary:g}),_=new A({x:(I.xmax-I.xmin)/r,y:(I.ymax-I.ymin)/i,spatialReference:x}),M=m?{BandProperties:m.bandProperties,DataType:m.dataType}:{};let v=null;const k=pe(t[0],"PHOTOMETRICINTERPRETATION"),F=Be(t[0],"COLORMAP");if(k<=3&&(F==null?void 0:F.length)>3&&F.length%3==0){v=[];const $=F.length/3;for(let N=0;N<$;N++)v.push([N,F[N]>>>8,F[N+$]>>>8,F[N+2*$]>>>8])}const C=new ve({width:r,height:i,bandCount:n,pixelType:o,pixelSize:_,storageInfo:R,spatialReference:x,isPseudoSpatialReference:w,keyProperties:M,extent:I,colormap:v,statistics:m?m.statistics:null});if(y!=null&&y.length&&(C.nativeExtent=new L({xmin:-.5,ymin:.5-i,xmax:r-.5,ymax:.5,spatialReference:x}),C.transform=new Ge({polynomialOrder:1,forwardCoefficients:[y[2]+y[0]/2,y[5]-y[3]/2,y[0],y[3],-y[1],-y[4]]}),C.extent=C.transform.forwardTransform(C.nativeExtent),C.pixelSize=new A({x:(I.xmax-I.xmin)/r,y:(I.ymax-I.ymin)/i,spatialReference:x}),R.origin.x=-.5,R.origin.y=.5),p){const{x:$,y:N}=C.pixelSize;p.forEach(D=>{D.x*=$,D.y*=N})}return{imageInfo:e,rasterInfo:C}}function Ss(t,e){if(e.statistics=t.statistics??e.statistics,e.histograms=t.histograms,t.histograms&&e.statistics==null&&(e.statistics=ze(t.histograms)),t.transform&&e.transform==null){e.transform=t.transform,e.nativeExtent=e.extent;const r=e.transform.forwardTransform(e.nativeExtent);e.pixelSize=new A({x:(r.xmax-r.xmin)/e.width,y:(r.ymax-r.ymin)/e.height,spatialReference:e.spatialReference}),e.extent=r}e.isPseudoSpatialReference&&t.spatialReference&&(e.spatialReference=t.spatialReference,e.extent.spatialReference=e.nativeExtent.spatialReference=e.storageInfo.origin.spatialReference=e.spatialReference)}b([S()],se.prototype,"_files",void 0),b([S()],se.prototype,"_headerInfo",void 0),b([S()],se.prototype,"_bufferSize",void 0),b([S({type:String,json:{write:!0}})],se.prototype,"datasetFormat",void 0),se=b([Q("esri.layers.support.rasterDatasets.TIFFRaster")],se);const Ts=se,z=new Map;z.set("MRF",{desc:"Meta Raster Format",constructor:Is}),z.set("TIFF",{desc:"GeoTIFF",constructor:Ts}),z.set("RasterTileServer",{desc:"Raster Tile Server",constructor:xs}),z.set("JPG",{desc:"JPG Raster Format",constructor:we}),z.set("PNG",{desc:"PNG Raster Format",constructor:we}),z.set("GIF",{desc:"GIF Raster Format",constructor:we}),z.set("BMP",{desc:"BMP Raster Format",constructor:we}),z.set("CovJSON",{desc:"COVJSON Raster Format",constructor:fs}),z.set("MEMORY",{desc:"In Memory Raster Format",constructor:je});class Oe{static get supportedFormats(){const e=new Set;return z.forEach((r,i)=>e.add(i)),e}static async open(e){var h;const{url:r,ioConfig:i,source:s,sourceJSON:a}=e;let n=e.datasetFormat??(i==null?void 0:i.datasetFormat);n==null&&(r.includes(".")?n=r.slice(r.lastIndexOf(".")+1).toUpperCase():((h=s==null?void 0:s.type)==null?void 0:h.toLowerCase())==="coverage"?n="CovJSON":s!=null&&s.extent&&s.pixelblocks&&(n="MEMORY")),n==="OVR"||n==="TIF"?n="TIFF":n==="JPG"||n==="JPEG"||n==="JFIF"?n="JPG":n==="COVJSON"&&(n="CovJSON"),r.toLowerCase().includes("/imageserver")&&!r.toLowerCase().includes("/wcsserver")&&(n="RasterTileServer");const o={url:r,source:s,sourceJSON:a,datasetFormat:n,ioConfig:i??{bandIds:null,sampling:null}};if(Object.keys(o).forEach(f=>{o[f]==null&&delete o[f]}),n){if(!this.supportedFormats.has(n))throw new P("rasterfactory:open","not a supported format "+n);if(n==="CRF")throw new P("rasterfactory:open",`cannot open raster: ${r}`);const f=new(z.get(n)).constructor(o);return await f.open({signal:e.signal}),f}const l=Array.from(z.keys()).filter(f=>f!=="CovJSON"&&f!=="Memory");let c=0;const u=()=>{if(n=l[c++],!n||n==="CRF")return null;const f=new(z.get(n)).constructor(o);return f.open({signal:e.signal}).then(()=>f).catch(()=>u())};return u()}static register(e,r,i){z.has(e.toUpperCase())||z.set(e.toUpperCase(),{desc:r,constructor:i})}}let B=class extends Wt(ji(zi(Wi(ri(Gt(as(Ui(zt(Gi(Lt(Dt(Ht)))))))))))){constructor(...t){super(...t),this._primaryRasters=[],this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.fields=null,this.source=void 0,this._debouncedSaveOperations=Et(async(e,r,i)=>{const{save:s,saveAs:a}=await Ae(()=>import("./imageryUtils-CR0ILpHv.js"),__vite__mapDeps([2,3,0,1,4,5,6,7,8,9,10]));switch(e){case ge.SAVE:return s(this,r);case ge.SAVE_AS:return a(this,i,r)}})}normalizeCtorArgs(t,e){return typeof t=="string"?{url:t,...e}:t}load(t){const e=t!=null?t.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},t).catch(Bt).then(()=>this._openRaster(e))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get rasterFields(){var o,l;const t=[new ue({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"}),new ue({name:"Raster.ServicePixelValue.Raw",alias:"Raw Pixel Value",domain:null,editable:!1,length:50,type:"string"})],e=((o=this.raster)==null?void 0:o.rasterInfo)??this.serviceRasterInfo,r=e==null?void 0:e.attributeTable,i=r!=null?r.fields:null,s="Raster.";if(i){const c=i.filter(u=>u.type!=="oid"&&u.name.toLowerCase()!=="value").map(u=>{const h=u.clone();return h.name=s+u.name,h});t.push(...c)}const a=e==null?void 0:e.dataType,n=e==null?void 0:e.multidimensionalInfo;if((a==="vector-magdir"||a==="vector-uv")&&n!=null){const c=(l=n.variables[0].unit)==null?void 0:l.trim(),u="Magnitude"+(c?` (${c})`:"");t.push(new ue({name:"Raster.Magnitude",alias:u,domain:null,editable:!1,type:"double"})),t.push(new ue({name:"Raster.Direction",alias:"Direction (°)",domain:null,editable:!1,type:"double"}))}return t}createPopupTemplate(t){const{rasterFields:e}=this,r=new Set(e.map(({name:i})=>i).filter(i=>i.toLowerCase()!=="raster.servicepixelvalue.raw"));return Vi({fields:e,title:this.title},{...t,visibleFieldNames:r})}async generateRasterInfo(t,e){var r;if(t=Je($e,t),await this.load(),!t||((r=t.functionName)==null?void 0:r.toLowerCase())==="none")return this.serviceRasterInfo;try{const{rasterInfo:i}=await this._openFunctionRaster(t,e);return i}catch(i){throw i instanceof P?i:new P("imagery-tile-layer","the given raster function is not supported")}}async save(t){return this._debouncedSaveOperations(ge.SAVE,t)}async saveAs(t,e){return this._debouncedSaveOperations(ge.SAVE_AS,e,t)}write(t,e){const r=this._primaryRasters[0]??this.raster;if(this.loaded?r.datasetFormat==="RasterTileServer"&&(r.tileType==="Raster"||r.tileType==="Map"):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))return super.write(t,e);if(e!=null&&e.messages){const i=`${e.origin}/${e.layerContainerType||"operational-layers"}`;e.messages.push(new P("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${i}'`,{layer:this}))}return null}async _openRaster(t){var i;let e=!1;if(this.raster)await this._openFromRaster(this.raster,t),e=this.raster.datasetFormat==="Function",!e&&this.rasterFunction&&(this._primaryRasters=[this.raster],await this._initializeWithFunctionRaster(this.rasterFunction));else{const{url:s,rasterFunction:a,source:n}=this;if(!s&&!n)throw new P("imagery-tile-layer:open","missing url or source parameter");n?await this._openFromSource(n,t):a?await this._openFromUrlWithRasterFunction(s,a,t):await this._openFromUrl(s,t)}const r=this.raster.rasterInfo;if(!r)throw new P("imagery-tile-layer:load","cannot load resources on "+this.url);if(this._set("serviceRasterInfo",e?r:this._primaryRasters[0].rasterInfo),this._set("spatialReference",r.spatialReference),this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,this.sourceJSON!=null){const s=this.raster.tileType==="Map"&&this.sourceJSON.minLOD!=null&&this.sourceJSON.maxLOD!=null?this.sourceJSON:{...this.sourceJSON,minScale:0,maxScale:0};this.read(s,{origin:"service"})}else this.read({tileInfo:(i=this.serviceRasterInfo)==null?void 0:i.storageInfo.tileInfo.toJSON()},{origin:"service"});this.title||(this.title=this.raster.datasetName),this.raster.tileType==="Map"&&(this.popupEnabled=!1),this._configDefaultSettings(),this.addHandles(Jt(()=>this.customParameters,s=>{this.raster&&(this.raster.ioConfig.customFetchParameters=s)}))}async _openFromRaster(t,e){t.rasterInfo||await t.open({signal:e}),this._primaryRasters=t.datasetFormat==="Function"?t.primaryRasters.rasters:[t],this.url||(this.url=this._primaryRasters[0].url)}async _openFromUrlWithRasterFunction(t,e,r){const i=[t];e&&Hi(e.toJSON(),i);const s=await Promise.all(i.map(n=>Oe.open({url:n,sourceJSON:this.sourceJSON,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:r}))),a=s.findIndex(n=>n==null);if(a>-1)throw new P("imagery-tile-layer:open",`cannot open raster: ${i[a]}`);return this._primaryRasters=s,this._initializeWithFunctionRaster(e)}async _openFromUrl(t,e){const r=await Oe.open({url:t,sourceJSON:this.sourceJSON,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:e});if(r==null)throw new P("imagery-tile-layer:open",`cannot open raster: ${t}`);this._primaryRasters=[r],this.raster=r}async _openFromSource(t,e){var a;const r="the tiled imagery data source is not supported",i=((a=t.type)==null?void 0:a.toLowerCase())==="coverage"?"CovJSON":t.extent&&t.pixelBlock?"MEMORY":null;if(!i)throw new P("imagery-tile-layer:open",r);i==="MEMORY"&&(t={...t,pixelBlock:void 0,pixelBlocks:[t.pixelBlock]});const s=await Oe.open({url:"",source:t,datasetFormat:i,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:e});if(s==null)throw new P("imagery-tile-layer:open",r);this._primaryRasters=[s],this.rasterFunction?await this._initializeWithFunctionRaster(this.rasterFunction):this.raster=s}async _openFunctionRaster(t,e){var a;const r={raster:this._primaryRasters[0]};this._primaryRasters.length>1&&this._primaryRasters.forEach(n=>r[n.url]=n);const i=dt(((a=t.functionDefinition)==null?void 0:a.toJSON())??t.toJSON(),r),s=new yt({rasterFunction:i});return await s.open(e),s}async _initializeWithFunctionRaster(t,e){try{this.raster=await this._openFunctionRaster(t,e)}catch(r){r instanceof P&&ne.getLogger(this).error("imagery-tile-layer:open",r.message),ne.getLogger(this).warn("imagery-tile-layer:open","the raster function cannot be applied and is removed"),this._set("rasterFunction",null),this.raster=this._primaryRasters[0]}}};b([S({clonable:!1})],B.prototype,"_primaryRasters",void 0),b([S(ni)],B.prototype,"legendEnabled",void 0),b([S({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],B.prototype,"isReference",void 0),b([S({type:["show","hide"]})],B.prototype,"listMode",void 0),b([S({json:{read:!0,write:!0}})],B.prototype,"blendMode",void 0),b([S()],B.prototype,"sourceJSON",void 0),b([S({readOnly:!0,json:{origins:{service:{read:{source:"currentVersion"}}}}})],B.prototype,"version",void 0),b([S({readOnly:!0,json:{read:!1}})],B.prototype,"type",void 0),b([S({type:["ArcGISTiledImageServiceLayer"]})],B.prototype,"operationalLayerType",void 0),b([S({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(t,e)=>!e.disablePopup},write:{target:"disablePopup",overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"}},writer(t,e,r){e[r]=!t}}}})],B.prototype,"popupEnabled",void 0),b([S({type:At,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"}}}}})],B.prototype,"popupTemplate",void 0),b([S({readOnly:!0})],B.prototype,"defaultPopupTemplate",null),b([S({readOnly:!0,type:[ue]})],B.prototype,"fields",void 0),b([S({readOnly:!0,type:[ue]})],B.prototype,"rasterFields",null),b([S({constructOnly:!0})],B.prototype,"source",void 0),B=b([Q("esri.layers.ImageryTileLayer")],B);const Br=B;export{Br as default};

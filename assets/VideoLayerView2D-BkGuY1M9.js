import{gn as I,c7 as K,P as b,eE as N,ec as X,dT as Y,go as V,cS as z,bU as k,b6 as v,bP as B,bO as R,bN as q,aD as U,M,F as x,G as $,K as J}from"./index-C1aGfQcb.js";import{h as Q}from"./GraphicsLayer-7fnK8PA0.js";import{l as F}from"./TelemetryDisplay-BIEPQ538.js";import{u as Z}from"./OverlayContainer-BFHrvjeO.js";import{n as tt}from"./vec2f64-CCfZVA9N.js";import{K as g}from"./projection-BOBOhWzm.js";import{s as et}from"./Container-DukYN7bA.js";import{a as it,j as rt}from"./LayerView2D-_cD1rRgW.js";import{D as st}from"./enums-Dk3osxpS.js";import{e as ot,m as nt}from"./Texture-CLoEFKJJ.js";import{t as at}from"./GraphicContainer-CVlzYn8G.js";import{F as lt}from"./GraphicsView2D-igLDaNxb.js";import{y as mt}from"./LayerView-ClcY0vUI.js";import"./GraphicsCollection-BlUFPpxh.js";import"./Layer-CneDw8eF.js";import"./TimeExtent-DGiXUfis.js";import"./timeUtils-X0MXjtQ8.js";import"./BlendLayer-CG9LFMxd.js";import"./jsonUtils-n3e_wlfQ.js";import"./parser-C4Qiz3JH.js";import"./utils-sqJe3zMg.js";import"./ScaleRangeLayer-66YiyNPI.js";import"./ElevationInfo-D7CBP7sd.js";import"./lengthUtils-CFwdZ3dz.js";import"./mat3-Dg2BrR6m.js";import"./MapView-DMINGQ-3.js";import"./ColorBackground-BzAAhJtv.js";import"./CollectionFlattener-COw367kg.js";import"./basemapUtils-SfV6Ch_Z.js";import"./TablesMixin-CmFQDxpI.js";import"./workers-CeelWDzo.js";import"./TileInfo-C4AYiz3R.js";import"./TileKey-DZd6gJy7.js";import"./UpdatingHandles-DOPUoIlu.js";import"./screenUtils-CLE_gLy7.js";import"./signal-CRiDvIIF.js";import"./HeightModelInfo-kVs8dE0B.js";import"./Query-LPs1Zyw4.js";import"./FullTextSearch-Cza0yp3f.js";import"./IViewEvents-Bci6PjlS.js";import"./mat2df64-B7VPBnkO.js";import"./a11yUtils-Tsw26pQ5.js";import"./heightModelInfoUtils-BhzRw8-2.js";import"./arcgisLayerUrl-BkZy4Mr3.js";import"./ViewingMode-HRfKv6NR.js";import"./vec2-D9okOEat.js";import"./mat2df32-BR-p9z6z.js";import"./normalizeUtils-Bg1OALXh.js";import"./normalizeUtilsCommon-UUlRRPVA.js";import"./utils-DGPHbhMN.js";import"./utils-ByvCMLXh.js";import"./vec2f32-BbH2jxlN.js";import"./unitBezier-BX6NeAEr.js";import"./Scheduler-DS_v5N7L.js";import"./debugFlags-CfZYxH5Q.js";import"./Tile-9ZT_yo0a.js";import"./TileKey-C3cOKqPf.js";import"./QueueProcessor-8zZK2k9z.js";import"./quickselect-QQC62dOK.js";import"./vec32-CmwgPQMd.js";import"./definitions-C0Jy3zs7.js";import"./HighlightDefaults-D7TbvM-a.js";import"./imageUtils-DpI9AOR9.js";import"./capabilities-A2uoe7dc.js";import"./themeUtils-C3zvZbsE.js";import"./accessibleHandler-CubitGf2.js";import"./GoTo-H_qEVlhS.js";import"./ZoomViewModel-BtZMM985.js";import"./utils-CS8i_70G.js";import"./Version-DD-eRUXC.js";import"./vec3f32-nZdmKIgz.js";import"./WGLContainer-Bti4JDk_.js";import"./LabelMetric-BbDPE4Hv.js";import"./enums-CmIX1y88.js";import"./Program-B50gSpr4.js";import"./BufferObject-C4qiEJeh.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BoundingBox-CnpCxTZE.js";import"./VertexArrayObject-CzGu5bI8.js";import"./ProgramTemplate-FAwkPdO7.js";import"./StyleDefinition-BTt_i6C1.js";import"./config-MDUrh2eL.js";import"./earcut-Lltz9D9k.js";import"./featureConversionUtils-C-Uqf9Q4.js";import"./OptimizedFeature-swgcyHeh.js";import"./OptimizedGeometry-C9mSZhHi.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./FeatureCommandQueue-DFtBlGYR.js";import"./CIMSymbolHelper-CkjLOfcU.js";import"./BidiEngine-DNnuvc1i.js";import"./fontUtils-BVEStqBT.js";import"./GeometryUtils-Bkk2TwKC.js";import"./utils-D7agaEG-.js";import"./Rect-CUzevAry.js";import"./defaults-Dbnhuv3C.js";import"./defaultsJSON-GKolV7NZ.js";import"./UpdateTracking2D-Do-Jp4xp.js";import"./BindType-BmZEZMMh.js";import"./Util-BK6CBhAA.js";import"./vec42-BHDxGccW.js";import"./vec4f64-o2zAXfmz.js";import"./constants-F8oTIn7N.js";import"./projectBuffer-CZ7yaGuo.js";import"./EffectView-Di3KCO94.js";import"./utils-BQBvadb7.js";import"./AGraphicContainer-Be74AnP4.js";import"./TechniqueInstance-Ct6vq7te.js";import"./TileContainer-ChXztKMJ.js";import"./FieldsIndex-BrdRr9E_.js";import"./UnknownTimeZone-DhxWDwo9.js";import"./OverrideHelper-D-UVQ00R.js";import"./colorUtils-BWiljOUv.js";import"./quantizationUtils-DbJV_fl5.js";import"./AttributeStore-DoHrhu85.js";import"./TimeOnly-vNYE6bX9.js";import"./centroid-DdLmOD72.js";import"./labelUtils-C_ZaLudT.js";import"./diffUtils-DMLidw0V.js";import"./queryUtils-DfwPGxwH.js";import"./json-Wa8cmqdu.js";import"./timeSupport-DZeNU3Q4.js";import"./normalizeUtilsSync-DxE8L4Ib.js";const C=2;class ht extends et{constructor(t){super(),this.element=t,this._handles=new I,this.isWrapAround=!1,this.perspectiveTransform=tt(),this.wrapAroundShift=0,this.clipGeometry=null,this._handles.add(K(()=>this.element,()=>{const e=this.element;this.ready(),e&&this._handles.add(N(e,"play",()=>this.requestRender()))},b))}getMesh(t){throw new Error("Method not implemented.")}destroy(){this._handles.destroy(),this.texture=X(this.texture)}get textureSize(){if(!this.texture)return[1,1];const t=this.texture.descriptor;return[t.width,t.height]}get dvsMat3(){return this.parent.dvsMat3}beforeRender(t){const e=this.element;if(e==null)return;const{context:i}=t,{videoWidth:o,videoHeight:s}=e;if(o!==0&&s!==0){if(this.texture)e.paused||this.texture.setData(e);else{const n=new ot;n.wrapMode=st.CLAMP_TO_EDGE,n.preMultiplyAlpha=!0,n.width=o,n.height=s,this.texture=new nt(i,n,e)}e.paused||(this.texture.generateMipmap(),this.requestRender()),super.beforeRender(t)}}_createTransforms(){return null}updateDrawCoords(t,e,i,o){const s=this.element,n=this._getFrameInfo();if(!s||!n)return;this._initializeData(t,n,i);const{controlPoints:l,horizon:h}=n,m=Math.sqrt(l.length),p=m,{x:a,y}=t,u=this._vertices,T=l[0],P=l[m-1],W=l[(p-1)*m],j=l[(p-1)*m+m-1],G=g(h?h[0].mapPoint:T.mapPoint,i),O=g(h?h[1].mapPoint:P.mapPoint,i),f=g(W.mapPoint,i),D=g(j.mapPoint,i);this.clipGeometry=h?new it({geometry:Y.fromJSON({rings:[[[f.x,f.y],[D.x,D.y],[O.x,O.y],[G.x,G.y],[f.x,f.y]]],spatialReference:i})}):null;for(let c=0;c<l.length;c++){const L=l[c],{sourcePoint:S,mapPoint:A}=L;if(S==null||A==null)continue;const w=g(A,i);u[c*C+0]=w.x-a,u[c*C+1]=w.y-y}let E=e;if(o){const c=Math.min(G.x,O.x,f.x,D.x),L=Math.max(G.x,O.x,f.x,D.x),{worldWidth:S,xBounds:A}=o,[w,H]=A;c<w&&L>w?E=S:L>H&&c<H&&(E=-S)}this.wrapAroundShift=E,this.isWrapAround=E!==0}draw(t,e){this.isReady&&this._vertices&&this._indices&&this._texCoords?e.render(t,{transform:{dvs:this.dvsMat3},config:{perspective:this.perspectiveTransform,texSize:this.textureSize,wrapAroundShift:this.wrapAroundShift,isWrapAround:this.isWrapAround,opacity:this.opacity,texture:{texture:this.texture,unit:0}},position:this._vertices,tex:this._texCoords,index:this._indices}):this.requestRender()}_initializeData(t,e,i){if(this._vertices!=null&&this._indices!=null)return;const{controlPoints:o}=e,s=Math.sqrt(o.length),n=s,l=new Float32Array(C*o.length),h=new Uint16Array(2*o.length);for(let a=0;a<o.length;a++){const y=o[a],{sourcePoint:u,mapPoint:T}=y;if(u==null||T==null)continue;const P=g(T,i);l[a*C+0]=P.x-t.x,l[a*C+1]=P.y-t.y,h[2*a+0]=u.x,h[2*a+1]=u.y}const m=new Uint16Array(n*s+(n-2)*(s+2));let p=0;for(let a=0;a<n;a++){for(let y=0;y<s;y++)m[p++]=a*s+y,m[p++]=(a+1)*s+y;a<n-2&&(m[p++]=(a+1)*s+(s-1),m[p++]=(a+1)*s)}this._vertices=l,this._texCoords=h,this._indices=m}_getFrameInfo(){if(!this.groundControlPoints)return null;const t=this._getFrameControlPoints(),e=this.frameHorizonPoints;let i=null;if(e){const o=e.startX,s=e.startY,n=e.endX,l=e.endY;i=[{sourcePoint:V(o,s),mapPoint:new z(e.startLongitude,e.startLatitude)},{sourcePoint:V(n,l),mapPoint:new z(e.endLongitude,e.endLatitude)}]}return{controlPoints:t,horizon:i}}_getFrameControlPoints(){const t=this.groundControlPoints,e=t==null?void 0:t.length;if(!e)return[];const i=new Array(e),o=Math.max(...t.map(({x:n})=>n)),s=this.element.videoWidth/o;for(let n=0;n<e;n++){const{x:l,y:h,lat:m,lon:p}=t[n];i[n]={sourcePoint:V(l*s,-h*s),mapPoint:new z(p,m)}}return i}}const _=new k([255,127,0]);let d=class extends rt(mt){constructor(){super(...arguments),this._graphicsLayer=new Q,this._frameOutlineGraphic=new v({symbol:new B({outline:{type:"simple-line",color:_}})}),this._sensorTrailGraphic=new v({symbol:new R({color:_})}),this._lineOfSightGraphic=new v({symbol:new R({color:_})}),this._sensorLocationGraphic=new v({symbol:new q({color:_})}),this._frameCenterGraphic=new v({symbol:new q({color:_,style:"cross"})}),this._overlayContainer=null,this.layer=null,this.symbolColor=_,this.visibleTelemetryElements=null}destroy(){this._graphicsLayer=U(this._graphicsLayer)}initialize(){var r,t,e,i,o,s;this.addHandles(M(()=>this.symbolColor,()=>{this._frameOutlineGraphic.symbol.outline.color=this.symbolColor,this._sensorTrailGraphic.symbol.color=this.symbolColor,this._lineOfSightGraphic.symbol.color=this.symbolColor,this._sensorLocationGraphic.symbol.color=this.symbolColor,this._frameCenterGraphic.symbol.color=this.symbolColor},b)),this._graphicsLayer.graphics.addMany([this._frameOutlineGraphic,this._sensorTrailGraphic,this._lineOfSightGraphic,this._sensorLocationGraphic,this._frameCenterGraphic]),this.visibleTelemetryElements=new F({frame:((r=this.layer.telemetryDisplay)==null?void 0:r.frame)??!1,frameCenter:((t=this.layer.telemetryDisplay)==null?void 0:t.frameCenter)??!0,frameOutline:((e=this.layer.telemetryDisplay)==null?void 0:e.frameOutline)??!0,lineOfSight:((i=this.layer.telemetryDisplay)==null?void 0:i.lineOfSight)??!0,sensorLocation:((o=this.layer.telemetryDisplay)==null?void 0:o.sensorLocation)??!0,sensorTrail:((s=this.layer.telemetryDisplay)==null?void 0:s.sensorTrail)??!0})}attach(){this._overlayContainer=new Z,this.container.addChild(this._overlayContainer),this._addOverlayMultipoint(),this.graphicsView=new lt({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this._graphicsLayer.graphics,container:new at(this.view.featuresTilingScheme)}),this.container.addChild(this.graphicsView.container),this.addAttachHandles(this._graphicsLayer.on("graphic-update",this.graphicsView.graphicUpdateHandler)),this.addAttachHandles([M(()=>{var r,t,e,i,o,s;return[(r=this.layer.telemetryDisplay)==null?void 0:r.frame,(t=this.layer.telemetryDisplay)==null?void 0:t.frameCenter,(e=this.layer.telemetryDisplay)==null?void 0:e.frameOutline,(i=this.layer.telemetryDisplay)==null?void 0:i.sensorLocation,(o=this.layer.telemetryDisplay)==null?void 0:o.sensorTrail,(s=this.layer.telemetryDisplay)==null?void 0:s.lineOfSight]},()=>this._updateVisibleTelemetryElements(),b),M(()=>{var r,t,e,i,o;return[this.layer.telemetry,(r=this.visibleTelemetryElements)==null?void 0:r.frameCenter,(t=this.visibleTelemetryElements)==null?void 0:t.frameOutline,(e=this.visibleTelemetryElements)==null?void 0:e.sensorLocation,(i=this.visibleTelemetryElements)==null?void 0:i.sensorTrail,(o=this.visibleTelemetryElements)==null?void 0:o.lineOfSight]},()=>this._updateGraphicGeometries(),b)])}detach(){this._overlayContainer.removeAllChildren(),this.container.removeAllChildren(),this.graphicsView=U(this.graphicsView)}supportsSpatialReference(r){return!0}moveEnd(){}viewChange(){this.graphicsView.viewChange()}update(r){this.graphicsView.processUpdate(r)}isUpdating(){return!this.graphicsView||this.graphicsView.updating}_updateVisibleTelemetryElements(){this.visibleTelemetryElements&&this.layer.telemetryDisplay&&(this.visibleTelemetryElements.frame=this.layer.telemetryDisplay.frame,this.visibleTelemetryElements.frameCenter=this.layer.telemetryDisplay.frameCenter,this.visibleTelemetryElements.frameOutline=this.layer.telemetryDisplay.frameOutline,this.visibleTelemetryElements.lineOfSight=this.layer.telemetryDisplay.lineOfSight,this.visibleTelemetryElements.sensorLocation=this.layer.telemetryDisplay.sensorLocation,this.visibleTelemetryElements.sensorTrail=this.layer.telemetryDisplay.sensorTrail)}_updateGraphicGeometries(){const{telemetry:r}=this.layer,{visibleTelemetryElements:t}=this;r&&t&&(t.frameOutline&&r.frameOutline?this._frameOutlineGraphic.geometry=this.layer.telemetry.frameOutline:this._frameOutlineGraphic.geometry=null,t.sensorTrail&&r.sensorTrail?this._sensorTrailGraphic.geometry=this.layer.telemetry.sensorTrail:this._sensorTrailGraphic.geometry=null,t.lineOfSight&&r.lineOfSight?this._lineOfSightGraphic.geometry=this.layer.telemetry.lineOfSight:this._lineOfSightGraphic.geometry=null,t.sensorLocation&&r.sensorLocation?this._sensorLocationGraphic.geometry=this.layer.telemetry.sensorLocation:this._sensorLocationGraphic.geometry=null,t.frameCenter&&r.frameCenter?this._frameCenterGraphic.geometry=this.layer.telemetry.frameCenter:this._frameCenterGraphic.geometry=null)}async _addOverlayMultipoint(){if(!this.layer.videoElement)return;const r=new ht(this.layer.videoElement);this.addAttachHandles([M(()=>[this.layer.frameHorizonPoints,this.layer.groundControlPoints],()=>{const{visibleTelemetryElements:t}=this;t!=null&&t.frame?(r.frameHorizonPoints=this.layer.frameHorizonPoints,r.groundControlPoints=this.layer.groundControlPoints,r.opacity=1):r.opacity=0},b)]),this._overlayContainer.addChild(r),this.view.stage.requestRender()}};x([$()],d.prototype,"graphicsView",void 0),x([$()],d.prototype,"layer",void 0),x([$()],d.prototype,"symbolColor",void 0),x([$({type:F})],d.prototype,"visibleTelemetryElements",void 0),d=x([J("esri.views.2d.layers.VideoLayerView2D")],d);const Pi=d;export{Pi as default};

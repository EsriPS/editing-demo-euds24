import{L as X,da as E,aA as Y,b_ as D,cx as I,F as s,G as a,K}from"./index-C1aGfQcb.js";import{w as F}from"./vec32-CmwgPQMd.js";import{K as G}from"./projection-BOBOhWzm.js";import{P as O}from"./normalizeUtils-Bg1OALXh.js";import{u as W}from"./scaleUtils-D2VbidBA.js";import{o as _,t as A}from"./gridUtils-DnVGRhB5.js";import{f as d,m as H,r as z,a as T,c as U}from"./Editor-BZKF0HZM.js";import"./projectBuffer-CZ7yaGuo.js";import"./normalizeUtilsCommon-UUlRRPVA.js";import"./utils-DGPHbhMN.js";import"./utils-ByvCMLXh.js";import"./vec2-D9okOEat.js";import"./vec2f64-CCfZVA9N.js";import"./projectVectorToVector-Dtcb6Asj.js";import"./projectPointToVector-ByIVLKML.js";import"./Spinner-CEWOvPN4.js";import"./AttachmentInfo-Cg9fIPGU.js";import"./legacyIcon-CEIp6Pa9.js";import"./UpdatingHandles-DOPUoIlu.js";import"./FeatureLayerBase-BNIuOgAL.js";import"./commonProperties-Drl05DKJ.js";import"./ElevationInfo-D7CBP7sd.js";import"./lengthUtils-CFwdZ3dz.js";import"./HeightModelInfo-kVs8dE0B.js";import"./arcgisLayerUrl-BkZy4Mr3.js";import"./featureLayerUtils-Dy99w2fj.js";import"./Query-LPs1Zyw4.js";import"./FullTextSearch-Cza0yp3f.js";import"./TimeExtent-DGiXUfis.js";import"./timeUtils-X0MXjtQ8.js";import"./jsonUtils-CWFaUb2E.js";import"./UniqueValueRenderer-CAZbf8NT.js";import"./RendererLegendOptions-CULirduz.js";import"./diffUtils-DMLidw0V.js";import"./colorRamps-D4VCsfmX.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./visualVariableUtils-dx28E4EQ.js";import"./jsonUtils-BWWcP_yB.js";import"./defaults-Dbnhuv3C.js";import"./defaultsJSON-GKolV7NZ.js";import"./styleUtils-CEgUrR2a.js";import"./LRUCache-DbPTy7LA.js";import"./Version-DD-eRUXC.js";import"./FieldsIndex-BrdRr9E_.js";import"./UnknownTimeZone-DhxWDwo9.js";import"./OverrideHelper-D-UVQ00R.js";import"./colorUtils-BWiljOUv.js";import"./vec42-BHDxGccW.js";import"./vec4f64-o2zAXfmz.js";import"./utils-D7agaEG-.js";import"./enums-CmIX1y88.js";import"./quantizationUtils-DbJV_fl5.js";import"./heatmapUtils-D0BPLm9w.js";import"./LayerFloorInfo-DzoJncEV.js";import"./Relationship-CBhq9gYu.js";import"./serviceCapabilitiesUtils-B23--4px.js";import"./arcade-DfpF5wFh.js";import"./TimeOnly-vNYE6bX9.js";import"./ImmutableArray-BPVd6ESQ.js";import"./FeatureLayer-DGRhhm0K.js";import"./MultiOriginJSONSupport-Qqzd52Lf.js";import"./Layer-CneDw8eF.js";import"./workers-CeelWDzo.js";import"./editsZScale-8GE3gysf.js";import"./queryZScale-D-ZT69l7.js";import"./FeatureSet-CeKoTEEO.js";import"./APIKeyMixin-BrvyKlIW.js";import"./ArcGISService-C1oUW8BT.js";import"./BlendLayer-CG9LFMxd.js";import"./jsonUtils-n3e_wlfQ.js";import"./parser-C4Qiz3JH.js";import"./utils-sqJe3zMg.js";import"./CustomParametersMixin-BhjpsNjD.js";import"./EditBusLayer-DCXZWvgn.js";import"./FeatureEffectLayer-gWJrS8gr.js";import"./FeatureEffect-B5YAe6Lk.js";import"./FeatureReductionLayer-DuxcLofN.js";import"./FeatureReductionSelection-tRCh97wj.js";import"./labelingInfo-BV0df7F6.js";import"./labelUtils-C_ZaLudT.js";import"./MD5-C9MwAd2G.js";import"./OperationalLayer-nNeN4Mrb.js";import"./OrderedLayer-B8Gw_A9P.js";import"./OrderByInfo-k2G4k_zV.js";import"./PortalLayer-Bqf_dhsv.js";import"./portalItemUtils-Cy9KvMYK.js";import"./RefreshableLayer-CwxQNwd3.js";import"./ScaleRangeLayer-66YiyNPI.js";import"./TemporalLayer-CR5q7V2k.js";import"./TimeInfo-CY1-cj-U.js";import"./FeatureTemplate-DJBXu3Te.js";import"./FeatureType-JHO2oVJp.js";import"./fieldProperties-CoDAhoou.js";import"./versionUtils-DBm9Te4x.js";import"./styleUtils-CFywnZa6.js";import"./popupUtils-BA1X4qoc.js";import"./AlphaCutoff-UcccL64p.js";import"./interfaces-CL2NbQte.js";import"./symbolUtils-BmmDXP-E.js";import"./utils-C2gvZghy.js";import"./mat2df32-BR-p9z6z.js";import"./webStyleSymbolUtils-kO7zmqzd.js";import"./GraphicsLayer-7fnK8PA0.js";import"./GraphicsCollection-BlUFPpxh.js";import"./elevationInfoUtils-DQT3uSQq.js";import"./screenUtils-CLE_gLy7.js";import"./signal-CRiDvIIF.js";import"./utils-CS8i_70G.js";import"./plane-CM4t6fNH.js";import"./mat3f64-q3fE-ZOt.js";import"./mat4f64-Dk4dwAN8.js";import"./quatf64-aQ5IuZRd.js";import"./sphere-DuEd_sPX.js";import"./mat3-Dg2BrR6m.js";import"./drapedUtils-BnpEPkkO.js";import"./infoFor3D-C0hFfS1m.js";import"./ViewingMode-HRfKv6NR.js";import"./utils-BQBvadb7.js";import"./widget-3rB5q3_K.js";import"./uploadAssetErrors-Cy9k5t87.js";let p=class extends X{constructor(t){super(t),this.options=null}destroy(){this._set("options",null)}get grid(){return this.view.grid}get effectiveViewRotation(){var t;return(t=this.grid)!=null&&t.rotateWithMap?0:E(this.view.rotation??0)}get gridRotation(){var t;return E(((t=this.grid)==null?void 0:t.rotation)??0)}get gridCenter(){var r;const{spatialReference:t,grid:o}=this;if(!o||!t)return null;try{const i=G(o.center,t),e=t.isWrappable&&((r=this.view)==null?void 0:r.center)!=null?O(i.x,this.view.center.x,t):i.x;return d(e,i.y,i.z)}catch(i){return Y.getLogger(this).errorOnce("Grid Snapping - Failed to project grid center.",i),null}}get offsetScaleFactor(){const{pixelsPerStride:t,grid:o}=this;if(!o||!t)return 1;const{majorLineInterval:r,dynamicScaling:i}=o;return r<1?null:_(r,t,i)}get spatialReference(){return this.view.spatialReference}get gridMetersPerStride(){const{grid:t}=this;return t?D(t.spacing,t.units,"meters"):null}get viewMetersPerPixel(){return W(this.view.scale)}get pixelsPerStride(){const{gridMetersPerStride:t,viewMetersPerPixel:o}=this;return o&&t?t/o:null}get updating(){return!1}async fetchCandidates(t,o,r){var l;const{options:i,view:e}=this;if(!(i!=null&&i.effectiveGridEnabled)||!e.grid||(l=r.feature)!=null&&l.attributes&&H in r.feature.attributes)return[];const n=r.coordinateHelper.arrayToPoint(t),m=i.distance*(r.pointer==="touch"?i.touchSensitivityMultiplier:1);return this.fetchCandidatesSync(n,m)}fetchCandidatesSync(t,o){const r=[],{grid:i,effectiveViewRotation:e,gridRotation:n,gridCenter:m,viewMetersPerPixel:l,offsetScaleFactor:h,spatialReference:g,gridMetersPerStride:S,pixelsPerStride:b}=this;if(!(i&&l&&m&&g&&h&&S&&b)||!i.dynamicScaling&&b<A)return r;const w=G(t,g),j=d(w.x,w.y,w.z),u=f(j,-n,m,-e),$=I(g),P=S/$*h,c=k(u,P,m),{shouldSnapX:y,shouldSnapY:v}=q(c,u,o,l,$);if(!y&&!v)return[];const V=d((y?c:u)[0],(v?c:u)[1]),x=f(V,n,m,e),C=f(c,n,m,e);if(v){const M=L(c,u,P,"y"),R=f(M,n,m,e);r.push(new z({lineStart:C,lineEnd:R,targetPoint:x,isDraped:!1}))}if(y){const M=L(c,u,P,"x"),R=f(M,n,m,e);r.push(new z({lineStart:C,lineEnd:R,targetPoint:x,isDraped:!1}))}return y&&v&&r.push(new T(x,r[0],r[1],!1)),r}};s([a({constructOnly:!0})],p.prototype,"view",void 0),s([a()],p.prototype,"options",void 0),s([a()],p.prototype,"grid",null),s([a()],p.prototype,"effectiveViewRotation",null),s([a()],p.prototype,"gridRotation",null),s([a()],p.prototype,"gridCenter",null),s([a()],p.prototype,"offsetScaleFactor",null),s([a()],p.prototype,"spatialReference",null),s([a()],p.prototype,"gridMetersPerStride",null),s([a()],p.prototype,"viewMetersPerPixel",null),s([a()],p.prototype,"pixelsPerStride",null),s([a()],p.prototype,"updating",null),p=s([K("esri.views.interactive.snapping.GridSnappingEngine")],p);const f=(t,o,r,i)=>{const e=U(t[0],t[1],t[2]);return F(e,F(e,e,r,o),r,i)},k=(t,o,r)=>{const i=(t[0]-r[0])/o,e=(t[1]-r[1])/o,n=Math.trunc(i),m=Math.trunc(e),l=Math.round(i%1),h=Math.round(e%1),g=r[0]+(n+l)*o,S=r[1]+(m+h)*o;return d(g,S)},q=(t,o,r,i,e)=>{if(i<=0)return{shouldSnapX:!1,shouldSnapY:!1};const n=(t[0]-o[0])/i,m=(t[1]-o[1])/i;return{shouldSnapX:Math.abs(n*e)<r,shouldSnapY:Math.abs(m*e)<r}},L=(t,o,r,i)=>{if(i==="y"){const n=o[0]>t[0]?1:-1;return d(t[0]+r*n,t[1])}const e=o[1]>t[1]?1:-1;return d(t[0],t[1]+r*e)};export{p as GridSnappingEngine};

import{F as i,G as n,K as l,M as a,aO as u,gh as _,c9 as g}from"./index-C1aGfQcb.js";import{d}from"./FeatureSet-CeKoTEEO.js";import{n as f,r as v}from"./FeatureLayerView2D-BNULNPn9.js";import{d as S}from"./FeatureEffect-B5YAe6Lk.js";import"./EffectView-Di3KCO94.js";import"./parser-C4Qiz3JH.js";import"./utils-sqJe3zMg.js";import"./featureConversionUtils-C-Uqf9Q4.js";import"./OptimizedFeature-swgcyHeh.js";import"./OptimizedGeometry-C9mSZhHi.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./timeSupport-BVjefMvf.js";import"./timeUtils-X0MXjtQ8.js";import"./TimeExtent-DGiXUfis.js";import"./utils-CS8i_70G.js";import"./Version-DD-eRUXC.js";import"./Query-LPs1Zyw4.js";import"./FullTextSearch-Cza0yp3f.js";import"./LayerView2D-_cD1rRgW.js";import"./utils-BQBvadb7.js";import"./Container-DukYN7bA.js";import"./MapView-DMINGQ-3.js";import"./ColorBackground-BzAAhJtv.js";import"./CollectionFlattener-COw367kg.js";import"./basemapUtils-SfV6Ch_Z.js";import"./TablesMixin-CmFQDxpI.js";import"./Layer-CneDw8eF.js";import"./workers-CeelWDzo.js";import"./projection-BOBOhWzm.js";import"./projectBuffer-CZ7yaGuo.js";import"./TileInfo-C4AYiz3R.js";import"./TileKey-DZd6gJy7.js";import"./UpdatingHandles-DOPUoIlu.js";import"./screenUtils-CLE_gLy7.js";import"./signal-CRiDvIIF.js";import"./GraphicsCollection-BlUFPpxh.js";import"./HeightModelInfo-kVs8dE0B.js";import"./IViewEvents-Bci6PjlS.js";import"./mat2df64-B7VPBnkO.js";import"./a11yUtils-Tsw26pQ5.js";import"./heightModelInfoUtils-BhzRw8-2.js";import"./arcgisLayerUrl-BkZy4Mr3.js";import"./ViewingMode-HRfKv6NR.js";import"./vec2f64-CCfZVA9N.js";import"./vec2-D9okOEat.js";import"./mat2df32-BR-p9z6z.js";import"./normalizeUtils-Bg1OALXh.js";import"./normalizeUtilsCommon-UUlRRPVA.js";import"./utils-DGPHbhMN.js";import"./utils-ByvCMLXh.js";import"./mat3-Dg2BrR6m.js";import"./vec2f32-BbH2jxlN.js";import"./unitBezier-BX6NeAEr.js";import"./Scheduler-DS_v5N7L.js";import"./debugFlags-CfZYxH5Q.js";import"./Tile-9ZT_yo0a.js";import"./TileKey-C3cOKqPf.js";import"./QueueProcessor-8zZK2k9z.js";import"./quickselect-QQC62dOK.js";import"./vec32-CmwgPQMd.js";import"./definitions-C0Jy3zs7.js";import"./HighlightDefaults-D7TbvM-a.js";import"./enums-Dk3osxpS.js";import"./Texture-CLoEFKJJ.js";import"./imageUtils-DpI9AOR9.js";import"./capabilities-A2uoe7dc.js";import"./themeUtils-C3zvZbsE.js";import"./accessibleHandler-CubitGf2.js";import"./GoTo-H_qEVlhS.js";import"./ZoomViewModel-BtZMM985.js";import"./TechniqueInstance-Ct6vq7te.js";import"./UpdateTracking2D-Do-Jp4xp.js";import"./BindType-BmZEZMMh.js";import"./Util-BK6CBhAA.js";import"./vec42-BHDxGccW.js";import"./vec4f64-o2zAXfmz.js";import"./Program-B50gSpr4.js";import"./BufferObject-C4qiEJeh.js";import"./LabelMetric-BbDPE4Hv.js";import"./enums-CmIX1y88.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BoundingBox-CnpCxTZE.js";import"./TileContainer-ChXztKMJ.js";import"./WGLContainer-Bti4JDk_.js";import"./VertexArrayObject-CzGu5bI8.js";import"./ProgramTemplate-FAwkPdO7.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-BTt_i6C1.js";import"./config-MDUrh2eL.js";import"./earcut-Lltz9D9k.js";import"./FeatureCommandQueue-DFtBlGYR.js";import"./CIMSymbolHelper-CkjLOfcU.js";import"./BidiEngine-DNnuvc1i.js";import"./fontUtils-BVEStqBT.js";import"./GeometryUtils-Bkk2TwKC.js";import"./utils-D7agaEG-.js";import"./Rect-CUzevAry.js";import"./defaults-Dbnhuv3C.js";import"./defaultsJSON-GKolV7NZ.js";import"./constants-F8oTIn7N.js";import"./lengthUtils-CFwdZ3dz.js";import"./CircularArray-CujHzHWW.js";import"./featureReductionUtils-Caulfaw_.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./OrderByInfo-k2G4k_zV.js";import"./labelingInfo-BV0df7F6.js";import"./labelUtils-C_ZaLudT.js";import"./jsonUtils-BWWcP_yB.js";import"./heatmapUtils-D0BPLm9w.js";import"./SDFHelper-BiA40fKJ.js";import"./floatRGBA-BxT4aGRY.js";import"./HighlightCounter-Czi-fdpx.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./popupUtils-3iX6uIxV.js";import"./LayerView-ClcY0vUI.js";import"./RefreshableLayerView-B0PsMbXg.js";import"./jsonUtils-n3e_wlfQ.js";const C=t=>{let e=class extends t{resume(){this._isUserPaused=!1,this.suspended||this._doResume()}pause(){this._isUserPaused=!0,this.suspended||this._doPause()}disconnect(){this._doDisconnect()}connect(){this._doConnect()}clear(){this._doClear()}constructor(...r){super(...r),this._isUserPaused=!1,this.filter=null}get connectionStatus(){return(this._isUserPaused||this.suspended)&&this._streamConnectionStatus==="connected"?"paused":this._streamConnectionStatus}_onSuspendedChange(r){r?this._doPause():this._isUserPaused||this._doResume()}};return i([n()],e.prototype,"_isUserPaused",void 0),i([n({readOnly:!0})],e.prototype,"connectionStatus",null),i([n({type:S})],e.prototype,"filter",void 0),e=i([l("esri.views.layers.StreamLayerView")],e),e};let s=class extends C(v){constructor(){super(...arguments),this.pipelineConnectionStatus="disconnected",this.pipelineErrorString=null}initialize(){this.addHandles([a(()=>this.layer.customParameters,async t=>{(await this.getWorker()).streamMessenger.updateCustomParameters(t)}),this.layer.on("send-message-to-socket",async t=>{(await this.getWorker()).streamMessenger.sendMessageToSocket(t)}),this.layer.on("send-message-to-client",async t=>{(await this.getWorker()).streamMessenger.sendMessageToClient(t),this._isUserPaused&&"type"in t&&t.type==="clear"&&this.incrementSourceRefreshVersion()}),a(()=>this.layer.purgeOptions,()=>this._update()),a(()=>this.suspended,this._onSuspendedChange.bind(this))],"constructor"),this._doResume()}destroy(){this._doPause()}get connectionError(){return this.pipelineErrorString?new u("stream-controller",this.pipelineErrorString):null}on(t,e){if(Array.isArray(t))return _(t.map(o=>this.on(o,e)));const r=["data-received","message-received"].includes(t);r&&this.getWorker().then(o=>o.streamMessenger.enableEvent(t,!0));const m=super.on(t,e),p=this;return g(()=>{m.remove(),r&&(p._workerProxy.closed||p.hasEventListener(t)||p.getWorker().then(o=>o.streamMessenger.enableEvent(t,!1)))})}async queryLatestObservations(t,e){var m,p,o;if(!((m=this.layer.timeInfo)!=null&&m.endField||(p=this.layer.timeInfo)!=null&&p.startField||(o=this.layer.timeInfo)!=null&&o.trackIdField))throw new u("streamlayer-no-timeField","queryLatestObservation can only be used with services that define a TrackIdField");const r=await this.getWorker();return f(r.features.executeQueryForLatestObservations(this._cleanUpQuery(t),e).then(y=>{const h=d.fromJSON(y);return h.features.forEach(c=>{c.layer=this.layer,c.sourceLayer=this.layer}),h}),new d({features:[]}))}detach(){super.detach(),this.pipelineConnectionStatus="disconnected"}get _streamConnectionStatus(){return this.pipelineConnectionStatus}_doPause(){this._refreshInterval!=null&&(clearInterval(this._refreshInterval),this._refreshInterval=null)}_doResume(){this._refreshInterval=setInterval(()=>this.incrementSourceRefreshVersion(),this.layer.updateInterval)}_doDisconnect(){this.getWorker().then(t=>t.streamMessenger.disconnect()),this._doPause()}_doConnect(){this.getWorker().then(t=>t.streamMessenger.connect()),this.resume()}_doClear(){this.getWorker().then(t=>t.streamMessenger.clear()),this._refreshInterval==null&&this.incrementSourceRefreshVersion()}_createClientOptions(){const t=super._createClientOptions(),e=this;return{...t,get container(){return e.featureContainer},setProperty:r=>{this.set(r.propertyName,r.value)}}}};i([n()],s.prototype,"pipelineConnectionStatus",void 0),i([n()],s.prototype,"pipelineErrorString",void 0),i([n({readOnly:!0})],s.prototype,"connectionError",null),i([n({readOnly:!0})],s.prototype,"_streamConnectionStatus",null),s=i([l("esri.views.2d.layers.StreamLayerView2D")],s);const be=s;export{be as default};

import{c9 as w,Q as y,aG as m,aA as I,F as l,G as g,K as V}from"./index-C1aGfQcb.js";import{c as H}from"./GraphicsCollection-BlUFPpxh.js";import"./colorUtils-BWiljOUv.js";import"./utils-D7agaEG-.js";import"./enums-CmIX1y88.js";import"./UpdateTracking2D-Do-Jp4xp.js";import"./GeometryUtils-Bkk2TwKC.js";import"./CIMSymbolHelper-CkjLOfcU.js";import"./definitions-C0Jy3zs7.js";import"./vec2f32-BbH2jxlN.js";import"./defaults-Dbnhuv3C.js";import"./OverrideHelper-D-UVQ00R.js";import"./floatRGBA-BxT4aGRY.js";import"./EffectView-Di3KCO94.js";import"./MapView-DMINGQ-3.js";import"./WGLContainer-Bti4JDk_.js";import"./Texture-CLoEFKJJ.js";import"./enums-Dk3osxpS.js";import"./Program-B50gSpr4.js";import"./LabelMetric-BbDPE4Hv.js";import"./StyleDefinition-BTt_i6C1.js";import"./enums-BRzLM11V.js";import"./GridShader-CGBydwsW.js";import"./pbf-B3ECgi3E.js";import"./FeatureCommandQueue-DFtBlGYR.js";import"./PieChartMeshWriter-DAESokar.js";import"./renderState-QDOxIGNB.js";import"./interfaces-DDtDqZYj.js";import"./testSVGPremultipliedAlpha-ALFMACR3.js";import{F as v}from"./GraphicsView2D-igLDaNxb.js";import"./earcut-Lltz9D9k.js";import"./vec3f32-nZdmKIgz.js";import"./normalizeUtilsCommon-UUlRRPVA.js";import"./UpdatingHandles-DOPUoIlu.js";import"./projectBuffer-CZ7yaGuo.js";import{r as T,o as n,n as f}from"./imageUtils-BIsSeL5v.js";import{j as q}from"./LayerView2D-_cD1rRgW.js";import{h as U}from"./HighlightGraphicContainer-D7fVQPOh.js";import{h as C,p as Q,r as b}from"./Tile-9ZT_yo0a.js";import{e as d}from"./TileKey-C3cOKqPf.js";import{y as S}from"./LayerView-ClcY0vUI.js";import{i as $}from"./RefreshableLayerView-B0PsMbXg.js";import{_ as F,R as G}from"./MapServiceLayerViewHelper-C3SEG_rC.js";import{r as P}from"./drapedUtils-BnpEPkkO.js";import{g as L}from"./Scheduler-DS_v5N7L.js";import"./vec42-BHDxGccW.js";import"./vec4f64-o2zAXfmz.js";import"./BindType-BmZEZMMh.js";import"./Util-BK6CBhAA.js";import"./vec2f64-CCfZVA9N.js";import"./BidiEngine-DNnuvc1i.js";import"./fontUtils-BVEStqBT.js";import"./OptimizedGeometry-C9mSZhHi.js";import"./mat2df32-BR-p9z6z.js";import"./vec2-D9okOEat.js";import"./Rect-CUzevAry.js";import"./BoundingBox-CnpCxTZE.js";import"./defaultsJSON-GKolV7NZ.js";import"./quantizationUtils-DbJV_fl5.js";import"./parser-C4Qiz3JH.js";import"./utils-sqJe3zMg.js";import"./ColorBackground-BzAAhJtv.js";import"./CollectionFlattener-COw367kg.js";import"./basemapUtils-SfV6Ch_Z.js";import"./TablesMixin-CmFQDxpI.js";import"./Layer-CneDw8eF.js";import"./TimeExtent-DGiXUfis.js";import"./timeUtils-X0MXjtQ8.js";import"./workers-CeelWDzo.js";import"./projection-BOBOhWzm.js";import"./TileInfo-C4AYiz3R.js";import"./TileKey-DZd6gJy7.js";import"./screenUtils-CLE_gLy7.js";import"./signal-CRiDvIIF.js";import"./HeightModelInfo-kVs8dE0B.js";import"./Query-LPs1Zyw4.js";import"./FullTextSearch-Cza0yp3f.js";import"./IViewEvents-Bci6PjlS.js";import"./mat2df64-B7VPBnkO.js";import"./a11yUtils-Tsw26pQ5.js";import"./heightModelInfoUtils-BhzRw8-2.js";import"./arcgisLayerUrl-BkZy4Mr3.js";import"./ViewingMode-HRfKv6NR.js";import"./normalizeUtils-Bg1OALXh.js";import"./utils-DGPHbhMN.js";import"./utils-ByvCMLXh.js";import"./mat3-Dg2BrR6m.js";import"./unitBezier-BX6NeAEr.js";import"./vec32-CmwgPQMd.js";import"./HighlightDefaults-D7TbvM-a.js";import"./imageUtils-DpI9AOR9.js";import"./capabilities-A2uoe7dc.js";import"./themeUtils-C3zvZbsE.js";import"./accessibleHandler-CubitGf2.js";import"./GoTo-H_qEVlhS.js";import"./ZoomViewModel-BtZMM985.js";import"./utils-CS8i_70G.js";import"./Version-DD-eRUXC.js";import"./BufferObject-C4qiEJeh.js";import"./VertexArrayObject-CzGu5bI8.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./ProgramTemplate-FAwkPdO7.js";import"./Container-DukYN7bA.js";import"./config-MDUrh2eL.js";import"./featureConversionUtils-C-Uqf9Q4.js";import"./OptimizedFeature-swgcyHeh.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./CircularArray-CujHzHWW.js";import"./AttributeStore-DoHrhu85.js";import"./TimeOnly-vNYE6bX9.js";import"./UnknownTimeZone-DhxWDwo9.js";import"./centroid-DdLmOD72.js";import"./labelUtils-C_ZaLudT.js";import"./FieldsIndex-BrdRr9E_.js";import"./diffUtils-DMLidw0V.js";import"./queryUtils-DfwPGxwH.js";import"./json-Wa8cmqdu.js";import"./timeSupport-DZeNU3Q4.js";import"./constants-F8oTIn7N.js";import"./lengthUtils-CFwdZ3dz.js";import"./QueueProcessor-8zZK2k9z.js";import"./TurboLine-Bh77oai_.js";import"./basicInterfaces-CZwQPxTp.js";import"./normalizeUtilsSync-DxE8L4Ib.js";import"./Bitmap-Dit7l_zy.js";import"./TileContainer-ChXztKMJ.js";import"./utils-BQBvadb7.js";import"./AGraphicContainer-Be74AnP4.js";import"./TechniqueInstance-Ct6vq7te.js";import"./quickselect-QQC62dOK.js";import"./languageUtils-DfhLIq1n.js";import"./ImmutableArray-BPVd6ESQ.js";import"./shared-Czb1Shm3.js";import"./number-ByPuf2wa.js";import"./scaleUtils-D2VbidBA.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./sublayerUtils-C2scBnIk.js";import"./highlightUtils-Ch3EC-YF.js";import"./popupUtils-3iX6uIxV.js";import"./debugFlags-CfZYxH5Q.js";const k=[0,0];let h=class extends $(T(q(S))){constructor(){super(...arguments),this._fetchQueue=null,this._highlightGraphics=new H,this._highlightView=null,this._popupHighlightHelper=null,this._tileStrategy=null,this.layer=null}get resampling(){return!("resampling"in this.layer)||this.layer.resampling!==!1}get tilemapCache(){return"tilemapCache"in this.layer?this.layer.tilemapCache:null}update(t){var i;this._fetchQueue.pause(),this._fetchQueue.state=t.state,this._tileStrategy.update(t),this._fetchQueue.resume(),(i=this._highlightView)==null||i.processUpdate(t)}attach(){const t="tileServers"in this.layer?this.layer.tileServers:null,i=this.tilemapCache;if(this._tileInfoView=new C(this.layer.tileInfo,this.layer.fullExtent,i==null?void 0:i.effectiveMinLOD,i==null?void 0:i.effectiveMaxLOD),this._fetchQueue=new Q({tileInfoView:this._tileInfoView,concurrency:t&&10*t.length||10,process:(e,r)=>this.fetchTile(e,r),scheduler:this.scheduler,priority:L.MAPVIEW_FETCH_QUEUE}),this._tileStrategy=new b({cachePolicy:"keep",resampling:this.resampling,acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),tileInfoView:this._tileInfoView}),F(this,this.layer)){const e=this._highlightView=new v({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new U(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1});this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new G({createFetchPopupFeaturesQueryGeometry:(r,p)=>P(r,p,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(r,p)=>{e.graphicUpdateHandler({graphic:r,property:p})},layerView:this,updatingHandles:this._updatingHandles})}this.requestUpdate(),this.addAttachHandles(this._updatingHandles.add(()=>this.resampling,()=>{this.doRefresh()})),super.attach()}detach(){var t,i;super.detach(),this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),(t=this._popupHighlightHelper)==null||t.destroy(),(i=this._highlightView)==null||i.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=this._popupHighlightHelper=null}async fetchPopupFeaturesAtLocation(t,i){return this._popupHighlightHelper?this._popupHighlightHelper.fetchPopupFeaturesAtLocation(t,i):[]}highlight(t){return this._popupHighlightHelper?this._popupHighlightHelper.highlight(t):w()}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){var i;return y((i=this.layer.tileInfo)==null?void 0:i.spatialReference,t)}async doRefresh(){if(this.attached){if(this.suspended)return this._tileStrategy.clear(),void this.requestUpdate();this._fetchQueue.reset(),this._tileStrategy.refresh(t=>this._updatingHandles.addPromise(this._enqueueTileFetch(t)))}}acquireTile(t){const i=this._bitmapView.createTile(t),e=i.bitmap;return[e.x,e.y]=this._tileInfoView.getTileCoords(k,i.key),e.resolution=this._tileInfoView.getTileResolution(i.key),[e.width,e.height]=this._tileInfoView.tileInfo.size,this._updatingHandles.addPromise(this._enqueueTileFetch(i)),this._bitmapView.addChild(i),this.requestUpdate(),i}releaseTile(t){this._fetchQueue.abort(t.key.id),this._bitmapView.removeChild(t),t.once("detach",()=>t.destroy()),this.requestUpdate()}async fetchTile(t,i={}){const e=this.tilemapCache,{signal:r,resamplingLevel:p=0}=i;if(!e)try{return await this._fetchImage(t,r)}catch(o){if(!m(o)&&!this.resampling)return n(this._tileInfoView.tileInfo.size);if(p<3){const c=this._tileInfoView.getTileParentId(t.id);if(c){const u=new d(c),_=await this.fetchTile(u,{...i,resamplingLevel:p+1});return f(this._tileInfoView,_,u,t)}}throw o}const s=new d(0,0,0,0);let a;try{if(await e.fetchAvailabilityUpsample(t.level,t.row,t.col,s,{signal:r}),!this.resampling&&s.level!==t.level)return n(this._tileInfoView.tileInfo.size);a=await this._fetchImage(s,r)}catch(o){if(m(o))throw o;return n(this._tileInfoView.tileInfo.size)}return this.resampling?f(this._tileInfoView,a,s,t):a}async _enqueueTileFetch(t){if(!this._fetchQueue.has(t.key.id)){try{const i=await this._fetchQueue.push(t.key);t.bitmap.source=i,t.bitmap.width=this._tileInfoView.tileInfo.size[0],t.bitmap.height=this._tileInfoView.tileInfo.size[1],t.once("attach",()=>this.requestUpdate())}catch(i){m(i)||I.getLogger(this).error(i)}this.requestUpdate()}}async _fetchImage(t,i){return this.layer.fetchImageBitmapTile(t.level,t.row,t.col,{signal:i})}};l([g()],h.prototype,"resampling",null),l([g()],h.prototype,"tilemapCache",null),h=l([V("esri.views.2d.layers.TileLayerView2D")],h);const fe=h;export{fe as default};

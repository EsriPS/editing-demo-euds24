import{bo as w,bp as v}from"./index-C1aGfQcb.js";import{e as g}from"./CIMSymbolHelper-CkjLOfcU.js";import{CIMSymbolRasterizer as $}from"./CIMSymbolRasterizer-CxzeX9I8.js";import{y as j}from"./OverrideHelper-D-UVQ00R.js";import{V as G}from"./utils-D7agaEG-.js";import{t as b,l as O}from"./symbolUtils-BmmDXP-E.js";import"./BidiEngine-DNnuvc1i.js";import"./fontUtils-BVEStqBT.js";import"./OptimizedGeometry-C9mSZhHi.js";import"./GeometryUtils-Bkk2TwKC.js";import"./enums-CmIX1y88.js";import"./definitions-C0Jy3zs7.js";import"./mat2df32-BR-p9z6z.js";import"./vec2-D9okOEat.js";import"./vec2f32-BbH2jxlN.js";import"./Rect-CUzevAry.js";import"./BoundingBox-CnpCxTZE.js";import"./defaults-Dbnhuv3C.js";import"./defaultsJSON-GKolV7NZ.js";import"./CIMResourceManager-BDA76FPV.js";import"./imageUtils-DpI9AOR9.js";import"./colorUtils-BWiljOUv.js";import"./vec42-BHDxGccW.js";import"./vec4f64-o2zAXfmz.js";import"./quantizationUtils-DbJV_fl5.js";import"./utils-C2gvZghy.js";import"./jsonUtils-n3e_wlfQ.js";import"./parser-C4Qiz3JH.js";import"./utils-sqJe3zMg.js";import"./LRUCache-DbPTy7LA.js";import"./webStyleSymbolUtils-kO7zmqzd.js";import"./jsonUtils-BWWcP_yB.js";import"./styleUtils-CEgUrR2a.js";const u=new $(null),c=w(b.size),S=w(b.maxSize),C=w(b.lineWidth),R=1;async function V(r,e,a){const i=e==null?void 0:e.size;let t=i!=null&&typeof i=="object"&&"width"in i?i.width:i,l=i!=null&&typeof i=="object"&&"height"in i?i.height:i;if(t==null||l==null)if(a==="esriGeometryPolygon")t=c,l=c;else{const o=await q(r,e,a);o&&(t=o.width,l=o.height),a==="esriGeometryPolyline"&&(t=C),t=t!=null&&isFinite(t)?Math.min(t,S):c,l=l!=null&&isFinite(l)?Math.max(Math.min(l,S),R):c}return e.style==="legend"&&a==="esriGeometryPolyline"&&(t=C),{width:t,height:l}}async function q(r,e,a){const{feature:i,fieldMap:t,viewParams:l}=e.cimOptions||e,o=await j.resolveSymbolOverrides(r.data,i,null,t,a,null,l);if(!o)return null;(r=r.clone()).data={type:"CIMSymbolReference",symbol:o},r.data.primitiveOverrides=void 0;const n=[];return g.fetchResources(o,u.resourceManager,n),g.fetchFonts(o,u.resourceManager,n),n.length>0&&await Promise.all(n),g.getEnvelope(o,null,u.resourceManager)}async function de(r,e={}){var M;const{node:a,opacity:i,symbolConfig:t}=e,l=t!=null&&typeof t=="object"&&"isSquareFill"in t&&t.isSquareFill,o=e.cimOptions||e,n=o.geometryType||G((M=r==null?void 0:r.data)==null?void 0:M.symbol),f=await V(r,e,n),{feature:P,fieldMap:I}=o,L=l||n!=="esriGeometryPolygon"?"preview":"legend",y=await u.rasterizeCIMSymbolAsync(r,P,f,L,I,n,null,o.viewParams,o.allowScalingUp);if(!y)return null;const{width:x,height:z}=y,s=document.createElement("canvas");s.width=x,s.height=z,s.getContext("2d").putImageData(y,0,0);const h=v(f.width),d=v(f.height),m=new Image(h,d);m.src=s.toDataURL(),m.ariaLabel=e.ariaLabel??null,m.alt=e.ariaLabel??"",i!=null&&(m.style.opacity=`${i}`);let p=m;if(e.effectView!=null){const F={shape:{type:"image",x:0,y:0,width:h,height:d,src:m.src},fill:null,stroke:null,offset:[0,0]};p=O([[F]],[h,d],{effectView:e.effectView,ariaLabel:e.ariaLabel})}return a&&p&&a.appendChild(p),p}export{de as previewCIMSymbol};

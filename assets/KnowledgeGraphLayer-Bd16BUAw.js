import{br as f,M as T,c5 as _,aH as S,aO as b,cA as u,f3 as D,aA as g,f4 as L,eP as v,eN as w,eQ as A,bH as E,F as s,G as d,W as N,Z as C,K as k,et as $,aY as G}from"./index-C1aGfQcb.js";import{S as I}from"./MultiOriginJSONSupport-Qqzd52Lf.js";import{f as R}from"./Layer-CneDw8eF.js";import{u as c,c as M,E as O,F,R as U}from"./KnowledgeGraphSublayer-BaVgHV0Y.js";import{l as P}from"./ArcGISService-C1oUW8BT.js";import{l as j}from"./BlendLayer-CG9LFMxd.js";import{e as z}from"./CustomParametersMixin-BhjpsNjD.js";import{b as K}from"./OperationalLayer-nNeN4Mrb.js";import{j as x}from"./PortalLayer-Bqf_dhsv.js";import{f as H}from"./RefreshableLayer-CwxQNwd3.js";import{t as V}from"./ScaleRangeLayer-66YiyNPI.js";import{p as Y}from"./commonProperties-Drl05DKJ.js";import{F as B}from"./knowledgeGraphService-DNo9v-NN.js";import"./TimeExtent-DGiXUfis.js";import"./timeUtils-X0MXjtQ8.js";import"./projection-BOBOhWzm.js";import"./projectBuffer-CZ7yaGuo.js";import"./featureConversionUtils-C-Uqf9Q4.js";import"./OptimizedFeature-swgcyHeh.js";import"./OptimizedGeometry-C9mSZhHi.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./GraphicsLayer-7fnK8PA0.js";import"./GraphicsCollection-BlUFPpxh.js";import"./ElevationInfo-D7CBP7sd.js";import"./lengthUtils-CFwdZ3dz.js";import"./Relationship-BBxoC4jd.js";import"./Query-LPs1Zyw4.js";import"./FullTextSearch-Cza0yp3f.js";import"./UniqueValueRenderer-CAZbf8NT.js";import"./RendererLegendOptions-CULirduz.js";import"./diffUtils-DMLidw0V.js";import"./colorRamps-D4VCsfmX.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./visualVariableUtils-dx28E4EQ.js";import"./jsonUtils-BWWcP_yB.js";import"./defaults-Dbnhuv3C.js";import"./defaultsJSON-GKolV7NZ.js";import"./styleUtils-CEgUrR2a.js";import"./jsonUtils-CWFaUb2E.js";import"./LRUCache-DbPTy7LA.js";import"./Version-DD-eRUXC.js";import"./FieldsIndex-BrdRr9E_.js";import"./UnknownTimeZone-DhxWDwo9.js";import"./OverrideHelper-D-UVQ00R.js";import"./colorUtils-BWiljOUv.js";import"./vec42-BHDxGccW.js";import"./vec4f64-o2zAXfmz.js";import"./utils-D7agaEG-.js";import"./enums-CmIX1y88.js";import"./quantizationUtils-DbJV_fl5.js";import"./heatmapUtils-D0BPLm9w.js";import"./workers-CeelWDzo.js";import"./FeatureStore-B0gqZoOR.js";import"./BoundsStore-DO_rtT_2.js";import"./PooledRBush-D_zSRdWq.js";import"./quickselect-QQC62dOK.js";import"./timeSupport-DZeNU3Q4.js";import"./queryUtils-DfwPGxwH.js";import"./normalizeUtils-Bg1OALXh.js";import"./normalizeUtilsCommon-UUlRRPVA.js";import"./utils-DGPHbhMN.js";import"./utils-ByvCMLXh.js";import"./json-Wa8cmqdu.js";import"./optimizedFeatureQueryEngineAdapter-DrXZKbZy.js";import"./centroid-DdLmOD72.js";import"./QueryEngine-C9ivs0Pi.js";import"./WhereClause-dg9O4EEg.js";import"./TimeOnly-vNYE6bX9.js";import"./QueryEngineCapabilities-DjYb9CEb.js";import"./utils-fVaXlGs2.js";import"./utils-D5wrSxig.js";import"./ClassBreaksDefinition-CpzZK_QT.js";import"./SnappingCandidate-O5eRSE6e.js";import"./Scheduler-DS_v5N7L.js";import"./signal-CRiDvIIF.js";import"./debugFlags-CfZYxH5Q.js";import"./clientSideDefaults-DxRAc8q_.js";import"./capabilities-Y9lFlGVh.js";import"./fieldProperties-CoDAhoou.js";import"./FeatureEffectLayer-gWJrS8gr.js";import"./FeatureEffect-B5YAe6Lk.js";import"./jsonUtils-n3e_wlfQ.js";import"./parser-C4Qiz3JH.js";import"./utils-sqJe3zMg.js";import"./FeatureReductionLayer-DuxcLofN.js";import"./FeatureReductionSelection-tRCh97wj.js";import"./featureLayerUtils-Dy99w2fj.js";import"./labelingInfo-BV0df7F6.js";import"./labelUtils-C_ZaLudT.js";import"./MD5-C9MwAd2G.js";import"./OrderedLayer-B8Gw_A9P.js";import"./OrderByInfo-k2G4k_zV.js";import"./TemporalLayer-CR5q7V2k.js";import"./TimeInfo-CY1-cj-U.js";import"./FeatureSet-CeKoTEEO.js";import"./popupUtils-BA1X4qoc.js";import"./arcgisLayerUrl-BkZy4Mr3.js";import"./portalItemUtils-Cy9KvMYK.js";let r=class extends j(V(H(P(K(x(I(z(R)))))))){constructor(e){super(e),this._graphTypeLookup=new Map,this._namedTypesModified=!1,this.dataManager=null,this.definitionSetMap=null,this.knowledgeGraph=null,this.layers=new(f.ofType(c)),this.memberEntityTypes=null,this.memberRelationshipTypes=null,this.operationalLayerType="KnowledgeGraphLayer",this.sublayerIdsCache=new Map,this.tables=new(f.ofType(c)),this.type="knowledge-graph",this.url=null,this.addHandles(T(()=>this.layers.concat(this.tables),(t,i)=>this._handleSublayersChange(t,i),_))}load(e){return this.addResolvingPromise(this._doLoad(e)),Promise.resolve(this)}async _doLoad(e){try{await this.loadFromPortal({supportedTypes:["Knowledge Graph Layer"]},e)}catch(t){S(t)}await this._fetchMetadata(),await this._initializeLayerProperties(),this.loadLayerAssumingLocalCache(),await M(this)}async _fetchMetadata(){if(!this.url)throw new b("knowledge-graph:missing-url","KnowledgeGraphLayer must be created with a url");const e=await B(this.url);this.knowledgeGraph=e,this._forEachGraphType(t=>{t.name&&this._graphTypeLookup.set(t.name,t)})}async _initializeLayerProperties(){this.originIdOf("inclusionModeDefinition")===u.USER?this._validateInclusionModeDefinition():await this._initializeInclusionModeDefinition(),this._setMemberTypes(),this.dataManager=new O({knowledgeGraph:this.knowledgeGraph,inclusionModeDefinition:this.inclusionModeDefinition})}async _initializeInclusionModeDefinition(){const e=this.definitionSetMap?await F(this.definitionSetMap,!0):{generateAllSublayers:!0,namedTypeDefinitions:new Map};[...this.layers.toArray(),...this.tables.toArray()].forEach(t=>{const i=this._graphTypeLookup.get(t.graphTypeName);i&&!e.namedTypeDefinitions.has(i.name)&&e.namedTypeDefinitions.set(i.name,{useAllData:!0})}),this.setAtOrigin("inclusionModeDefinition",e,D(this.originIdOf("definitionSetMap")))}_validateInclusionModeDefinition(){const{inclusionModeDefinition:e}=this;if(!e)return;const{namedTypeDefinitions:t}=e;if((t==null?void 0:t.size)>0)t.forEach((i,o)=>{const a=this._graphTypeLookup.get(o);if(!a)return g.getLogger(this).warn(`A named type, ${o}, was in the inclusion list that wasn't in the data model and will be removed`),void t.delete(o);a.type!=="relationship"&&a.type!=="entity"&&(g.getLogger(this).warn(`A named type, ${o}, was in the inclusion list that wasn't properly modeled and will be removed`),t.delete(o))});else if(!e.generateAllSublayers)throw new b("knowledge-graph:composite-layer-constructor","If an explicit inclusion definition is defined, at least one namedTypeDefinition must also be defined")}_setMemberTypes(){var a,n;let e=[],t=[];const{inclusionModeDefinition:i}=this,o=i==null?void 0:i.namedTypeDefinitions;!i||i.generateAllSublayers?(e=((a=this.knowledgeGraph.dataModel)==null?void 0:a.entityTypes)??[],t=((n=this.knowledgeGraph.dataModel)==null?void 0:n.relationshipTypes)??[]):o&&o.size>0&&o.forEach((p,l)=>{const h=this._graphTypeLookup.get(l);switch(h==null?void 0:h.type){case"relationship":t.push(h);break;case"entity":e.push(h)}}),this.memberEntityTypes=e,this.memberRelationshipTypes=t}_forEachGraphType(e){var t,i;[...((t=this.knowledgeGraph.dataModel)==null?void 0:t.entityTypes)??[],...((i=this.knowledgeGraph.dataModel)==null?void 0:i.relationshipTypes)??[]].forEach(o=>{e(o)})}_refreshNamedTypes(){this._namedTypesModified=!0;for(const e of this.layers)e.emit("refresh",{dataChanged:!0});for(const e of this.tables)e.emit("refresh",{dataChanged:!0})}async _handleNewRecords(e){const t=[];this.dataManager.addToLayer(e);for(const i of e)this.sublayerIdsCache.has(i.typeName)||(this.sublayerIdsCache.set(i.typeName,new Set),t.push(i.typeName)),this.sublayerIdsCache.get(i.typeName).add(i.id);for(const i of t){const o=this._graphTypeLookup.get(i);o&&(this._addSublayer(o),o.type==="entity"?this.dataManager.entityTypeNames.add(i):this.dataManager.relationshipTypeNames.add(i),this.dataManager.sublayerCaches.set(i,new Map))}await M(this,t),this._refreshNamedTypes()}_createSublayers(e,t,i){e.forEach(o=>{const a=this._createSublayer(o);i(a)&&t.push(a),this._updateSublayerCaches(o)})}_addSublayer(e){const t=this._createSublayer(e);return t.geometryType?this.layers.push(t):this.tables.push(t),t}_createSublayer(e){return new c({objectType:e,parentCompositeLayer:this,graphType:e.type})}_updateSublayers(e,t){t.forEach(i=>{i.parentCompositeLayer=this;const o=e.find(a=>a.type===i.graphType&&a.name===i.graphTypeName);o&&(i.objectType=o,this._updateSublayerCaches(o))})}_updateSublayerCaches(e){const t=this.dataManager.sublayerCaches;t.has(e.name)||t.set(e.name,new Map)}_saveUrlAsNewResource(e,t,i,o){e[t]="<pending>",i.pendingOperations.push(Q(this.inclusionModeDefinition).then(a=>{const n=W(o);e[t]=n.itemRelativeUrl,i.toAdd.push({resource:n,content:{type:"blob",blob:a},compress:!1,finish:p=>{this.definitionSetMap=p.url}})}))}_displaysAllRecords(e){for(const[,{useAllData:t}]of e.namedTypeDefinitions)if(!t)return!1;return!0}_handleSublayersChange(e,t){t&&(t.forEach(i=>{i.parent=null}),this.removeHandles("sublayers-owner")),e&&(e.forEach(i=>{i.parent=this}),this.addHandles([e.on("after-add",({item:i})=>{i.parent=this}),e.on("after-remove",({item:i})=>{i.parent=null})],"sublayers-owner"))}readDefinitionSetMap(e,t,i){return L(e,i)}writeDefinitionSetMap(e,t,i,o){const a=o==null?void 0:o.portalItem,n=o==null?void 0:o.resources,p=v(o==null?void 0:o.origin);if(!a||!n||p==null)return void(e&&(t[i]=w(e,o)));const{inclusionModeDefinition:l}=this;if(!l||this._displaysAllRecords(l))return void(this.definitionSetMap=null);const h=this.originIdOf("inclusionModeDefinition");if(h===u.USER||this._namedTypesModified||p<h)this._saveUrlAsNewResource(t,i,n,a);else if(p===h&&e){const y=w(e,o);A(y)?this._saveUrlAsNewResource(t,i,n,a):t[i]=y}}set inclusionModeDefinition(e){this.loadStatus!=="loaded"&&this.loadStatus!=="failed"?this._set("inclusionModeDefinition",e):g.getLogger(this).error("#inclusionModeDefinition","inclusionModeDefinition cannot be changed after the layer is loaded.")}loadLayerAssumingLocalCache(){var t,i;const e=[...this.memberEntityTypes,...this.memberRelationshipTypes];this.originIdOf("layers")===u.DEFAULTS?this._createSublayers(e,this.layers,o=>!!o.geometryType):this._updateSublayers(e,this.layers),this.originIdOf("tables")===u.DEFAULTS?this._createSublayers(e,this.tables,o=>!o.geometryType):this._updateSublayers(e,this.tables),(i=(t=this.dataManager.inclusionModeDefinition)==null?void 0:t.namedTypeDefinitions)==null||i.forEach((o,a)=>{var p;const n=E(this.sublayerIdsCache,a,()=>new Set);(p=o.members)==null||p.forEach(l=>{n.add(l.id)})})}async addRecords(e){await this._handleNewRecords(e)}async removeRecords(e){var i,o,a,n,p,l,h,y;const t=[];for(const m of e)((a=(o=(i=this.dataManager.inclusionModeDefinition)==null?void 0:i.namedTypeDefinitions)==null?void 0:o.get(m.typeName))==null?void 0:a.useAllData)===!1&&((h=(l=(p=(n=this.dataManager.inclusionModeDefinition)==null?void 0:n.namedTypeDefinitions)==null?void 0:p.get(m.typeName))==null?void 0:l.members)!=null&&h.has(m.id))&&t.push(m);this.dataManager.removeFromLayer(t);for(const m of t)(y=this.sublayerIdsCache.get(m.typeName))==null||y.delete(m.id);return this._refreshNamedTypes(),t}};s([d()],r.prototype,"dataManager",void 0),s([d({json:{write:{ignoreOrigin:!0,writerEnsuresNonNull:!0}}})],r.prototype,"definitionSetMap",void 0),s([N("definitionSetMap")],r.prototype,"readDefinitionSetMap",null),s([C("definitionSetMap")],r.prototype,"writeDefinitionSetMap",null),s([d()],r.prototype,"inclusionModeDefinition",null),s([d()],r.prototype,"knowledgeGraph",void 0),s([d({type:f.ofType(c),json:{write:{ignoreOrigin:!0}}})],r.prototype,"layers",void 0),s([d()],r.prototype,"memberEntityTypes",void 0),s([d()],r.prototype,"memberRelationshipTypes",void 0),s([d({type:["KnowledgeGraphLayer"]})],r.prototype,"operationalLayerType",void 0),s([d()],r.prototype,"sublayerIdsCache",void 0),s([d({type:f.ofType(c),json:{write:{ignoreOrigin:!0}}})],r.prototype,"tables",void 0),s([d({json:{read:!1}})],r.prototype,"type",void 0),s([d(Y)],r.prototype,"url",void 0),r=s([k("esri.layers.KnowledgeGraphLayer")],r);const jt=r;async function Q(e){const t=await U(e);return new Blob([t],{type:"application/x-protobuf"})}function W(e){const t=`definitionSetMap-${$()}.dat`,i=G("knowledgeGraphLayer",t);return e.resourceFromPath(i)}export{jt as default};

import{cx as B,iw as W,ix as H,iy as D,iz as b,cr as F,L as X,br as Y,F as L,G as q,K as Z}from"./index-C1aGfQcb.js";import{j as u}from"./elevationInfoUtils-DQT3uSQq.js";import{p as P,N as g,H as y,x,s as c,I as $,d as C,G as z,r as ee,J as R,M as A,K as te,L as ie,O as M,h as j,P as re,Q as S,t as se,w as oe,u as ne,S as pe,T as he,o as ae,E as de}from"./Editor-BZKF0HZM.js";import{m as J,b as K,e as Q,j as le,p as ce,d as me,_ as ge}from"./vec2-D9okOEat.js";import{u as U}from"./geodesicLengthMeasurementUtils-DHp52l__.js";import{n as N}from"./vec2f64-CCfZVA9N.js";import{q as fe,c as ue,o as xe}from"./vec32-CmwgPQMd.js";import"./ElevationInfo-D7CBP7sd.js";import"./lengthUtils-CFwdZ3dz.js";import"./projectVectorToVector-Dtcb6Asj.js";import"./projectBuffer-CZ7yaGuo.js";import"./projectPointToVector-ByIVLKML.js";import"./projection-BOBOhWzm.js";import"./Spinner-CEWOvPN4.js";import"./AttachmentInfo-Cg9fIPGU.js";import"./legacyIcon-CEIp6Pa9.js";import"./UpdatingHandles-DOPUoIlu.js";import"./FeatureLayerBase-BNIuOgAL.js";import"./commonProperties-Drl05DKJ.js";import"./HeightModelInfo-kVs8dE0B.js";import"./arcgisLayerUrl-BkZy4Mr3.js";import"./featureLayerUtils-Dy99w2fj.js";import"./Query-LPs1Zyw4.js";import"./FullTextSearch-Cza0yp3f.js";import"./TimeExtent-DGiXUfis.js";import"./timeUtils-X0MXjtQ8.js";import"./jsonUtils-CWFaUb2E.js";import"./UniqueValueRenderer-CAZbf8NT.js";import"./RendererLegendOptions-CULirduz.js";import"./diffUtils-DMLidw0V.js";import"./colorRamps-D4VCsfmX.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./visualVariableUtils-dx28E4EQ.js";import"./jsonUtils-BWWcP_yB.js";import"./defaults-Dbnhuv3C.js";import"./defaultsJSON-GKolV7NZ.js";import"./styleUtils-CEgUrR2a.js";import"./LRUCache-DbPTy7LA.js";import"./Version-DD-eRUXC.js";import"./FieldsIndex-BrdRr9E_.js";import"./UnknownTimeZone-DhxWDwo9.js";import"./OverrideHelper-D-UVQ00R.js";import"./colorUtils-BWiljOUv.js";import"./vec42-BHDxGccW.js";import"./vec4f64-o2zAXfmz.js";import"./utils-D7agaEG-.js";import"./enums-CmIX1y88.js";import"./quantizationUtils-DbJV_fl5.js";import"./heatmapUtils-D0BPLm9w.js";import"./LayerFloorInfo-DzoJncEV.js";import"./Relationship-CBhq9gYu.js";import"./serviceCapabilitiesUtils-B23--4px.js";import"./arcade-DfpF5wFh.js";import"./TimeOnly-vNYE6bX9.js";import"./ImmutableArray-BPVd6ESQ.js";import"./FeatureLayer-DGRhhm0K.js";import"./MultiOriginJSONSupport-Qqzd52Lf.js";import"./Layer-CneDw8eF.js";import"./workers-CeelWDzo.js";import"./editsZScale-8GE3gysf.js";import"./queryZScale-D-ZT69l7.js";import"./FeatureSet-CeKoTEEO.js";import"./APIKeyMixin-BrvyKlIW.js";import"./ArcGISService-C1oUW8BT.js";import"./BlendLayer-CG9LFMxd.js";import"./jsonUtils-n3e_wlfQ.js";import"./parser-C4Qiz3JH.js";import"./utils-sqJe3zMg.js";import"./CustomParametersMixin-BhjpsNjD.js";import"./EditBusLayer-DCXZWvgn.js";import"./FeatureEffectLayer-gWJrS8gr.js";import"./FeatureEffect-B5YAe6Lk.js";import"./FeatureReductionLayer-DuxcLofN.js";import"./FeatureReductionSelection-tRCh97wj.js";import"./labelingInfo-BV0df7F6.js";import"./labelUtils-C_ZaLudT.js";import"./MD5-C9MwAd2G.js";import"./OperationalLayer-nNeN4Mrb.js";import"./OrderedLayer-B8Gw_A9P.js";import"./OrderByInfo-k2G4k_zV.js";import"./PortalLayer-Bqf_dhsv.js";import"./portalItemUtils-Cy9KvMYK.js";import"./RefreshableLayer-CwxQNwd3.js";import"./ScaleRangeLayer-66YiyNPI.js";import"./TemporalLayer-CR5q7V2k.js";import"./TimeInfo-CY1-cj-U.js";import"./FeatureTemplate-DJBXu3Te.js";import"./FeatureType-JHO2oVJp.js";import"./fieldProperties-CoDAhoou.js";import"./versionUtils-DBm9Te4x.js";import"./styleUtils-CFywnZa6.js";import"./popupUtils-BA1X4qoc.js";import"./AlphaCutoff-UcccL64p.js";import"./interfaces-CL2NbQte.js";import"./symbolUtils-BmmDXP-E.js";import"./utils-C2gvZghy.js";import"./mat2df32-BR-p9z6z.js";import"./webStyleSymbolUtils-kO7zmqzd.js";import"./GraphicsLayer-7fnK8PA0.js";import"./GraphicsCollection-BlUFPpxh.js";import"./screenUtils-CLE_gLy7.js";import"./signal-CRiDvIIF.js";import"./utils-CS8i_70G.js";import"./plane-CM4t6fNH.js";import"./mat3f64-q3fE-ZOt.js";import"./mat4f64-Dk4dwAN8.js";import"./quatf64-aQ5IuZRd.js";import"./sphere-DuEd_sPX.js";import"./mat3-Dg2BrR6m.js";import"./drapedUtils-BnpEPkkO.js";import"./infoFor3D-C0hFfS1m.js";import"./ViewingMode-HRfKv6NR.js";import"./utils-BQBvadb7.js";import"./widget-3rB5q3_K.js";import"./uploadAssetErrors-Cy9k5t87.js";class k{constructor(i,e){this.view=i,this.options=e,this.squaredShortLineThreshold=P.shortLineThreshold*P.shortLineThreshold}snap(i,e){return e.vertexHandle!=null?e.vertexHandle.type!=="vertex"?[]:this.snapExistingVertex(i,e):this.snapNewVertex(i,e)}edgeExceedsShortLineThreshold(i,e){return this.exceedsShortLineThreshold(g(i.leftVertex.pos,this.view,e),g(i.rightVertex.pos,this.view,e),e)}exceedsShortLineThreshold(i,e,{spatialReference:t}){return this.squaredShortLineThreshold===0||y(x(e,t,u,this.view),x(i,t,u,this.view))>this.squaredShortLineThreshold}isVertical(i,e,{spatialReference:t}){const r=B(t);return J(c(i),c(e))*r<P.verticalLineThresholdMeters}squaredProximityThreshold(i){return i==="touch"?this._squaredTouchProximityThreshold:this._squaredMouseProximityThreshold}get _squaredMouseProximityThreshold(){return this.options.distance*this.options.distance}get _squaredTouchProximityThreshold(){const{distance:i,touchSensitivityMultiplier:e}=this.options,t=i*e;return t*t}}class ve extends k{snapNewVertex(i,e){const t=e.editGeometryOperations.data.components[0],r=t.edges.length,s=[];if(r<1)return s;const{spatialReference:o}=e,p=x(i,o,u,this.view),{view:n}=this,h=t.edges[r-1];let a=h;do{if(this.edgeExceedsShortLineThreshold(a,e)){const m=$(a,n,e);this._processCandidateProposal(m.left,m.right,i,p,e,s)}a=a.leftVertex.leftEdge}while(a&&a!==h);return s}snapExistingVertex(i,e){const t=[],r=e.vertexHandle,s=r.component;if(s.edges.length<2)return t;const{view:o}=this,{spatialReference:p}=e,n=x(i,p,u,o),h=r.leftEdge,a=r.rightEdge;h&&a&&this.edgeExceedsShortLineThreshold(h,e)&&this.edgeExceedsShortLineThreshold(a,e)&&this._processCandidateProposal(g(h.leftVertex.pos,o,e),g(a.rightVertex.pos,o,e),i,n,e,t);const m=s.edges[0];let l=m;do{if(l!==r.leftEdge&&l!==r.rightEdge&&this.edgeExceedsShortLineThreshold(l,e)){const f=$(l,o,e);this._processCandidateProposal(f.left,f.right,i,n,e,t)}l=l.rightVertex.rightEdge}while(l&&l!==m);return t}_processCandidateProposal(i,e,t,r,s,o){var m;const{spatialReference:p,pointer:n}=s,h=F();Ee(h,i,e,t,s);const a=C(z(h));y(r,x(a,p,u,this.view))<this.squaredProximityThreshold(n)&&o.push(new ee({lineStart:i,lineEnd:e,targetPoint:a,isDraped:((m=s.elevationInfo)==null?void 0:m.mode)==="on-the-ground"}))}}function Ee(d,i,e,t,r){we(d,i,e,t,r)||Ve(d,t,i,e)}function we(d,i,e,t,{spatialReference:r}){const s=R(i,e,r,r);if(s==null)return!1;const o=R(e,t,r,r);if(o==null)return!1;const p=U(e,t,r);if(p==null)return!1;const n=Math.abs(W.shortestSignedDiff(s,o))>Math.PI/2?H.normalize(s+Math.PI):s;return A(d,e,r,D(p,"meters"),b(n,"radians","geographic"),"geodesic"),d[2]=t[2],!0}function Ve(d,i,e,t){te(i,{start:e,end:t,type:ie.LINE},d),d[2]=i[2]}let Pe=class extends k{snapNewVertex(i,e){const t=e.editGeometryOperations.data.components[0],r=t.edges.length,s=t.vertices.length,o=[];if(r<2)return o;const{view:p}=this,n=x(i,e.spatialReference,u,p),h=g(t.vertices[s-1].pos,p,e),a=g(t.vertices[0].pos,p,e),m=t.edges[r-1];let l=m;do{if(this.edgeExceedsShortLineThreshold(l,e)){const f=$(l,p,e);this._checkEdgeForParallelLines(f,h,i,n,e,o),this._checkEdgeForParallelLines(f,a,i,n,e,o)}l=l.leftVertex.leftEdge}while(l&&l!==m);return o}snapExistingVertex(i,e){const t=[],r=e.vertexHandle,s=r.component;if(s.edges.length<3)return t;const{view:o}=this,p=x(i,e.spatialReference,u,o),n=r.leftEdge,h=r.rightEdge,a=s.vertices[0],m=g(a.pos,o,e),l=s.vertices.length,f=s.vertices[l-1],w=g(f.pos,o,e),_=s.edges[0];let v=_;do{if(v!==n&&v!==h&&this.edgeExceedsShortLineThreshold(v,e)){const T=$(v,o,e);n&&this._checkEdgeForParallelLines(T,g(n.leftVertex.pos,o,e),i,p,e,t),h&&this._checkEdgeForParallelLines(T,g(h.rightVertex.pos,o,e),i,p,e,t),r===a?this._checkEdgeForParallelLines(T,w,i,p,e,t):r===f&&this._checkEdgeForParallelLines(T,m,i,p,e,t)}v=v.rightVertex.rightEdge}while(v&&v!==_);return t}_checkEdgeForParallelLines(i,e,t,r,s,o){var l;const p=i.left,n=i.right;if(M(E,c(e),c(p),c(n)),K(E,c(e))<P.parallelLineThreshold)return;M(E,c(t),c(p),c(n),c(e));const{spatialReference:h,pointer:a}=s,m=C(j(E[0],E[1],t[2]));if(y(r,x(m,h,u,this.view))<this.squaredProximityThreshold(a)){if(this.isVertical(m,e,s)||this.isVertical(p,n,s)||ye(i,o))return;o.push(new re({referenceLine:i,lineStart:e,targetPoint:m,isDraped:((l=s.elevationInfo)==null?void 0:l.mode)==="on-the-ground"}))}}};function ye(d,i){const e=d.left,t=d.right;for(const r of i)if(M(E,c(t),c(r.constraint.start),c(r.constraint.end),c(e)),K(E,c(t))<P.parallelLineThreshold)return r.addReferenceLine(d),!0;return!1}const E=N();class _e extends k{snapNewVertex(i,e){const t=e.editGeometryOperations.data.components[0],r=[];if(t.vertices.length<2)return r;const{view:s}=this,o=x(i,e.spatialReference,u,s),p=t.vertices.at(-1);this._checkForSnappingCandidate(S.LastVertex,r,p.leftEdge,p,p.leftEdge.leftVertex,i,o,e);const n=t.vertices[0];return this._checkForSnappingCandidate(S.FirstVertex,r,n.rightEdge,n,n.rightEdge.rightVertex,i,o,e),r}snapExistingVertex(i,e){const t=[],r=e.vertexHandle;if(r.component.vertices.length<3)return t;const{view:s}=this,o=x(i,e.spatialReference,u,s),p=r.leftEdge,n=r.rightEdge;if(p!=null&&p.leftVertex.leftEdge){const h=p.leftVertex.leftEdge;this._checkForSnappingCandidate(S.ExistingEdge,t,h,h.rightVertex,h.leftVertex,i,o,e)}if(n!=null&&n.rightVertex.rightEdge){const h=n.rightVertex.rightEdge;this._checkForSnappingCandidate(S.ExistingEdge,t,h,h.leftVertex,h.rightVertex,i,o,e)}return t}_checkForSnappingCandidate(i,e,t,r,s,o,p,n){if(!this.edgeExceedsShortLineThreshold(t,n))return;const h=this.view,a=g(r.pos,h,n),m=g(s.pos,h,n);Te(O,m,a,o,n),this._checkForSnappingCandidateAlongProjectedRay(i,e,m,a,O,o,p,n)}_checkForSnappingCandidateAlongProjectedRay(i,e,t,r,s,o,p,n){var v;const{spatialReference:h,pointer:a}=n,m=Q(I,c(o),c(r)),l=le(s,m)/ce(s),f=me(I,c(r),s,l),w=C(j(f[0],f[1],o[2]));if(y(p,x(w,h,u,this.view))>this.squaredProximityThreshold(a)||this.isVertical(w,r,n)||this.isVertical(r,t,n))return;const _=fe(F(),r,s,Math.sign(l));e.push(new se({targetPoint:w,constraint:new oe(r,z(_)),previousVertex:t,otherVertex:r,otherVertexType:ne.CENTER,selfSnappingType:i,isDraped:((v=n.elevationInfo)==null?void 0:v.mode)==="on-the-ground"}))}}function Te(d,i,e,t,r){Le(d,i,e,t,r)||Se(d,i,e)}function Le(d,i,e,t,{spatialReference:r}){const s=R(i,e,r,r);if(s==null)return!1;const o=R(e,t,r,r);if(o==null)return!1;const p=Math.sign(H.shortestSignedDiff(s,o))*Math.PI*.5,n=b(s+p,"radians","geographic"),h=F(),a=U(e,t,r);return a!=null&&(A(h,e,r,D(a,"meters"),n,"geodesic"),ue(d,h,e),!0)}function Se(d,i,e){const t=Q(I,c(e),c(i));xe(d,t[1],-t[0],0)}const I=N(),O=F();let $e=class extends k{snapNewVertex(i,e){const t=e.editGeometryOperations.data.components[0],r=[],s=t.vertices.length;if(e.editGeometryOperations.data.type!=="polygon"||s<2)return r;const{view:o}=this,p=t.vertices[0],n=t.vertices[s-1],h=g(p.pos,o,e),a=g(n.pos,o,e);return this._processCandidateProposal(h,a,i,e,r),r}snapExistingVertex(i,e){const t=[],r=e.vertexHandle,s=r.component;if(s.edges.length<2||e.editGeometryOperations.data.type==="polyline"&&(r.index===0||r.index===s.vertices.length-1))return t;const{view:o}=this,p=g(r.leftEdge.leftVertex.pos,o,e),n=g(r.rightEdge.rightVertex.pos,o,e);return this._processCandidateProposal(p,n,i,e,t),t}_processCandidateProposal(i,e,t,r,s){var f;if(!this.exceedsShortLineThreshold(i,e,r))return;const o=ge(G,c(i),c(e),.5),p=.5*J(c(i),c(e)),n=pe(G,c(t),o,p),h=C(j(n[0],n[1],t[2])),{spatialReference:a,pointer:m}=r,l=x(t,a,u,this.view);if(y(l,x(h,a,u,this.view))<this.squaredProximityThreshold(m)){if(this.isVertical(i,h,r)||this.isVertical(h,e,r))return;s.push(new he({targetPoint:h,point1:i,point2:e,isDraped:((f=r.elevationInfo)==null?void 0:f.mode)==="on-the-ground"}))}}};const G=N();let V=class extends X{constructor(d){super(d),this.updating=!1,this._snappers=new Y,this._domain=ae.SELF}initialize(){this._snappers.push(new Pe(this.view,this.options),new ve(this.view,this.options),new _e(this.view,this.options),new $e(this.view,this.options))}set options(d){this._set("options",d);for(const i of this._snappers)i.options=d}async fetchCandidates(d,i,e){if(!(i&this._domain&&this.options.effectiveSelfEnabled))return[];const t=[];for(const r of this._snappers.items)for(const s of r.snap(d,e))t.push(s);return de(d,t),t}};L([q({readOnly:!0})],V.prototype,"updating",void 0),L([q({constructOnly:!0})],V.prototype,"view",void 0),L([q()],V.prototype,"options",null),V=L([Z("esri.views.interactive.snapping.SelfSnappingEngine")],V);export{V as SelfSnappingEngine};

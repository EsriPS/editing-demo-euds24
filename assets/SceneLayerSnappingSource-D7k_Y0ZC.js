import{dr as f,dP as b,F as o,G as n,K as y,L as w,cr as L,cc as H,gj as E,fi as _,hn as x,aF as I,cw as $}from"./index-C1aGfQcb.js";import{h as O}from"./UpdatingHandles-DOPUoIlu.js";import{h as k}from"./WorkerHandle-C-9ArUR4.js";import{t as h}from"./workerHelper-vJy25KAM.js";import{f as V}from"./edgeProcessing-CO1tnVAc.js";import{V as A}from"./sphere-DuEd_sPX.js";import{d as v,g as P,G as R}from"./Editor-BZKF0HZM.js";import{r as D}from"./VertexSnappingCandidate-CbF2FeQ4.js";import"./workers-CeelWDzo.js";import"./InterleavedLayout-Bb_2wUZe.js";import"./BufferView-sBvw8vqP.js";import"./vec2-D9okOEat.js";import"./vec32-CmwgPQMd.js";import"./vec42-BHDxGccW.js";import"./types-D0PSWh4d.js";import"./Util-BK6CBhAA.js";import"./vec2f64-CCfZVA9N.js";import"./vec4f64-o2zAXfmz.js";import"./deduplicate-Dq2CF0iu.js";import"./Indices-NXfq_dEG.js";import"./VertexAttribute-Cq4MnHjR.js";import"./glUtil-CFv2RXTA.js";import"./enums-Dk3osxpS.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./Normals-C9jd-OeY.js";import"./mat3-Dg2BrR6m.js";import"./mat3f64-q3fE-ZOt.js";import"./plane-CM4t6fNH.js";import"./mat4f64-Dk4dwAN8.js";import"./quatf64-aQ5IuZRd.js";import"./projectVectorToVector-Dtcb6Asj.js";import"./projectBuffer-CZ7yaGuo.js";import"./projectPointToVector-ByIVLKML.js";import"./projection-BOBOhWzm.js";import"./Spinner-CEWOvPN4.js";import"./AttachmentInfo-Cg9fIPGU.js";import"./legacyIcon-CEIp6Pa9.js";import"./FeatureLayerBase-BNIuOgAL.js";import"./commonProperties-Drl05DKJ.js";import"./ElevationInfo-D7CBP7sd.js";import"./lengthUtils-CFwdZ3dz.js";import"./HeightModelInfo-kVs8dE0B.js";import"./arcgisLayerUrl-BkZy4Mr3.js";import"./featureLayerUtils-Dy99w2fj.js";import"./Query-LPs1Zyw4.js";import"./FullTextSearch-Cza0yp3f.js";import"./TimeExtent-DGiXUfis.js";import"./timeUtils-X0MXjtQ8.js";import"./jsonUtils-CWFaUb2E.js";import"./UniqueValueRenderer-CAZbf8NT.js";import"./RendererLegendOptions-CULirduz.js";import"./diffUtils-DMLidw0V.js";import"./colorRamps-D4VCsfmX.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./visualVariableUtils-dx28E4EQ.js";import"./jsonUtils-BWWcP_yB.js";import"./defaults-Dbnhuv3C.js";import"./defaultsJSON-GKolV7NZ.js";import"./styleUtils-CEgUrR2a.js";import"./LRUCache-DbPTy7LA.js";import"./Version-DD-eRUXC.js";import"./FieldsIndex-BrdRr9E_.js";import"./UnknownTimeZone-DhxWDwo9.js";import"./OverrideHelper-D-UVQ00R.js";import"./colorUtils-BWiljOUv.js";import"./utils-D7agaEG-.js";import"./enums-CmIX1y88.js";import"./quantizationUtils-DbJV_fl5.js";import"./heatmapUtils-D0BPLm9w.js";import"./LayerFloorInfo-DzoJncEV.js";import"./Relationship-CBhq9gYu.js";import"./serviceCapabilitiesUtils-B23--4px.js";import"./arcade-DfpF5wFh.js";import"./TimeOnly-vNYE6bX9.js";import"./ImmutableArray-BPVd6ESQ.js";import"./FeatureLayer-DGRhhm0K.js";import"./MultiOriginJSONSupport-Qqzd52Lf.js";import"./Layer-CneDw8eF.js";import"./editsZScale-8GE3gysf.js";import"./queryZScale-D-ZT69l7.js";import"./FeatureSet-CeKoTEEO.js";import"./APIKeyMixin-BrvyKlIW.js";import"./ArcGISService-C1oUW8BT.js";import"./BlendLayer-CG9LFMxd.js";import"./jsonUtils-n3e_wlfQ.js";import"./parser-C4Qiz3JH.js";import"./utils-sqJe3zMg.js";import"./CustomParametersMixin-BhjpsNjD.js";import"./EditBusLayer-DCXZWvgn.js";import"./FeatureEffectLayer-gWJrS8gr.js";import"./FeatureEffect-B5YAe6Lk.js";import"./FeatureReductionLayer-DuxcLofN.js";import"./FeatureReductionSelection-tRCh97wj.js";import"./labelingInfo-BV0df7F6.js";import"./labelUtils-C_ZaLudT.js";import"./MD5-C9MwAd2G.js";import"./OperationalLayer-nNeN4Mrb.js";import"./OrderedLayer-B8Gw_A9P.js";import"./OrderByInfo-k2G4k_zV.js";import"./PortalLayer-Bqf_dhsv.js";import"./portalItemUtils-Cy9KvMYK.js";import"./RefreshableLayer-CwxQNwd3.js";import"./ScaleRangeLayer-66YiyNPI.js";import"./TemporalLayer-CR5q7V2k.js";import"./TimeInfo-CY1-cj-U.js";import"./FeatureTemplate-DJBXu3Te.js";import"./FeatureType-JHO2oVJp.js";import"./fieldProperties-CoDAhoou.js";import"./versionUtils-DBm9Te4x.js";import"./styleUtils-CFywnZa6.js";import"./popupUtils-BA1X4qoc.js";import"./AlphaCutoff-UcccL64p.js";import"./interfaces-CL2NbQte.js";import"./symbolUtils-BmmDXP-E.js";import"./utils-C2gvZghy.js";import"./mat2df32-BR-p9z6z.js";import"./webStyleSymbolUtils-kO7zmqzd.js";import"./GraphicsLayer-7fnK8PA0.js";import"./GraphicsCollection-BlUFPpxh.js";import"./elevationInfoUtils-DQT3uSQq.js";import"./screenUtils-CLE_gLy7.js";import"./signal-CRiDvIIF.js";import"./utils-CS8i_70G.js";import"./drapedUtils-BnpEPkkO.js";import"./infoFor3D-C0hFfS1m.js";import"./ViewingMode-HRfKv6NR.js";import"./utils-BQBvadb7.js";import"./widget-3rB5q3_K.js";import"./uploadAssetErrors-Cy9k5t87.js";import"./PointSnappingHint-DLpaNTCp.js";class j extends k{constructor(e){super("EdgeProcessingWorker","extract",{extract:r=>[r.dataBuffer],extractComponentsEdgeLocations:r=>[r.dataBuffer],extractEdgeLocations:r=>[r.dataBuffer]},e)}async process(e,r,i){return i?V(e):B(await this.invoke(new g(e),r))}async extractEdgeLocations(e,r){const i=await this.invokeMethod("extractEdgeLocations",new g(e),r);return h(i)}async extractComponentsEdgeLocations(e,r){const i=await this.invokeMethod("extractComponentsEdgeLocations",new g(e),r);return h(i)}}function B(t){return{regular:{instancesData:h(t.regular.instancesData),lodInfo:{lengths:new Float32Array(t.regular.lodInfo.lengths)}},silhouette:{instancesData:h(t.silhouette.instancesData),lodInfo:{lengths:new Float32Array(t.silhouette.lodInfo.lengths)}},averageEdgeLength:t.averageEdgeLength}}class g{constructor(e){this.dataBuffer=e.data.buffer,this.writerSettings=e.writerSettings,this.skipDeduplicate=e.skipDeduplicate,this.indices=f(e.indices)?e.indices:e.indices.buffer,this.indicesType=f(e.indices)?"Array":b(e.indices)?"Uint32Array":"Uint16Array",this.indicesLength=e.indicesLength}}let p=class extends w{constructor(t){super(t),this.availability=0,this._ids=new Set}destroy(){this._workerHandle.destroy(),this._workerHandle=null}initialize(){this._workerHandle=new W(this.schedule,{fetchAllEdgeLocations:(t,e)=>this._fetchAllEdgeLocations(t,e)})}async fetchCandidates(t,e){const r=t.coordinateHelper,{point:i}=t,s=F;this.renderCoordsHelper.toRenderCoords(i,r.spatialReference,s);const m=t.distance,d=typeof m=="number"?m:m.distance,l=await this._workerHandle.invoke({bounds:A(s[0],s[1],s[2],d),returnEdge:t.returnEdge,returnVertex:t.vertexMode!=="none"},e);return l.candidates.sort((u,C)=>u.distance-C.distance),l.candidates.map(u=>this._convertCandidate(r,u))}async add(t,e){this._ids.add(t.id),await this._workerHandle.invokeMethod("add",t,e)}async remove(t,e){this._ids.delete(t.id),await this._workerHandle.invokeMethod("remove",t,e)}_convertCandidate(t,e){switch(e.type){case"edge":return new P({objectId:e.objectId,targetPoint:v(this._convertRenderCoordinate(t,e.target)),edgeStart:this._convertRenderCoordinate(t,e.start),edgeEnd:this._convertRenderCoordinate(t,e.end),isDraped:!1});case"vertex":return new D({objectId:e.objectId,targetPoint:v(this._convertRenderCoordinate(t,e.target)),isDraped:!1})}}_convertRenderCoordinate({spatialReference:t},e){const r=L();return this.renderCoordsHelper.fromRenderCoords(e,r,t),R(r)}async _fetchAllEdgeLocations(t,e){const r=[],i=[];for(const{id:s,uid:m}of t.components)this._ids.has(s)&&r.push((async()=>{const d=await this.fetchEdgeLocations(s,e.signal),l=d.locations.buffer;return i.push(l),{id:s,uid:m,objectIds:d.objectIds,locations:l,origin:d.origin,type:d.type}})());return{result:{components:(await Promise.all(r)).filter(({id:s})=>this._ids.has(s))},transferList:i}}};o([n({constructOnly:!0})],p.prototype,"renderCoordsHelper",void 0),o([n({constructOnly:!0})],p.prototype,"fetchEdgeLocations",void 0),o([n({constructOnly:!0})],p.prototype,"schedule",void 0),o([n({readOnly:!0})],p.prototype,"availability",void 0),p=o([y("esri.views.interactive.snapping.featureSources.sceneLayerSource.SceneLayerSnappingSourceWorkerHandle")],p);let W=class extends k{constructor(e,r){super("SceneLayerSnappingSourceWorker","fetchCandidates",{},e,{strategy:"dedicated",client:r})}};const F=L();let a=class extends w{get updating(){return this._updatingHandles.updating}constructor(t){super(t),this.availability=1,this._updatingHandles=new O,this._abortController=new AbortController}destroy(){this._tracker=H(this._tracker),this._abortController=E(this._abortController),this._updatingHandles.destroy()}initialize(){const{view:t}=this,e=t.resourceController;this._edgeWorker=new j(S(e)),this._workerHandle=new p({renderCoordsHelper:this.view.renderCoordsHelper,schedule:S(e),fetchEdgeLocations:async(r,i)=>{if(this._tracker==null)throw new Error("tracker-not-initialized");return this._tracker.fetchEdgeLocations(r,this._edgeWorker,i)}}),this._updatingHandles.addPromise(this._setupLayerView()),this.addHandles([_(this._workerHandle),_(this._edgeWorker)])}async fetchCandidates(t,e){return this._workerHandle.fetchCandidates(t,e)}refresh(){}async _setupLayerView(){var r;if(this.destroyed)return;const t=(r=this._abortController)==null?void 0:r.signal,e=await this.getLayerView();e==null||x(t)||(this._tracker=e.trackSnappingSources({add:(i,s)=>{this._updatingHandles.addPromise(this._workerHandle.add({id:i,bounds:s},t))},remove:i=>{this._updatingHandles.addPromise(this._workerHandle.remove({id:i},t))}}))}};function S(t){return e=>t.immediate.schedule(e)}o([n({constructOnly:!0})],a.prototype,"getLayerView",void 0),o([n({constructOnly:!0})],a.prototype,"view",void 0),o([n({readOnly:!0})],a.prototype,"updating",null),o([n({readOnly:!0})],a.prototype,"availability",void 0),a=o([y("esri.views.interactive.snapping.featureSources.I3SSnappingSource")],a);let c=class extends w{get updating(){return this._i3sSources.some(t=>t.updating)}constructor(t){super(t),this.availability=1,this._i3sSources=[]}destroy(){this._i3sSources.forEach(t=>t.destroy()),this._i3sSources.length=0}initialize(){const{view:t}=this,e=this.layerSource.layer;this._i3sSources=e.type==="building-scene"?this._getBuildingSceneI3SSources(t,e):[this._getSceneLayerI3SSource(t,e)]}async fetchCandidates(t,e){const r=await Promise.all(this._i3sSources.map(i=>i.fetchCandidates(t,e)));return I(e),r.flat()}refresh(){this._i3sSources.forEach(t=>t.refresh())}_getBuildingSceneI3SSources(t,e){return e.allSublayers.toArray().map(r=>r.type==="building-component"?new a({getLayerView:async()=>(await t.whenLayerView(e)).whenSublayerView(r),view:t}):null).filter($)}_getSceneLayerI3SSource(t,e){return new a({getLayerView:async()=>{const r=await t.whenLayerView(e);return r.type==="scene-layer-graphics-3d"?void 0:r},view:t})}};o([n({constructOnly:!0})],c.prototype,"layerSource",void 0),o([n({constructOnly:!0})],c.prototype,"view",void 0),o([n({readOnly:!0})],c.prototype,"updating",null),o([n({readOnly:!0})],c.prototype,"availability",void 0),c=o([y("esri.views.interactive.snapping.featureSources.SceneLayerSnappingSource")],c);export{c as SceneLayerSnappingSource};

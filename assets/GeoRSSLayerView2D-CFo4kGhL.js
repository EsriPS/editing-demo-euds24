import{M as l,P as h,br as g,bc as f,F as w,K as d}from"./index-C1aGfQcb.js";import{t as u,p as n}from"./jsonUtils-CWFaUb2E.js";import{d as b}from"./FeatureSet-CeKoTEEO.js";import{j as V}from"./LayerView2D-_cD1rRgW.js";import{t as S}from"./GraphicContainer-CVlzYn8G.js";import{F as _}from"./GraphicsView2D-igLDaNxb.js";import{y as T}from"./LayerView-ClcY0vUI.js";import"./UniqueValueRenderer-CAZbf8NT.js";import"./RendererLegendOptions-CULirduz.js";import"./diffUtils-DMLidw0V.js";import"./colorRamps-D4VCsfmX.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./visualVariableUtils-dx28E4EQ.js";import"./lengthUtils-CFwdZ3dz.js";import"./jsonUtils-BWWcP_yB.js";import"./defaults-Dbnhuv3C.js";import"./defaultsJSON-GKolV7NZ.js";import"./styleUtils-CEgUrR2a.js";import"./LRUCache-DbPTy7LA.js";import"./Version-DD-eRUXC.js";import"./FieldsIndex-BrdRr9E_.js";import"./UnknownTimeZone-DhxWDwo9.js";import"./OverrideHelper-D-UVQ00R.js";import"./colorUtils-BWiljOUv.js";import"./vec42-BHDxGccW.js";import"./vec4f64-o2zAXfmz.js";import"./utils-D7agaEG-.js";import"./enums-CmIX1y88.js";import"./quantizationUtils-DbJV_fl5.js";import"./heatmapUtils-D0BPLm9w.js";import"./utils-BQBvadb7.js";import"./Container-DukYN7bA.js";import"./MapView-DMINGQ-3.js";import"./ColorBackground-BzAAhJtv.js";import"./CollectionFlattener-COw367kg.js";import"./basemapUtils-SfV6Ch_Z.js";import"./utils-sqJe3zMg.js";import"./TablesMixin-CmFQDxpI.js";import"./Layer-CneDw8eF.js";import"./TimeExtent-DGiXUfis.js";import"./timeUtils-X0MXjtQ8.js";import"./workers-CeelWDzo.js";import"./projection-BOBOhWzm.js";import"./projectBuffer-CZ7yaGuo.js";import"./TileInfo-C4AYiz3R.js";import"./TileKey-DZd6gJy7.js";import"./UpdatingHandles-DOPUoIlu.js";import"./screenUtils-CLE_gLy7.js";import"./signal-CRiDvIIF.js";import"./GraphicsCollection-BlUFPpxh.js";import"./HeightModelInfo-kVs8dE0B.js";import"./Query-LPs1Zyw4.js";import"./FullTextSearch-Cza0yp3f.js";import"./IViewEvents-Bci6PjlS.js";import"./mat2df64-B7VPBnkO.js";import"./a11yUtils-Tsw26pQ5.js";import"./heightModelInfoUtils-BhzRw8-2.js";import"./arcgisLayerUrl-BkZy4Mr3.js";import"./ViewingMode-HRfKv6NR.js";import"./vec2f64-CCfZVA9N.js";import"./vec2-D9okOEat.js";import"./mat2df32-BR-p9z6z.js";import"./normalizeUtils-Bg1OALXh.js";import"./normalizeUtilsCommon-UUlRRPVA.js";import"./utils-DGPHbhMN.js";import"./utils-ByvCMLXh.js";import"./mat3-Dg2BrR6m.js";import"./vec2f32-BbH2jxlN.js";import"./unitBezier-BX6NeAEr.js";import"./Scheduler-DS_v5N7L.js";import"./debugFlags-CfZYxH5Q.js";import"./Tile-9ZT_yo0a.js";import"./TileKey-C3cOKqPf.js";import"./QueueProcessor-8zZK2k9z.js";import"./quickselect-QQC62dOK.js";import"./vec32-CmwgPQMd.js";import"./definitions-C0Jy3zs7.js";import"./HighlightDefaults-D7TbvM-a.js";import"./enums-Dk3osxpS.js";import"./Texture-CLoEFKJJ.js";import"./imageUtils-DpI9AOR9.js";import"./capabilities-A2uoe7dc.js";import"./themeUtils-C3zvZbsE.js";import"./accessibleHandler-CubitGf2.js";import"./GoTo-H_qEVlhS.js";import"./ZoomViewModel-BtZMM985.js";import"./utils-CS8i_70G.js";import"./EffectView-Di3KCO94.js";import"./parser-C4Qiz3JH.js";import"./AGraphicContainer-Be74AnP4.js";import"./TechniqueInstance-Ct6vq7te.js";import"./UpdateTracking2D-Do-Jp4xp.js";import"./BindType-BmZEZMMh.js";import"./Util-BK6CBhAA.js";import"./Program-B50gSpr4.js";import"./BufferObject-C4qiEJeh.js";import"./LabelMetric-BbDPE4Hv.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BoundingBox-CnpCxTZE.js";import"./TileContainer-ChXztKMJ.js";import"./WGLContainer-Bti4JDk_.js";import"./VertexArrayObject-CzGu5bI8.js";import"./ProgramTemplate-FAwkPdO7.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-BTt_i6C1.js";import"./config-MDUrh2eL.js";import"./earcut-Lltz9D9k.js";import"./featureConversionUtils-C-Uqf9Q4.js";import"./OptimizedFeature-swgcyHeh.js";import"./OptimizedGeometry-C9mSZhHi.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./FeatureCommandQueue-DFtBlGYR.js";import"./CIMSymbolHelper-CkjLOfcU.js";import"./BidiEngine-DNnuvc1i.js";import"./fontUtils-BVEStqBT.js";import"./GeometryUtils-Bkk2TwKC.js";import"./Rect-CUzevAry.js";import"./constants-F8oTIn7N.js";import"./AttributeStore-DoHrhu85.js";import"./TimeOnly-vNYE6bX9.js";import"./centroid-DdLmOD72.js";import"./labelUtils-C_ZaLudT.js";import"./queryUtils-DfwPGxwH.js";import"./json-Wa8cmqdu.js";import"./timeSupport-DZeNU3Q4.js";import"./normalizeUtilsSync-DxE8L4Ib.js";let y=class extends V(T){constructor(){super(...arguments),this._graphicsViewMap={},this._popupTemplates=new Map,this.graphicsViews=[]}async hitTest(t,o){if(!this.graphicsViews.length)return null;const p=this.layer;return this.graphicsViews.reverse().flatMap(r=>{const i=this._popupTemplates.get(r),e=r.hitTest(t);for(const m of e)m.layer=p,m.sourceLayer=p,m.popupTemplate=i;return e}).map(r=>({type:"graphic",graphic:r,layer:p,mapPoint:t}))}update(t){if(this.graphicsViews)for(const o of this.graphicsViews)o.processUpdate(t)}attach(){this.addAttachHandles([l(()=>{var t;return(t=this.layer)==null?void 0:t.featureCollections},t=>{this._clear();for(const{popupInfo:o,featureSet:p,layerDefinition:r}of t){const i=b.fromJSON(p),e=new g(i.features),m=r.drawingInfo,c=o?f.fromJSON(o):null,s=u(m.renderer),a=new _({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:e,renderer:s,container:new S(this.view.featuresTilingScheme)});this._graphicsViewMap[i.geometryType]=a,this._popupTemplates.set(a,c),i.geometryType!=="polygon"||this.layer.polygonSymbol?i.geometryType!=="polyline"||this.layer.lineSymbol?i.geometryType!=="point"||this.layer.pointSymbol||(this.layer.pointSymbol=s.symbol):this.layer.lineSymbol=s.symbol:this.layer.polygonSymbol=s.symbol,this.graphicsViews.push(a),this.container.addChild(a.container)}},h),l(()=>{var t;return(t=this.layer)==null?void 0:t.polygonSymbol},t=>{this._graphicsViewMap.polygon.renderer=new n({symbol:t})},h),l(()=>{var t;return(t=this.layer)==null?void 0:t.lineSymbol},t=>{this._graphicsViewMap.polyline.renderer=new n({symbol:t})},h),l(()=>{var t;return(t=this.layer)==null?void 0:t.pointSymbol},t=>{this._graphicsViewMap.point.renderer=new n({symbol:t})},h)])}detach(){this._clear()}moveEnd(){}viewChange(){for(const t of this.graphicsViews)t.viewChange()}_clear(){this.container.removeAllChildren();for(const t of this.graphicsViews)t.destroy();this._graphicsViewMap={},this._popupTemplates.clear(),this.graphicsViews.length=0}};y=w([d("esri.views.2d.layers.GeoRSSLayerView2D")],y);const Ei=y;export{Ei as default};

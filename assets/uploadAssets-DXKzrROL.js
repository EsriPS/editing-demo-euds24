import{aY as y,aR as f,aF as l,b3 as E,d0 as W,b8 as _,fW as G,eh as V,aH as Y,fV as K,aA as Q}from"./index-C1aGfQcb.js";import{m as X,b as Z,a as N,i as R,N as ee}from"./External-BqB6mKNo.js";import{r as se,n as te,a as oe,d as ae,c as U,l as ne,t as re,u as ie,p as ce}from"./uploadAssetErrors-Cy9k5t87.js";import{i as w,h as le,e as A,m as ue,a as pe}from"./progressUtils-wtUH52Ad.js";import{g as me}from"./arcgisLayerUrl-BkZy4Mr3.js";import{m as fe,l as de,s as ge,u as ye,a as we}from"./infoFor3D-C0hFfS1m.js";import{i as he,n as Pe}from"./meshFeatureAttributes-CPkebRY9.js";import"./MeshTransform-CQofocAh.js";import"./mat4f64-Dk4dwAN8.js";import"./quat-D8-cBF-l.js";import"./mat3f64-q3fE-ZOt.js";import"./quatf64-aQ5IuZRd.js";import"./vec32-CmwgPQMd.js";import"./vec42-BHDxGccW.js";import"./axisAngleDegrees-C6bqw-Uy.js";const D=1e6,x=20*D,Te=2e9,be=3;async function Ae({data:s,name:t,description:e},o,a){let r=null;try{const n=y(o,"uploads"),i=y(n,"info"),{data:u}=await f(i,{query:{f:"json"},responseType:"json"});l(a);const d=me(o),g=u.maxUploadFileSize*D,p=d?Te:g,c=d?Math.min(x,g):x;if(s.size>p)throw new Error("Data too large");const k=y(n,"register"),{data:j}=await f(k,{query:{f:"json",itemName:je(t),description:e},responseType:"json",method:"post"});if(l(a),!j.success)throw new Error("Registration failed");const{itemID:z}=j.item;r=y(n,z);const B=y(r,"uploadPart"),F=Math.ceil(s.size/c),h=new Array;for(let m=0;m<F;++m)h.push(s.slice(m*c,Math.min((m+1)*c,s.size)));const P=h.slice().reverse(),v=new Array,L=w(F,a==null?void 0:a.onProgress,"uploadItem"),M=async()=>{for(;P.length!==0;){const m=h.length-P.length,T=P.pop(),b=new FormData,$=L.simulate(m,le(T.size));try{b.append("f","json"),b.append("file",T),b.append("partId",`${m}`);const{data:J}=await f(B,{timeout:0,body:b,responseType:"json",method:"post"});if(l(a),!J.success)throw new Error("Part upload failed")}finally{$.remove()}}};for(let m=0;m<be&&P.length!==0;++m)v.push(M());await Promise.all(v);const H=y(r,"commit"),{data:S}=await f(H,{query:{f:"json",parts:h.map((m,T)=>T).join(",")},responseType:"json",method:"post"});if(l(a),!S.success)throw new Error("Commit failed");return S.item}catch(n){if(r!=null){const i=y(r,"delete");await f(i,{query:{f:"json"},responseType:"json",method:"post"})}throw n}}function je(s){return s.replaceAll("/","_").replaceAll("\\","_")}async function rs(s,t,e){var r;const o=s.length;if(!o)return(r=e==null?void 0:e.onProgress)==null||r.call(e,1),[];const a=w(o,e==null?void 0:e.onProgress,"uploadAssets");return Promise.all(s.map((n,i)=>Fe(n,t,{...e,onProgress:a.makeOnProgress(i)})))}async function Fe(s,{layer:t,ongoingUploads:e},o){var n;const a=e.get(s);if(a)return a;if(!He(t))throw new se;if(ve(s,t))return(n=o==null?void 0:o.onProgress)==null||n.call(o,1),s;const r=Se(s,t,o);e.set(s,r);try{await r}finally{e.delete(s)}return s}function ve(s,t){const{parsedUrl:e}=t;return e!=null&&s.metadata.externalSources.some(o=>X(o,e))}async function Se(s,t,e){const{metadata:o}=s,{displaySource:a}=o,r=I(a==null?void 0:a.source,t,{checkForConversionRequired:E("enable-feature:georeferenced-uploads")}),n=r!=null?xe(r,t,e):o.externalSources.length>0?Ee(s,t,e):Ne(s,t,e),i=await n;return l(e),s.addExternalSources([i]),s}async function xe(s,t,e){return{source:await q(s,t,e),original:!0}}async function Ee(s,t,e){const o=C(t),{externalSources:a}=s.metadata,r=Ue(a,t);if(!r)throw new te;const n=w(A.uploadConvertibleSource,e==null?void 0:e.onProgress,"uploadConvertibleSource"),i=await q(r,t,{onProgress:n.makeOnProgress("uploadEditSource")});s.addExternalSources([{source:i,original:!0}]);const u=r.reduce((g,{asset:p})=>p instanceof File?g+p.size:g,0),d=n.simulate("serviceAssetsToGlb",ue(u));try{const{source:g,transform:p,origin:c}=await ze(i,t,o);return E("enable-feature:georeferenced-uploads")&&p&&(s.transform=p,c&&(s.metadata.georeferenced=!0,e!=null&&e.useAssetOrigin&&(s.vertexSpace.origin=[c.x,c.y,c.z??0],s.spatialReference=c.spatialReference))),{source:g}}finally{d.remove()}}async function Ne(s,t,e){const o=w(A.uploadLocalMesh,e==null?void 0:e.onProgress,"uploadLocalMesh"),a=Re(s,t,{...e,onProgress:o.makeOnProgress("meshToAssetBlob")});return{source:await O([a],t,{...e,onProgress:o.makeOnProgress("uploadAssetBlobs")}),extent:s.extent.clone(),original:!0}}async function Re(s,t,e){const o=C(t),a=await s.load(e),r=await a.toBinaryGLTF({origin:a.origin,signal:e==null?void 0:e.signal,ignoreLocalTransform:!0});return l(e),{blob:new Blob([r],{type:"model/gltf-binary"}),assetName:`${W()}.glb`,assetType:o}}function Ue(s,t){for(const e of s){const o=I(e.source,t);if(o)return o}return null}function I(s,{infoFor3D:t},e={}){if(!s)return null;const{supportedFormats:o,editFormats:a}=t,r=ee(s),n=new Array,i=fe(t),u=de(t);let d=!1;for(const g of r){const p=De(g,o);if(!p)return null;const{assetType:c}=p;if(e.checkForConversionRequired&&(c===i||c===u))return null;a.includes(c)&&(d=!0),n.push(p)}return d?n:null}function De(s,t){const e=Z(s,t);return e?{asset:s,assetType:e}:null}async function q(s,t,e){return O(s.map(o=>Ie(o,e)),t,e)}async function O(s,t,e){const o=w(A.uploadAssetBlobs,e==null?void 0:e.onProgress,"uploadAssetBlobs"),a=await Oe(s,t,{...e,onProgress:o.makeOnProgress("prepareAssetItems")});l(e);const r=a.map(({item:i})=>i),{uploadResults:n}=await Ce(r,t,{...e,onProgress:o.makeOnProgress("uploadAssetItems")});return l(e),s.map((i,u)=>ke(a[u],n[u],t))}async function Ie(s,t){const{asset:e,assetType:o}=s;if(e instanceof File)return{blob:e,assetName:e.name,assetType:o};const a=await e.toBlob(t);return l(t),{blob:a,assetName:e.assetName,assetType:o}}async function qe(s,t,e){const{blob:o,assetType:a,assetName:r}=s;let n=null;try{const i=await Ae({data:o,name:r},t.url,e);l(e),n={assetType:a,assetUploadId:i.itemID}}catch(i){Y(i),$e().warnOnce(`Service ${t.url} does not support the REST Uploads API.`)}if(!n){const i=await K(o);if(l(e),!i.isBase64)throw new ie;n={assetType:a,assetData:i.data}}if(!n)throw new ce;return{item:n,assetName:r}}function Oe(s,t,e){const o=w(s.length,e==null?void 0:e.onProgress,"prepareAssetItems");return Promise.all(s.map(async(a,r)=>{const n=qe(await a,t,{...e,onProgress:o.makeOnProgress(r)});return l(e),n}))}async function Ce(s,t,e){const o=pe(e==null?void 0:e.onProgress);try{const a=await f(y(t.parsedUrl.path,"uploadAssets"),{timeout:0,query:{f:"json",assets:JSON.stringify(s)},method:"post",responseType:"json"});if(l(e),a.data.uploadResults.length!==s.length)throw new oe(s.length,a.data.uploadResults.length);return a.data}finally{o.remove()}}function ke(s,t,e){const{success:o}=t;if(!o){const{error:d}=t;throw new ae(s.assetName,d)}const{assetHash:a}=t,{assetName:r,item:{assetType:n}}=s,{infoFor3D:{supportedFormats:i}}=e,u=ge(n,i);if(!u)throw new U(n);return new N(r,u,[new R(`${e.parsedUrl.path}/assets/${a}`,a)])}async function ze(s,t,e){var r;const o=s.map(({assetName:n,parts:i})=>({assetName:n,assetHash:i[0].partHash}));let a;try{const n=y(t.parsedUrl.path,"convert3D"),i=(r=t.capabilities)==null?void 0:r.operations.supportsAsyncConvert3D;a=(await(i?Me:Le)(n,{query:{f:"json",assets:JSON.stringify(o),transportType:"esriTransportTypeUrl",targetFormat:e,async:i},responseType:"json",timeout:0})).data}catch{throw new ne}return Be(a,t.infoFor3D)}function Be(s,{supportedFormats:t}){const e={source:s.assets.map(o=>{const a=ye(o.contentType,t);if(!a)throw new U(a);return new N(o.assetName,o.contentType,[new R(o.assetURL,o.assetHash)])}),origin:void 0,transform:void 0};if(s.transform&&(e.transform=he(s.transform),s.spatialReference)){const o=_.fromJSON(s.spatialReference);e.origin=Pe(s.transform,o)}return e}function Le(s,t){return f(s,t)}async function Me(s,t){const e=(await f(s,t)).data.statusUrl;for(;;){const o=(await f(e,{query:{f:"json"},responseType:"json"})).data;switch(o.status){case"Completed":return f(o.resultUrl,{query:{f:"json"},responseType:"json"});case"CompletedWithErrors":throw new Error(o.status);case"Failed ImportChanges":case"InProgress":case"Pending":case"ExportAttachments":case"ExportChanges":case"ExportingData":case"ExportingSnapshot":case"ImportAttachments":case"ProvisioningReplica":case"UnRegisteringReplica":break;default:throw new Error}await G(Je)}}function He(s){return!!s.infoFor3D&&!!s.url}function C({infoFor3D:s}){const t=we(s);if(!t)throw new re;return t}function $e(){return Q.getLogger("esri.layers.graphics.sources.support.uploadAssets")}const Je=V(1e3);export{rs as uploadAssets};
